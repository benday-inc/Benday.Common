### YamlMime:XRefMap
sorted: true
references:
- uid: Benday.Common
  name: Benday.Common
  href: api/Benday.Common.html
  commentId: N:Benday.Common
  fullName: Benday.Common
  nameWithType: Benday.Common
- uid: Benday.Common.ConfigurationExtensionMethods
  name: ConfigurationExtensionMethods
  href: api/Benday.Common.ConfigurationExtensionMethods.html
  commentId: T:Benday.Common.ConfigurationExtensionMethods
  fullName: Benday.Common.ConfigurationExtensionMethods
  nameWithType: ConfigurationExtensionMethods
- uid: Benday.Common.ConfigurationExtensionMethods.GetStringThrowIfNullOrEmpty(Microsoft.Extensions.Configuration.IConfiguration,System.String)
  name: GetStringThrowIfNullOrEmpty(IConfiguration, string)
  href: api/Benday.Common.ConfigurationExtensionMethods.html#Benday_Common_ConfigurationExtensionMethods_GetStringThrowIfNullOrEmpty_Microsoft_Extensions_Configuration_IConfiguration_System_String_
  commentId: M:Benday.Common.ConfigurationExtensionMethods.GetStringThrowIfNullOrEmpty(Microsoft.Extensions.Configuration.IConfiguration,System.String)
  name.vb: GetStringThrowIfNullOrEmpty(IConfiguration, String)
  fullName: Benday.Common.ConfigurationExtensionMethods.GetStringThrowIfNullOrEmpty(Microsoft.Extensions.Configuration.IConfiguration, string)
  fullName.vb: Benday.Common.ConfigurationExtensionMethods.GetStringThrowIfNullOrEmpty(Microsoft.Extensions.Configuration.IConfiguration, String)
  nameWithType: ConfigurationExtensionMethods.GetStringThrowIfNullOrEmpty(IConfiguration, string)
  nameWithType.vb: ConfigurationExtensionMethods.GetStringThrowIfNullOrEmpty(IConfiguration, String)
- uid: Benday.Common.ConfigurationExtensionMethods.GetStringThrowIfNullOrEmpty*
  name: GetStringThrowIfNullOrEmpty
  href: api/Benday.Common.ConfigurationExtensionMethods.html#Benday_Common_ConfigurationExtensionMethods_GetStringThrowIfNullOrEmpty_
  commentId: Overload:Benday.Common.ConfigurationExtensionMethods.GetStringThrowIfNullOrEmpty
  isSpec: "True"
  fullName: Benday.Common.ConfigurationExtensionMethods.GetStringThrowIfNullOrEmpty
  nameWithType: ConfigurationExtensionMethods.GetStringThrowIfNullOrEmpty
- uid: Benday.Common.ConfigurationExtensionMethods.SafeGetString(Microsoft.Extensions.Configuration.IConfiguration,System.String,System.String)
  name: SafeGetString(IConfiguration, string, string)
  href: api/Benday.Common.ConfigurationExtensionMethods.html#Benday_Common_ConfigurationExtensionMethods_SafeGetString_Microsoft_Extensions_Configuration_IConfiguration_System_String_System_String_
  commentId: M:Benday.Common.ConfigurationExtensionMethods.SafeGetString(Microsoft.Extensions.Configuration.IConfiguration,System.String,System.String)
  name.vb: SafeGetString(IConfiguration, String, String)
  fullName: Benday.Common.ConfigurationExtensionMethods.SafeGetString(Microsoft.Extensions.Configuration.IConfiguration, string, string)
  fullName.vb: Benday.Common.ConfigurationExtensionMethods.SafeGetString(Microsoft.Extensions.Configuration.IConfiguration, String, String)
  nameWithType: ConfigurationExtensionMethods.SafeGetString(IConfiguration, string, string)
  nameWithType.vb: ConfigurationExtensionMethods.SafeGetString(IConfiguration, String, String)
- uid: Benday.Common.ConfigurationExtensionMethods.SafeGetString*
  name: SafeGetString
  href: api/Benday.Common.ConfigurationExtensionMethods.html#Benday_Common_ConfigurationExtensionMethods_SafeGetString_
  commentId: Overload:Benday.Common.ConfigurationExtensionMethods.SafeGetString
  isSpec: "True"
  fullName: Benday.Common.ConfigurationExtensionMethods.SafeGetString
  nameWithType: ConfigurationExtensionMethods.SafeGetString
- uid: Benday.Common.ConfigurationExtensions
  name: ConfigurationExtensions
  href: api/Benday.Common.ConfigurationExtensions.html
  commentId: T:Benday.Common.ConfigurationExtensions
  fullName: Benday.Common.ConfigurationExtensions
  nameWithType: ConfigurationExtensions
- uid: Benday.Common.ConfigurationExtensions.GetStringThrowIfNullOrEmpty(Microsoft.Extensions.Configuration.IConfiguration,System.String)
  name: GetStringThrowIfNullOrEmpty(IConfiguration, string)
  href: api/Benday.Common.ConfigurationExtensions.html#Benday_Common_ConfigurationExtensions_GetStringThrowIfNullOrEmpty_Microsoft_Extensions_Configuration_IConfiguration_System_String_
  commentId: M:Benday.Common.ConfigurationExtensions.GetStringThrowIfNullOrEmpty(Microsoft.Extensions.Configuration.IConfiguration,System.String)
  name.vb: GetStringThrowIfNullOrEmpty(IConfiguration, String)
  fullName: Benday.Common.ConfigurationExtensions.GetStringThrowIfNullOrEmpty(Microsoft.Extensions.Configuration.IConfiguration, string)
  fullName.vb: Benday.Common.ConfigurationExtensions.GetStringThrowIfNullOrEmpty(Microsoft.Extensions.Configuration.IConfiguration, String)
  nameWithType: ConfigurationExtensions.GetStringThrowIfNullOrEmpty(IConfiguration, string)
  nameWithType.vb: ConfigurationExtensions.GetStringThrowIfNullOrEmpty(IConfiguration, String)
- uid: Benday.Common.ConfigurationExtensions.GetStringThrowIfNullOrEmpty*
  name: GetStringThrowIfNullOrEmpty
  href: api/Benday.Common.ConfigurationExtensions.html#Benday_Common_ConfigurationExtensions_GetStringThrowIfNullOrEmpty_
  commentId: Overload:Benday.Common.ConfigurationExtensions.GetStringThrowIfNullOrEmpty
  isSpec: "True"
  fullName: Benday.Common.ConfigurationExtensions.GetStringThrowIfNullOrEmpty
  nameWithType: ConfigurationExtensions.GetStringThrowIfNullOrEmpty
- uid: Benday.Common.ConfigurationExtensions.SafeGetString(Microsoft.Extensions.Configuration.IConfiguration,System.String,System.String)
  name: SafeGetString(IConfiguration, string, string)
  href: api/Benday.Common.ConfigurationExtensions.html#Benday_Common_ConfigurationExtensions_SafeGetString_Microsoft_Extensions_Configuration_IConfiguration_System_String_System_String_
  commentId: M:Benday.Common.ConfigurationExtensions.SafeGetString(Microsoft.Extensions.Configuration.IConfiguration,System.String,System.String)
  name.vb: SafeGetString(IConfiguration, String, String)
  fullName: Benday.Common.ConfigurationExtensions.SafeGetString(Microsoft.Extensions.Configuration.IConfiguration, string, string)
  fullName.vb: Benday.Common.ConfigurationExtensions.SafeGetString(Microsoft.Extensions.Configuration.IConfiguration, String, String)
  nameWithType: ConfigurationExtensions.SafeGetString(IConfiguration, string, string)
  nameWithType.vb: ConfigurationExtensions.SafeGetString(IConfiguration, String, String)
- uid: Benday.Common.ConfigurationExtensions.SafeGetString*
  name: SafeGetString
  href: api/Benday.Common.ConfigurationExtensions.html#Benday_Common_ConfigurationExtensions_SafeGetString_
  commentId: Overload:Benday.Common.ConfigurationExtensions.SafeGetString
  isSpec: "True"
  fullName: Benday.Common.ConfigurationExtensions.SafeGetString
  nameWithType: ConfigurationExtensions.SafeGetString
- uid: Benday.Common.IDeleteable
  name: IDeleteable
  href: api/Benday.Common.IDeleteable.html
  commentId: T:Benday.Common.IDeleteable
  fullName: Benday.Common.IDeleteable
  nameWithType: IDeleteable
- uid: Benday.Common.IDeleteable.IsMarkedForDelete
  name: IsMarkedForDelete
  href: api/Benday.Common.IDeleteable.html#Benday_Common_IDeleteable_IsMarkedForDelete
  commentId: P:Benday.Common.IDeleteable.IsMarkedForDelete
  fullName: Benday.Common.IDeleteable.IsMarkedForDelete
  nameWithType: IDeleteable.IsMarkedForDelete
- uid: Benday.Common.IDeleteable.IsMarkedForDelete*
  name: IsMarkedForDelete
  href: api/Benday.Common.IDeleteable.html#Benday_Common_IDeleteable_IsMarkedForDelete_
  commentId: Overload:Benday.Common.IDeleteable.IsMarkedForDelete
  isSpec: "True"
  fullName: Benday.Common.IDeleteable.IsMarkedForDelete
  nameWithType: IDeleteable.IsMarkedForDelete
- uid: Benday.Common.IInt32Identity
  name: IInt32Identity
  href: api/Benday.Common.IInt32Identity.html
  commentId: T:Benday.Common.IInt32Identity
  fullName: Benday.Common.IInt32Identity
  nameWithType: IInt32Identity
- uid: Benday.Common.IInt32Identity.Id
  name: Id
  href: api/Benday.Common.IInt32Identity.html#Benday_Common_IInt32Identity_Id
  commentId: P:Benday.Common.IInt32Identity.Id
  fullName: Benday.Common.IInt32Identity.Id
  nameWithType: IInt32Identity.Id
- uid: Benday.Common.IInt32Identity.Id*
  name: Id
  href: api/Benday.Common.IInt32Identity.html#Benday_Common_IInt32Identity_Id_
  commentId: Overload:Benday.Common.IInt32Identity.Id
  isSpec: "True"
  fullName: Benday.Common.IInt32Identity.Id
  nameWithType: IInt32Identity.Id
- uid: Benday.Common.IPageableResults
  name: IPageableResults
  href: api/Benday.Common.IPageableResults.html
  commentId: T:Benday.Common.IPageableResults
  fullName: Benday.Common.IPageableResults
  nameWithType: IPageableResults
- uid: Benday.Common.IPageableResults.CurrentPage
  name: CurrentPage
  href: api/Benday.Common.IPageableResults.html#Benday_Common_IPageableResults_CurrentPage
  commentId: P:Benday.Common.IPageableResults.CurrentPage
  fullName: Benday.Common.IPageableResults.CurrentPage
  nameWithType: IPageableResults.CurrentPage
- uid: Benday.Common.IPageableResults.CurrentPage*
  name: CurrentPage
  href: api/Benday.Common.IPageableResults.html#Benday_Common_IPageableResults_CurrentPage_
  commentId: Overload:Benday.Common.IPageableResults.CurrentPage
  isSpec: "True"
  fullName: Benday.Common.IPageableResults.CurrentPage
  nameWithType: IPageableResults.CurrentPage
- uid: Benday.Common.IPageableResults.ItemsPerPage
  name: ItemsPerPage
  href: api/Benday.Common.IPageableResults.html#Benday_Common_IPageableResults_ItemsPerPage
  commentId: P:Benday.Common.IPageableResults.ItemsPerPage
  fullName: Benday.Common.IPageableResults.ItemsPerPage
  nameWithType: IPageableResults.ItemsPerPage
- uid: Benday.Common.IPageableResults.ItemsPerPage*
  name: ItemsPerPage
  href: api/Benday.Common.IPageableResults.html#Benday_Common_IPageableResults_ItemsPerPage_
  commentId: Overload:Benday.Common.IPageableResults.ItemsPerPage
  isSpec: "True"
  fullName: Benday.Common.IPageableResults.ItemsPerPage
  nameWithType: IPageableResults.ItemsPerPage
- uid: Benday.Common.IPageableResults.PageCount
  name: PageCount
  href: api/Benday.Common.IPageableResults.html#Benday_Common_IPageableResults_PageCount
  commentId: P:Benday.Common.IPageableResults.PageCount
  fullName: Benday.Common.IPageableResults.PageCount
  nameWithType: IPageableResults.PageCount
- uid: Benday.Common.IPageableResults.PageCount*
  name: PageCount
  href: api/Benday.Common.IPageableResults.html#Benday_Common_IPageableResults_PageCount_
  commentId: Overload:Benday.Common.IPageableResults.PageCount
  isSpec: "True"
  fullName: Benday.Common.IPageableResults.PageCount
  nameWithType: IPageableResults.PageCount
- uid: Benday.Common.IPageableResults.TotalCount
  name: TotalCount
  href: api/Benday.Common.IPageableResults.html#Benday_Common_IPageableResults_TotalCount
  commentId: P:Benday.Common.IPageableResults.TotalCount
  fullName: Benday.Common.IPageableResults.TotalCount
  nameWithType: IPageableResults.TotalCount
- uid: Benday.Common.IPageableResults.TotalCount*
  name: TotalCount
  href: api/Benday.Common.IPageableResults.html#Benday_Common_IPageableResults_TotalCount_
  commentId: Overload:Benday.Common.IPageableResults.TotalCount
  isSpec: "True"
  fullName: Benday.Common.IPageableResults.TotalCount
  nameWithType: IPageableResults.TotalCount
- uid: Benday.Common.ISelectable
  name: ISelectable
  href: api/Benday.Common.ISelectable.html
  commentId: T:Benday.Common.ISelectable
  fullName: Benday.Common.ISelectable
  nameWithType: ISelectable
- uid: Benday.Common.ISelectable.IsSelected
  name: IsSelected
  href: api/Benday.Common.ISelectable.html#Benday_Common_ISelectable_IsSelected
  commentId: P:Benday.Common.ISelectable.IsSelected
  fullName: Benday.Common.ISelectable.IsSelected
  nameWithType: ISelectable.IsSelected
- uid: Benday.Common.ISelectable.IsSelected*
  name: IsSelected
  href: api/Benday.Common.ISelectable.html#Benday_Common_ISelectable_IsSelected_
  commentId: Overload:Benday.Common.ISelectable.IsSelected
  isSpec: "True"
  fullName: Benday.Common.ISelectable.IsSelected
  nameWithType: ISelectable.IsSelected
- uid: Benday.Common.ISortableResult
  name: ISortableResult
  href: api/Benday.Common.ISortableResult.html
  commentId: T:Benday.Common.ISortableResult
  fullName: Benday.Common.ISortableResult
  nameWithType: ISortableResult
- uid: Benday.Common.ISortableResult.CurrentSortDirection
  name: CurrentSortDirection
  href: api/Benday.Common.ISortableResult.html#Benday_Common_ISortableResult_CurrentSortDirection
  commentId: P:Benday.Common.ISortableResult.CurrentSortDirection
  fullName: Benday.Common.ISortableResult.CurrentSortDirection
  nameWithType: ISortableResult.CurrentSortDirection
- uid: Benday.Common.ISortableResult.CurrentSortDirection*
  name: CurrentSortDirection
  href: api/Benday.Common.ISortableResult.html#Benday_Common_ISortableResult_CurrentSortDirection_
  commentId: Overload:Benday.Common.ISortableResult.CurrentSortDirection
  isSpec: "True"
  fullName: Benday.Common.ISortableResult.CurrentSortDirection
  nameWithType: ISortableResult.CurrentSortDirection
- uid: Benday.Common.ISortableResult.CurrentSortProperty
  name: CurrentSortProperty
  href: api/Benday.Common.ISortableResult.html#Benday_Common_ISortableResult_CurrentSortProperty
  commentId: P:Benday.Common.ISortableResult.CurrentSortProperty
  fullName: Benday.Common.ISortableResult.CurrentSortProperty
  nameWithType: ISortableResult.CurrentSortProperty
- uid: Benday.Common.ISortableResult.CurrentSortProperty*
  name: CurrentSortProperty
  href: api/Benday.Common.ISortableResult.html#Benday_Common_ISortableResult_CurrentSortProperty_
  commentId: Overload:Benday.Common.ISortableResult.CurrentSortProperty
  isSpec: "True"
  fullName: Benday.Common.ISortableResult.CurrentSortProperty
  nameWithType: ISortableResult.CurrentSortProperty
- uid: Benday.Common.IStringIdentity
  name: IStringIdentity
  href: api/Benday.Common.IStringIdentity.html
  commentId: T:Benday.Common.IStringIdentity
  fullName: Benday.Common.IStringIdentity
  nameWithType: IStringIdentity
- uid: Benday.Common.IStringIdentity.Id
  name: Id
  href: api/Benday.Common.IStringIdentity.html#Benday_Common_IStringIdentity_Id
  commentId: P:Benday.Common.IStringIdentity.Id
  fullName: Benday.Common.IStringIdentity.Id
  nameWithType: IStringIdentity.Id
- uid: Benday.Common.IStringIdentity.Id*
  name: Id
  href: api/Benday.Common.IStringIdentity.html#Benday_Common_IStringIdentity_Id_
  commentId: Overload:Benday.Common.IStringIdentity.Id
  isSpec: "True"
  fullName: Benday.Common.IStringIdentity.Id
  nameWithType: IStringIdentity.Id
- uid: Benday.Common.ITypeRegistrationItem
  name: ITypeRegistrationItem
  href: api/Benday.Common.ITypeRegistrationItem.html
  commentId: T:Benday.Common.ITypeRegistrationItem
  fullName: Benday.Common.ITypeRegistrationItem
  nameWithType: ITypeRegistrationItem
- uid: Benday.Common.ITypeRegistrationItem.ImplementationType
  name: ImplementationType
  href: api/Benday.Common.ITypeRegistrationItem.html#Benday_Common_ITypeRegistrationItem_ImplementationType
  commentId: P:Benday.Common.ITypeRegistrationItem.ImplementationType
  fullName: Benday.Common.ITypeRegistrationItem.ImplementationType
  nameWithType: ITypeRegistrationItem.ImplementationType
- uid: Benday.Common.ITypeRegistrationItem.ImplementationType*
  name: ImplementationType
  href: api/Benday.Common.ITypeRegistrationItem.html#Benday_Common_ITypeRegistrationItem_ImplementationType_
  commentId: Overload:Benday.Common.ITypeRegistrationItem.ImplementationType
  isSpec: "True"
  fullName: Benday.Common.ITypeRegistrationItem.ImplementationType
  nameWithType: ITypeRegistrationItem.ImplementationType
- uid: Benday.Common.ITypeRegistrationItem.Lifetime
  name: Lifetime
  href: api/Benday.Common.ITypeRegistrationItem.html#Benday_Common_ITypeRegistrationItem_Lifetime
  commentId: P:Benday.Common.ITypeRegistrationItem.Lifetime
  fullName: Benday.Common.ITypeRegistrationItem.Lifetime
  nameWithType: ITypeRegistrationItem.Lifetime
- uid: Benday.Common.ITypeRegistrationItem.Lifetime*
  name: Lifetime
  href: api/Benday.Common.ITypeRegistrationItem.html#Benday_Common_ITypeRegistrationItem_Lifetime_
  commentId: Overload:Benday.Common.ITypeRegistrationItem.Lifetime
  isSpec: "True"
  fullName: Benday.Common.ITypeRegistrationItem.Lifetime
  nameWithType: ITypeRegistrationItem.Lifetime
- uid: Benday.Common.ITypeRegistrationItem.ServiceType
  name: ServiceType
  href: api/Benday.Common.ITypeRegistrationItem.html#Benday_Common_ITypeRegistrationItem_ServiceType
  commentId: P:Benday.Common.ITypeRegistrationItem.ServiceType
  fullName: Benday.Common.ITypeRegistrationItem.ServiceType
  nameWithType: ITypeRegistrationItem.ServiceType
- uid: Benday.Common.ITypeRegistrationItem.ServiceType*
  name: ServiceType
  href: api/Benday.Common.ITypeRegistrationItem.html#Benday_Common_ITypeRegistrationItem_ServiceType_
  commentId: Overload:Benday.Common.ITypeRegistrationItem.ServiceType
  isSpec: "True"
  fullName: Benday.Common.ITypeRegistrationItem.ServiceType
  nameWithType: ITypeRegistrationItem.ServiceType
- uid: Benday.Common.PageableResults`1
  name: PageableResults<T>
  href: api/Benday.Common.PageableResults-1.html
  commentId: T:Benday.Common.PageableResults`1
  name.vb: PageableResults(Of T)
  fullName: Benday.Common.PageableResults<T>
  fullName.vb: Benday.Common.PageableResults(Of T)
  nameWithType: PageableResults<T>
  nameWithType.vb: PageableResults(Of T)
- uid: Benday.Common.PageableResults`1.#ctor
  name: PageableResults()
  href: api/Benday.Common.PageableResults-1.html#Benday_Common_PageableResults_1__ctor
  commentId: M:Benday.Common.PageableResults`1.#ctor
  name.vb: New()
  fullName: Benday.Common.PageableResults<T>.PageableResults()
  fullName.vb: Benday.Common.PageableResults(Of T).New()
  nameWithType: PageableResults<T>.PageableResults()
  nameWithType.vb: PageableResults(Of T).New()
- uid: Benday.Common.PageableResults`1.#ctor*
  name: PageableResults
  href: api/Benday.Common.PageableResults-1.html#Benday_Common_PageableResults_1__ctor_
  commentId: Overload:Benday.Common.PageableResults`1.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Benday.Common.PageableResults<T>.PageableResults
  fullName.vb: Benday.Common.PageableResults(Of T).New
  nameWithType: PageableResults<T>.PageableResults
  nameWithType.vb: PageableResults(Of T).New
- uid: Benday.Common.PageableResults`1.CurrentPage
  name: CurrentPage
  href: api/Benday.Common.PageableResults-1.html#Benday_Common_PageableResults_1_CurrentPage
  commentId: P:Benday.Common.PageableResults`1.CurrentPage
  fullName: Benday.Common.PageableResults<T>.CurrentPage
  fullName.vb: Benday.Common.PageableResults(Of T).CurrentPage
  nameWithType: PageableResults<T>.CurrentPage
  nameWithType.vb: PageableResults(Of T).CurrentPage
- uid: Benday.Common.PageableResults`1.CurrentPage*
  name: CurrentPage
  href: api/Benday.Common.PageableResults-1.html#Benday_Common_PageableResults_1_CurrentPage_
  commentId: Overload:Benday.Common.PageableResults`1.CurrentPage
  isSpec: "True"
  fullName: Benday.Common.PageableResults<T>.CurrentPage
  fullName.vb: Benday.Common.PageableResults(Of T).CurrentPage
  nameWithType: PageableResults<T>.CurrentPage
  nameWithType.vb: PageableResults(Of T).CurrentPage
- uid: Benday.Common.PageableResults`1.Initialize(System.Collections.Generic.IList{`0})
  name: Initialize(IList<T>)
  href: api/Benday.Common.PageableResults-1.html#Benday_Common_PageableResults_1_Initialize_System_Collections_Generic_IList__0__
  commentId: M:Benday.Common.PageableResults`1.Initialize(System.Collections.Generic.IList{`0})
  name.vb: Initialize(IList(Of T))
  fullName: Benday.Common.PageableResults<T>.Initialize(System.Collections.Generic.IList<T>)
  fullName.vb: Benday.Common.PageableResults(Of T).Initialize(System.Collections.Generic.IList(Of T))
  nameWithType: PageableResults<T>.Initialize(IList<T>)
  nameWithType.vb: PageableResults(Of T).Initialize(IList(Of T))
- uid: Benday.Common.PageableResults`1.Initialize*
  name: Initialize
  href: api/Benday.Common.PageableResults-1.html#Benday_Common_PageableResults_1_Initialize_
  commentId: Overload:Benday.Common.PageableResults`1.Initialize
  isSpec: "True"
  fullName: Benday.Common.PageableResults<T>.Initialize
  fullName.vb: Benday.Common.PageableResults(Of T).Initialize
  nameWithType: PageableResults<T>.Initialize
  nameWithType.vb: PageableResults(Of T).Initialize
- uid: Benday.Common.PageableResults`1.ItemsPerPage
  name: ItemsPerPage
  href: api/Benday.Common.PageableResults-1.html#Benday_Common_PageableResults_1_ItemsPerPage
  commentId: P:Benday.Common.PageableResults`1.ItemsPerPage
  fullName: Benday.Common.PageableResults<T>.ItemsPerPage
  fullName.vb: Benday.Common.PageableResults(Of T).ItemsPerPage
  nameWithType: PageableResults<T>.ItemsPerPage
  nameWithType.vb: PageableResults(Of T).ItemsPerPage
- uid: Benday.Common.PageableResults`1.ItemsPerPage*
  name: ItemsPerPage
  href: api/Benday.Common.PageableResults-1.html#Benday_Common_PageableResults_1_ItemsPerPage_
  commentId: Overload:Benday.Common.PageableResults`1.ItemsPerPage
  isSpec: "True"
  fullName: Benday.Common.PageableResults<T>.ItemsPerPage
  fullName.vb: Benday.Common.PageableResults(Of T).ItemsPerPage
  nameWithType: PageableResults<T>.ItemsPerPage
  nameWithType.vb: PageableResults(Of T).ItemsPerPage
- uid: Benday.Common.PageableResults`1.PageCount
  name: PageCount
  href: api/Benday.Common.PageableResults-1.html#Benday_Common_PageableResults_1_PageCount
  commentId: P:Benday.Common.PageableResults`1.PageCount
  fullName: Benday.Common.PageableResults<T>.PageCount
  fullName.vb: Benday.Common.PageableResults(Of T).PageCount
  nameWithType: PageableResults<T>.PageCount
  nameWithType.vb: PageableResults(Of T).PageCount
- uid: Benday.Common.PageableResults`1.PageCount*
  name: PageCount
  href: api/Benday.Common.PageableResults-1.html#Benday_Common_PageableResults_1_PageCount_
  commentId: Overload:Benday.Common.PageableResults`1.PageCount
  isSpec: "True"
  fullName: Benday.Common.PageableResults<T>.PageCount
  fullName.vb: Benday.Common.PageableResults(Of T).PageCount
  nameWithType: PageableResults<T>.PageCount
  nameWithType.vb: PageableResults(Of T).PageCount
- uid: Benday.Common.PageableResults`1.PageValues
  name: PageValues
  href: api/Benday.Common.PageableResults-1.html#Benday_Common_PageableResults_1_PageValues
  commentId: P:Benday.Common.PageableResults`1.PageValues
  fullName: Benday.Common.PageableResults<T>.PageValues
  fullName.vb: Benday.Common.PageableResults(Of T).PageValues
  nameWithType: PageableResults<T>.PageValues
  nameWithType.vb: PageableResults(Of T).PageValues
- uid: Benday.Common.PageableResults`1.PageValues*
  name: PageValues
  href: api/Benday.Common.PageableResults-1.html#Benday_Common_PageableResults_1_PageValues_
  commentId: Overload:Benday.Common.PageableResults`1.PageValues
  isSpec: "True"
  fullName: Benday.Common.PageableResults<T>.PageValues
  fullName.vb: Benday.Common.PageableResults(Of T).PageValues
  nameWithType: PageableResults<T>.PageValues
  nameWithType.vb: PageableResults(Of T).PageValues
- uid: Benday.Common.PageableResults`1.Results
  name: Results
  href: api/Benday.Common.PageableResults-1.html#Benday_Common_PageableResults_1_Results
  commentId: P:Benday.Common.PageableResults`1.Results
  fullName: Benday.Common.PageableResults<T>.Results
  fullName.vb: Benday.Common.PageableResults(Of T).Results
  nameWithType: PageableResults<T>.Results
  nameWithType.vb: PageableResults(Of T).Results
- uid: Benday.Common.PageableResults`1.Results*
  name: Results
  href: api/Benday.Common.PageableResults-1.html#Benday_Common_PageableResults_1_Results_
  commentId: Overload:Benday.Common.PageableResults`1.Results
  isSpec: "True"
  fullName: Benday.Common.PageableResults<T>.Results
  fullName.vb: Benday.Common.PageableResults(Of T).Results
  nameWithType: PageableResults<T>.Results
  nameWithType.vb: PageableResults(Of T).Results
- uid: Benday.Common.PageableResults`1.TotalCount
  name: TotalCount
  href: api/Benday.Common.PageableResults-1.html#Benday_Common_PageableResults_1_TotalCount
  commentId: P:Benday.Common.PageableResults`1.TotalCount
  fullName: Benday.Common.PageableResults<T>.TotalCount
  fullName.vb: Benday.Common.PageableResults(Of T).TotalCount
  nameWithType: PageableResults<T>.TotalCount
  nameWithType.vb: PageableResults(Of T).TotalCount
- uid: Benday.Common.PageableResults`1.TotalCount*
  name: TotalCount
  href: api/Benday.Common.PageableResults-1.html#Benday_Common_PageableResults_1_TotalCount_
  commentId: Overload:Benday.Common.PageableResults`1.TotalCount
  isSpec: "True"
  fullName: Benday.Common.PageableResults<T>.TotalCount
  fullName.vb: Benday.Common.PageableResults(Of T).TotalCount
  nameWithType: PageableResults<T>.TotalCount
  nameWithType.vb: PageableResults(Of T).TotalCount
- uid: Benday.Common.ProcessRunner
  name: ProcessRunner
  href: api/Benday.Common.ProcessRunner.html
  commentId: T:Benday.Common.ProcessRunner
  fullName: Benday.Common.ProcessRunner
  nameWithType: ProcessRunner
- uid: Benday.Common.ProcessRunner.#ctor(System.Diagnostics.ProcessStartInfo)
  name: ProcessRunner(ProcessStartInfo)
  href: api/Benday.Common.ProcessRunner.html#Benday_Common_ProcessRunner__ctor_System_Diagnostics_ProcessStartInfo_
  commentId: M:Benday.Common.ProcessRunner.#ctor(System.Diagnostics.ProcessStartInfo)
  name.vb: New(ProcessStartInfo)
  fullName: Benday.Common.ProcessRunner.ProcessRunner(System.Diagnostics.ProcessStartInfo)
  fullName.vb: Benday.Common.ProcessRunner.New(System.Diagnostics.ProcessStartInfo)
  nameWithType: ProcessRunner.ProcessRunner(ProcessStartInfo)
  nameWithType.vb: ProcessRunner.New(ProcessStartInfo)
- uid: Benday.Common.ProcessRunner.#ctor*
  name: ProcessRunner
  href: api/Benday.Common.ProcessRunner.html#Benday_Common_ProcessRunner__ctor_
  commentId: Overload:Benday.Common.ProcessRunner.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Benday.Common.ProcessRunner.ProcessRunner
  fullName.vb: Benday.Common.ProcessRunner.New
  nameWithType: ProcessRunner.ProcessRunner
  nameWithType.vb: ProcessRunner.New
- uid: Benday.Common.ProcessRunner.ErrorText
  name: ErrorText
  href: api/Benday.Common.ProcessRunner.html#Benday_Common_ProcessRunner_ErrorText
  commentId: P:Benday.Common.ProcessRunner.ErrorText
  fullName: Benday.Common.ProcessRunner.ErrorText
  nameWithType: ProcessRunner.ErrorText
- uid: Benday.Common.ProcessRunner.ErrorText*
  name: ErrorText
  href: api/Benday.Common.ProcessRunner.html#Benday_Common_ProcessRunner_ErrorText_
  commentId: Overload:Benday.Common.ProcessRunner.ErrorText
  isSpec: "True"
  fullName: Benday.Common.ProcessRunner.ErrorText
  nameWithType: ProcessRunner.ErrorText
- uid: Benday.Common.ProcessRunner.HasCompleted
  name: HasCompleted
  href: api/Benday.Common.ProcessRunner.html#Benday_Common_ProcessRunner_HasCompleted
  commentId: P:Benday.Common.ProcessRunner.HasCompleted
  fullName: Benday.Common.ProcessRunner.HasCompleted
  nameWithType: ProcessRunner.HasCompleted
- uid: Benday.Common.ProcessRunner.HasCompleted*
  name: HasCompleted
  href: api/Benday.Common.ProcessRunner.html#Benday_Common_ProcessRunner_HasCompleted_
  commentId: Overload:Benday.Common.ProcessRunner.HasCompleted
  isSpec: "True"
  fullName: Benday.Common.ProcessRunner.HasCompleted
  nameWithType: ProcessRunner.HasCompleted
- uid: Benday.Common.ProcessRunner.IsError
  name: IsError
  href: api/Benday.Common.ProcessRunner.html#Benday_Common_ProcessRunner_IsError
  commentId: P:Benday.Common.ProcessRunner.IsError
  fullName: Benday.Common.ProcessRunner.IsError
  nameWithType: ProcessRunner.IsError
- uid: Benday.Common.ProcessRunner.IsError*
  name: IsError
  href: api/Benday.Common.ProcessRunner.html#Benday_Common_ProcessRunner_IsError_
  commentId: Overload:Benday.Common.ProcessRunner.IsError
  isSpec: "True"
  fullName: Benday.Common.ProcessRunner.IsError
  nameWithType: ProcessRunner.IsError
- uid: Benday.Common.ProcessRunner.IsSuccess
  name: IsSuccess
  href: api/Benday.Common.ProcessRunner.html#Benday_Common_ProcessRunner_IsSuccess
  commentId: P:Benday.Common.ProcessRunner.IsSuccess
  fullName: Benday.Common.ProcessRunner.IsSuccess
  nameWithType: ProcessRunner.IsSuccess
- uid: Benday.Common.ProcessRunner.IsSuccess*
  name: IsSuccess
  href: api/Benday.Common.ProcessRunner.html#Benday_Common_ProcessRunner_IsSuccess_
  commentId: Overload:Benday.Common.ProcessRunner.IsSuccess
  isSpec: "True"
  fullName: Benday.Common.ProcessRunner.IsSuccess
  nameWithType: ProcessRunner.IsSuccess
- uid: Benday.Common.ProcessRunner.IsTimeout
  name: IsTimeout
  href: api/Benday.Common.ProcessRunner.html#Benday_Common_ProcessRunner_IsTimeout
  commentId: P:Benday.Common.ProcessRunner.IsTimeout
  fullName: Benday.Common.ProcessRunner.IsTimeout
  nameWithType: ProcessRunner.IsTimeout
- uid: Benday.Common.ProcessRunner.IsTimeout*
  name: IsTimeout
  href: api/Benday.Common.ProcessRunner.html#Benday_Common_ProcessRunner_IsTimeout_
  commentId: Overload:Benday.Common.ProcessRunner.IsTimeout
  isSpec: "True"
  fullName: Benday.Common.ProcessRunner.IsTimeout
  nameWithType: ProcessRunner.IsTimeout
- uid: Benday.Common.ProcessRunner.OutputText
  name: OutputText
  href: api/Benday.Common.ProcessRunner.html#Benday_Common_ProcessRunner_OutputText
  commentId: P:Benday.Common.ProcessRunner.OutputText
  fullName: Benday.Common.ProcessRunner.OutputText
  nameWithType: ProcessRunner.OutputText
- uid: Benday.Common.ProcessRunner.OutputText*
  name: OutputText
  href: api/Benday.Common.ProcessRunner.html#Benday_Common_ProcessRunner_OutputText_
  commentId: Overload:Benday.Common.ProcessRunner.OutputText
  isSpec: "True"
  fullName: Benday.Common.ProcessRunner.OutputText
  nameWithType: ProcessRunner.OutputText
- uid: Benday.Common.ProcessRunner.Run
  name: Run()
  href: api/Benday.Common.ProcessRunner.html#Benday_Common_ProcessRunner_Run
  commentId: M:Benday.Common.ProcessRunner.Run
  fullName: Benday.Common.ProcessRunner.Run()
  nameWithType: ProcessRunner.Run()
- uid: Benday.Common.ProcessRunner.Run*
  name: Run
  href: api/Benday.Common.ProcessRunner.html#Benday_Common_ProcessRunner_Run_
  commentId: Overload:Benday.Common.ProcessRunner.Run
  isSpec: "True"
  fullName: Benday.Common.ProcessRunner.Run
  nameWithType: ProcessRunner.Run
- uid: Benday.Common.ProcessRunner.StartInfo
  name: StartInfo
  href: api/Benday.Common.ProcessRunner.html#Benday_Common_ProcessRunner_StartInfo
  commentId: P:Benday.Common.ProcessRunner.StartInfo
  fullName: Benday.Common.ProcessRunner.StartInfo
  nameWithType: ProcessRunner.StartInfo
- uid: Benday.Common.ProcessRunner.StartInfo*
  name: StartInfo
  href: api/Benday.Common.ProcessRunner.html#Benday_Common_ProcessRunner_StartInfo_
  commentId: Overload:Benday.Common.ProcessRunner.StartInfo
  isSpec: "True"
  fullName: Benday.Common.ProcessRunner.StartInfo
  nameWithType: ProcessRunner.StartInfo
- uid: Benday.Common.ProcessRunner.Timeout
  name: Timeout
  href: api/Benday.Common.ProcessRunner.html#Benday_Common_ProcessRunner_Timeout
  commentId: P:Benday.Common.ProcessRunner.Timeout
  fullName: Benday.Common.ProcessRunner.Timeout
  nameWithType: ProcessRunner.Timeout
- uid: Benday.Common.ProcessRunner.Timeout*
  name: Timeout
  href: api/Benday.Common.ProcessRunner.html#Benday_Common_ProcessRunner_Timeout_
  commentId: Overload:Benday.Common.ProcessRunner.Timeout
  isSpec: "True"
  fullName: Benday.Common.ProcessRunner.Timeout
  nameWithType: ProcessRunner.Timeout
- uid: Benday.Common.Search
  name: Search
  href: api/Benday.Common.Search.html
  commentId: T:Benday.Common.Search
  fullName: Benday.Common.Search
  nameWithType: Search
- uid: Benday.Common.Search.#ctor
  name: Search()
  href: api/Benday.Common.Search.html#Benday_Common_Search__ctor
  commentId: M:Benday.Common.Search.#ctor
  name.vb: New()
  fullName: Benday.Common.Search.Search()
  fullName.vb: Benday.Common.Search.New()
  nameWithType: Search.Search()
  nameWithType.vb: Search.New()
- uid: Benday.Common.Search.#ctor*
  name: Search
  href: api/Benday.Common.Search.html#Benday_Common_Search__ctor_
  commentId: Overload:Benday.Common.Search.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Benday.Common.Search.Search
  fullName.vb: Benday.Common.Search.New
  nameWithType: Search.Search
  nameWithType.vb: Search.New
- uid: Benday.Common.Search.AddArgument(System.String,Benday.Common.SearchMethod,System.Int32,Benday.Common.SearchOperator)
  name: AddArgument(string, SearchMethod, int, SearchOperator)
  href: api/Benday.Common.Search.html#Benday_Common_Search_AddArgument_System_String_Benday_Common_SearchMethod_System_Int32_Benday_Common_SearchOperator_
  commentId: M:Benday.Common.Search.AddArgument(System.String,Benday.Common.SearchMethod,System.Int32,Benday.Common.SearchOperator)
  name.vb: AddArgument(String, SearchMethod, Integer, SearchOperator)
  fullName: Benday.Common.Search.AddArgument(string, Benday.Common.SearchMethod, int, Benday.Common.SearchOperator)
  fullName.vb: Benday.Common.Search.AddArgument(String, Benday.Common.SearchMethod, Integer, Benday.Common.SearchOperator)
  nameWithType: Search.AddArgument(string, SearchMethod, int, SearchOperator)
  nameWithType.vb: Search.AddArgument(String, SearchMethod, Integer, SearchOperator)
- uid: Benday.Common.Search.AddArgument(System.String,Benday.Common.SearchMethod,System.String,Benday.Common.SearchOperator)
  name: AddArgument(string, SearchMethod, string, SearchOperator)
  href: api/Benday.Common.Search.html#Benday_Common_Search_AddArgument_System_String_Benday_Common_SearchMethod_System_String_Benday_Common_SearchOperator_
  commentId: M:Benday.Common.Search.AddArgument(System.String,Benday.Common.SearchMethod,System.String,Benday.Common.SearchOperator)
  name.vb: AddArgument(String, SearchMethod, String, SearchOperator)
  fullName: Benday.Common.Search.AddArgument(string, Benday.Common.SearchMethod, string, Benday.Common.SearchOperator)
  fullName.vb: Benday.Common.Search.AddArgument(String, Benday.Common.SearchMethod, String, Benday.Common.SearchOperator)
  nameWithType: Search.AddArgument(string, SearchMethod, string, SearchOperator)
  nameWithType.vb: Search.AddArgument(String, SearchMethod, String, SearchOperator)
- uid: Benday.Common.Search.AddArgument*
  name: AddArgument
  href: api/Benday.Common.Search.html#Benday_Common_Search_AddArgument_
  commentId: Overload:Benday.Common.Search.AddArgument
  isSpec: "True"
  fullName: Benday.Common.Search.AddArgument
  nameWithType: Search.AddArgument
- uid: Benday.Common.Search.AddSort(System.String,System.String)
  name: AddSort(string, string)
  href: api/Benday.Common.Search.html#Benday_Common_Search_AddSort_System_String_System_String_
  commentId: M:Benday.Common.Search.AddSort(System.String,System.String)
  name.vb: AddSort(String, String)
  fullName: Benday.Common.Search.AddSort(string, string)
  fullName.vb: Benday.Common.Search.AddSort(String, String)
  nameWithType: Search.AddSort(string, string)
  nameWithType.vb: Search.AddSort(String, String)
- uid: Benday.Common.Search.AddSort*
  name: AddSort
  href: api/Benday.Common.Search.html#Benday_Common_Search_AddSort_
  commentId: Overload:Benday.Common.Search.AddSort
  isSpec: "True"
  fullName: Benday.Common.Search.AddSort
  nameWithType: Search.AddSort
- uid: Benday.Common.Search.Arguments
  name: Arguments
  href: api/Benday.Common.Search.html#Benday_Common_Search_Arguments
  commentId: P:Benday.Common.Search.Arguments
  fullName: Benday.Common.Search.Arguments
  nameWithType: Search.Arguments
- uid: Benday.Common.Search.Arguments*
  name: Arguments
  href: api/Benday.Common.Search.html#Benday_Common_Search_Arguments_
  commentId: Overload:Benday.Common.Search.Arguments
  isSpec: "True"
  fullName: Benday.Common.Search.Arguments
  nameWithType: Search.Arguments
- uid: Benday.Common.Search.MaxNumberOfResults
  name: MaxNumberOfResults
  href: api/Benday.Common.Search.html#Benday_Common_Search_MaxNumberOfResults
  commentId: P:Benday.Common.Search.MaxNumberOfResults
  fullName: Benday.Common.Search.MaxNumberOfResults
  nameWithType: Search.MaxNumberOfResults
- uid: Benday.Common.Search.MaxNumberOfResults*
  name: MaxNumberOfResults
  href: api/Benday.Common.Search.html#Benday_Common_Search_MaxNumberOfResults_
  commentId: Overload:Benday.Common.Search.MaxNumberOfResults
  isSpec: "True"
  fullName: Benday.Common.Search.MaxNumberOfResults
  nameWithType: Search.MaxNumberOfResults
- uid: Benday.Common.Search.Name
  name: Name
  href: api/Benday.Common.Search.html#Benday_Common_Search_Name
  commentId: P:Benday.Common.Search.Name
  fullName: Benday.Common.Search.Name
  nameWithType: Search.Name
- uid: Benday.Common.Search.Name*
  name: Name
  href: api/Benday.Common.Search.html#Benday_Common_Search_Name_
  commentId: Overload:Benday.Common.Search.Name
  isSpec: "True"
  fullName: Benday.Common.Search.Name
  nameWithType: Search.Name
- uid: Benday.Common.Search.Sorts
  name: Sorts
  href: api/Benday.Common.Search.html#Benday_Common_Search_Sorts
  commentId: P:Benday.Common.Search.Sorts
  fullName: Benday.Common.Search.Sorts
  nameWithType: Search.Sorts
- uid: Benday.Common.Search.Sorts*
  name: Sorts
  href: api/Benday.Common.Search.html#Benday_Common_Search_Sorts_
  commentId: Overload:Benday.Common.Search.Sorts
  isSpec: "True"
  fullName: Benday.Common.Search.Sorts
  nameWithType: Search.Sorts
- uid: Benday.Common.SearchArgument
  name: SearchArgument
  href: api/Benday.Common.SearchArgument.html
  commentId: T:Benday.Common.SearchArgument
  fullName: Benday.Common.SearchArgument
  nameWithType: SearchArgument
- uid: Benday.Common.SearchArgument.#ctor(System.String,Benday.Common.SearchMethod,System.Int32,Benday.Common.SearchOperator)
  name: SearchArgument(string, SearchMethod, int, SearchOperator)
  href: api/Benday.Common.SearchArgument.html#Benday_Common_SearchArgument__ctor_System_String_Benday_Common_SearchMethod_System_Int32_Benday_Common_SearchOperator_
  commentId: M:Benday.Common.SearchArgument.#ctor(System.String,Benday.Common.SearchMethod,System.Int32,Benday.Common.SearchOperator)
  name.vb: New(String, SearchMethod, Integer, SearchOperator)
  fullName: Benday.Common.SearchArgument.SearchArgument(string, Benday.Common.SearchMethod, int, Benday.Common.SearchOperator)
  fullName.vb: Benday.Common.SearchArgument.New(String, Benday.Common.SearchMethod, Integer, Benday.Common.SearchOperator)
  nameWithType: SearchArgument.SearchArgument(string, SearchMethod, int, SearchOperator)
  nameWithType.vb: SearchArgument.New(String, SearchMethod, Integer, SearchOperator)
- uid: Benday.Common.SearchArgument.#ctor(System.String,Benday.Common.SearchMethod,System.String,Benday.Common.SearchOperator)
  name: SearchArgument(string, SearchMethod, string, SearchOperator)
  href: api/Benday.Common.SearchArgument.html#Benday_Common_SearchArgument__ctor_System_String_Benday_Common_SearchMethod_System_String_Benday_Common_SearchOperator_
  commentId: M:Benday.Common.SearchArgument.#ctor(System.String,Benday.Common.SearchMethod,System.String,Benday.Common.SearchOperator)
  name.vb: New(String, SearchMethod, String, SearchOperator)
  fullName: Benday.Common.SearchArgument.SearchArgument(string, Benday.Common.SearchMethod, string, Benday.Common.SearchOperator)
  fullName.vb: Benday.Common.SearchArgument.New(String, Benday.Common.SearchMethod, String, Benday.Common.SearchOperator)
  nameWithType: SearchArgument.SearchArgument(string, SearchMethod, string, SearchOperator)
  nameWithType.vb: SearchArgument.New(String, SearchMethod, String, SearchOperator)
- uid: Benday.Common.SearchArgument.#ctor*
  name: SearchArgument
  href: api/Benday.Common.SearchArgument.html#Benday_Common_SearchArgument__ctor_
  commentId: Overload:Benday.Common.SearchArgument.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Benday.Common.SearchArgument.SearchArgument
  fullName.vb: Benday.Common.SearchArgument.New
  nameWithType: SearchArgument.SearchArgument
  nameWithType.vb: SearchArgument.New
- uid: Benday.Common.SearchArgument.Method
  name: Method
  href: api/Benday.Common.SearchArgument.html#Benday_Common_SearchArgument_Method
  commentId: P:Benday.Common.SearchArgument.Method
  fullName: Benday.Common.SearchArgument.Method
  nameWithType: SearchArgument.Method
- uid: Benday.Common.SearchArgument.Method*
  name: Method
  href: api/Benday.Common.SearchArgument.html#Benday_Common_SearchArgument_Method_
  commentId: Overload:Benday.Common.SearchArgument.Method
  isSpec: "True"
  fullName: Benday.Common.SearchArgument.Method
  nameWithType: SearchArgument.Method
- uid: Benday.Common.SearchArgument.Operator
  name: Operator
  href: api/Benday.Common.SearchArgument.html#Benday_Common_SearchArgument_Operator
  commentId: P:Benday.Common.SearchArgument.Operator
  fullName: Benday.Common.SearchArgument.Operator
  nameWithType: SearchArgument.Operator
- uid: Benday.Common.SearchArgument.Operator*
  name: Operator
  href: api/Benday.Common.SearchArgument.html#Benday_Common_SearchArgument_Operator_
  commentId: Overload:Benday.Common.SearchArgument.Operator
  isSpec: "True"
  fullName: Benday.Common.SearchArgument.Operator
  nameWithType: SearchArgument.Operator
- uid: Benday.Common.SearchArgument.PropertyName
  name: PropertyName
  href: api/Benday.Common.SearchArgument.html#Benday_Common_SearchArgument_PropertyName
  commentId: P:Benday.Common.SearchArgument.PropertyName
  fullName: Benday.Common.SearchArgument.PropertyName
  nameWithType: SearchArgument.PropertyName
- uid: Benday.Common.SearchArgument.PropertyName*
  name: PropertyName
  href: api/Benday.Common.SearchArgument.html#Benday_Common_SearchArgument_PropertyName_
  commentId: Overload:Benday.Common.SearchArgument.PropertyName
  isSpec: "True"
  fullName: Benday.Common.SearchArgument.PropertyName
  nameWithType: SearchArgument.PropertyName
- uid: Benday.Common.SearchArgument.SearchValue
  name: SearchValue
  href: api/Benday.Common.SearchArgument.html#Benday_Common_SearchArgument_SearchValue
  commentId: P:Benday.Common.SearchArgument.SearchValue
  fullName: Benday.Common.SearchArgument.SearchValue
  nameWithType: SearchArgument.SearchValue
- uid: Benday.Common.SearchArgument.SearchValue*
  name: SearchValue
  href: api/Benday.Common.SearchArgument.html#Benday_Common_SearchArgument_SearchValue_
  commentId: Overload:Benday.Common.SearchArgument.SearchValue
  isSpec: "True"
  fullName: Benday.Common.SearchArgument.SearchValue
  nameWithType: SearchArgument.SearchValue
- uid: Benday.Common.SearchArgument.SearchValueAsInt
  name: SearchValueAsInt
  href: api/Benday.Common.SearchArgument.html#Benday_Common_SearchArgument_SearchValueAsInt
  commentId: P:Benday.Common.SearchArgument.SearchValueAsInt
  fullName: Benday.Common.SearchArgument.SearchValueAsInt
  nameWithType: SearchArgument.SearchValueAsInt
- uid: Benday.Common.SearchArgument.SearchValueAsInt*
  name: SearchValueAsInt
  href: api/Benday.Common.SearchArgument.html#Benday_Common_SearchArgument_SearchValueAsInt_
  commentId: Overload:Benday.Common.SearchArgument.SearchValueAsInt
  isSpec: "True"
  fullName: Benday.Common.SearchArgument.SearchValueAsInt
  nameWithType: SearchArgument.SearchValueAsInt
- uid: Benday.Common.SearchConstants
  name: SearchConstants
  href: api/Benday.Common.SearchConstants.html
  commentId: T:Benday.Common.SearchConstants
  fullName: Benday.Common.SearchConstants
  nameWithType: SearchConstants
- uid: Benday.Common.SearchConstants.SortDirectionAscending
  name: SortDirectionAscending
  href: api/Benday.Common.SearchConstants.html#Benday_Common_SearchConstants_SortDirectionAscending
  commentId: F:Benday.Common.SearchConstants.SortDirectionAscending
  fullName: Benday.Common.SearchConstants.SortDirectionAscending
  nameWithType: SearchConstants.SortDirectionAscending
- uid: Benday.Common.SearchConstants.SortDirectionDescending
  name: SortDirectionDescending
  href: api/Benday.Common.SearchConstants.html#Benday_Common_SearchConstants_SortDirectionDescending
  commentId: F:Benday.Common.SearchConstants.SortDirectionDescending
  fullName: Benday.Common.SearchConstants.SortDirectionDescending
  nameWithType: SearchConstants.SortDirectionDescending
- uid: Benday.Common.SearchMethod
  name: SearchMethod
  href: api/Benday.Common.SearchMethod.html
  commentId: T:Benday.Common.SearchMethod
  fullName: Benday.Common.SearchMethod
  nameWithType: SearchMethod
- uid: Benday.Common.SearchMethod.Contains
  name: Contains
  href: api/Benday.Common.SearchMethod.html#Benday_Common_SearchMethod_Contains
  commentId: F:Benday.Common.SearchMethod.Contains
  fullName: Benday.Common.SearchMethod.Contains
  nameWithType: SearchMethod.Contains
- uid: Benday.Common.SearchMethod.DoesNotContain
  name: DoesNotContain
  href: api/Benday.Common.SearchMethod.html#Benday_Common_SearchMethod_DoesNotContain
  commentId: F:Benday.Common.SearchMethod.DoesNotContain
  fullName: Benday.Common.SearchMethod.DoesNotContain
  nameWithType: SearchMethod.DoesNotContain
- uid: Benday.Common.SearchMethod.EndsWith
  name: EndsWith
  href: api/Benday.Common.SearchMethod.html#Benday_Common_SearchMethod_EndsWith
  commentId: F:Benday.Common.SearchMethod.EndsWith
  fullName: Benday.Common.SearchMethod.EndsWith
  nameWithType: SearchMethod.EndsWith
- uid: Benday.Common.SearchMethod.Equals
  name: Equals
  href: api/Benday.Common.SearchMethod.html#Benday_Common_SearchMethod_Equals
  commentId: F:Benday.Common.SearchMethod.Equals
  fullName: Benday.Common.SearchMethod.Equals
  nameWithType: SearchMethod.Equals
- uid: Benday.Common.SearchMethod.IsNotEqual
  name: IsNotEqual
  href: api/Benday.Common.SearchMethod.html#Benday_Common_SearchMethod_IsNotEqual
  commentId: F:Benday.Common.SearchMethod.IsNotEqual
  fullName: Benday.Common.SearchMethod.IsNotEqual
  nameWithType: SearchMethod.IsNotEqual
- uid: Benday.Common.SearchMethod.Skip
  name: Skip
  href: api/Benday.Common.SearchMethod.html#Benday_Common_SearchMethod_Skip
  commentId: F:Benday.Common.SearchMethod.Skip
  fullName: Benday.Common.SearchMethod.Skip
  nameWithType: SearchMethod.Skip
- uid: Benday.Common.SearchMethod.StartsWith
  name: StartsWith
  href: api/Benday.Common.SearchMethod.html#Benday_Common_SearchMethod_StartsWith
  commentId: F:Benday.Common.SearchMethod.StartsWith
  fullName: Benday.Common.SearchMethod.StartsWith
  nameWithType: SearchMethod.StartsWith
- uid: Benday.Common.SearchOperator
  name: SearchOperator
  href: api/Benday.Common.SearchOperator.html
  commentId: T:Benday.Common.SearchOperator
  fullName: Benday.Common.SearchOperator
  nameWithType: SearchOperator
- uid: Benday.Common.SearchOperator.And
  name: And
  href: api/Benday.Common.SearchOperator.html#Benday_Common_SearchOperator_And
  commentId: F:Benday.Common.SearchOperator.And
  fullName: Benday.Common.SearchOperator.And
  nameWithType: SearchOperator.And
- uid: Benday.Common.SearchOperator.Or
  name: Or
  href: api/Benday.Common.SearchOperator.html#Benday_Common_SearchOperator_Or
  commentId: F:Benday.Common.SearchOperator.Or
  fullName: Benday.Common.SearchOperator.Or
  nameWithType: SearchOperator.Or
- uid: Benday.Common.SearchResult`1
  name: SearchResult<T>
  href: api/Benday.Common.SearchResult-1.html
  commentId: T:Benday.Common.SearchResult`1
  name.vb: SearchResult(Of T)
  fullName: Benday.Common.SearchResult<T>
  fullName.vb: Benday.Common.SearchResult(Of T)
  nameWithType: SearchResult<T>
  nameWithType.vb: SearchResult(Of T)
- uid: Benday.Common.SearchResult`1.Results
  name: Results
  href: api/Benday.Common.SearchResult-1.html#Benday_Common_SearchResult_1_Results
  commentId: P:Benday.Common.SearchResult`1.Results
  fullName: Benday.Common.SearchResult<T>.Results
  fullName.vb: Benday.Common.SearchResult(Of T).Results
  nameWithType: SearchResult<T>.Results
  nameWithType.vb: SearchResult(Of T).Results
- uid: Benday.Common.SearchResult`1.Results*
  name: Results
  href: api/Benday.Common.SearchResult-1.html#Benday_Common_SearchResult_1_Results_
  commentId: Overload:Benday.Common.SearchResult`1.Results
  isSpec: "True"
  fullName: Benday.Common.SearchResult<T>.Results
  fullName.vb: Benday.Common.SearchResult(Of T).Results
  nameWithType: SearchResult<T>.Results
  nameWithType.vb: SearchResult(Of T).Results
- uid: Benday.Common.SearchResult`1.SearchRequest
  name: SearchRequest
  href: api/Benday.Common.SearchResult-1.html#Benday_Common_SearchResult_1_SearchRequest
  commentId: P:Benday.Common.SearchResult`1.SearchRequest
  fullName: Benday.Common.SearchResult<T>.SearchRequest
  fullName.vb: Benday.Common.SearchResult(Of T).SearchRequest
  nameWithType: SearchResult<T>.SearchRequest
  nameWithType.vb: SearchResult(Of T).SearchRequest
- uid: Benday.Common.SearchResult`1.SearchRequest*
  name: SearchRequest
  href: api/Benday.Common.SearchResult-1.html#Benday_Common_SearchResult_1_SearchRequest_
  commentId: Overload:Benday.Common.SearchResult`1.SearchRequest
  isSpec: "True"
  fullName: Benday.Common.SearchResult<T>.SearchRequest
  fullName.vb: Benday.Common.SearchResult(Of T).SearchRequest
  nameWithType: SearchResult<T>.SearchRequest
  nameWithType.vb: SearchResult(Of T).SearchRequest
- uid: Benday.Common.SearchViewModelBase`1
  name: SearchViewModelBase<T>
  href: api/Benday.Common.SearchViewModelBase-1.html
  commentId: T:Benday.Common.SearchViewModelBase`1
  name.vb: SearchViewModelBase(Of T)
  fullName: Benday.Common.SearchViewModelBase<T>
  fullName.vb: Benday.Common.SearchViewModelBase(Of T)
  nameWithType: SearchViewModelBase<T>
  nameWithType.vb: SearchViewModelBase(Of T)
- uid: Benday.Common.SearchViewModelBase`1.#ctor
  name: SearchViewModelBase()
  href: api/Benday.Common.SearchViewModelBase-1.html#Benday_Common_SearchViewModelBase_1__ctor
  commentId: M:Benday.Common.SearchViewModelBase`1.#ctor
  name.vb: New()
  fullName: Benday.Common.SearchViewModelBase<T>.SearchViewModelBase()
  fullName.vb: Benday.Common.SearchViewModelBase(Of T).New()
  nameWithType: SearchViewModelBase<T>.SearchViewModelBase()
  nameWithType.vb: SearchViewModelBase(Of T).New()
- uid: Benday.Common.SearchViewModelBase`1.#ctor*
  name: SearchViewModelBase
  href: api/Benday.Common.SearchViewModelBase-1.html#Benday_Common_SearchViewModelBase_1__ctor_
  commentId: Overload:Benday.Common.SearchViewModelBase`1.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Benday.Common.SearchViewModelBase<T>.SearchViewModelBase
  fullName.vb: Benday.Common.SearchViewModelBase(Of T).New
  nameWithType: SearchViewModelBase<T>.SearchViewModelBase
  nameWithType.vb: SearchViewModelBase(Of T).New
- uid: Benday.Common.SearchViewModelBase`1.IsSimpleSearch
  name: IsSimpleSearch
  href: api/Benday.Common.SearchViewModelBase-1.html#Benday_Common_SearchViewModelBase_1_IsSimpleSearch
  commentId: P:Benday.Common.SearchViewModelBase`1.IsSimpleSearch
  fullName: Benday.Common.SearchViewModelBase<T>.IsSimpleSearch
  fullName.vb: Benday.Common.SearchViewModelBase(Of T).IsSimpleSearch
  nameWithType: SearchViewModelBase<T>.IsSimpleSearch
  nameWithType.vb: SearchViewModelBase(Of T).IsSimpleSearch
- uid: Benday.Common.SearchViewModelBase`1.IsSimpleSearch*
  name: IsSimpleSearch
  href: api/Benday.Common.SearchViewModelBase-1.html#Benday_Common_SearchViewModelBase_1_IsSimpleSearch_
  commentId: Overload:Benday.Common.SearchViewModelBase`1.IsSimpleSearch
  isSpec: "True"
  fullName: Benday.Common.SearchViewModelBase<T>.IsSimpleSearch
  fullName.vb: Benday.Common.SearchViewModelBase(Of T).IsSimpleSearch
  nameWithType: SearchViewModelBase<T>.IsSimpleSearch
  nameWithType.vb: SearchViewModelBase(Of T).IsSimpleSearch
- uid: Benday.Common.SearchViewModelBase`1.SimpleSearchValue
  name: SimpleSearchValue
  href: api/Benday.Common.SearchViewModelBase-1.html#Benday_Common_SearchViewModelBase_1_SimpleSearchValue
  commentId: P:Benday.Common.SearchViewModelBase`1.SimpleSearchValue
  fullName: Benday.Common.SearchViewModelBase<T>.SimpleSearchValue
  fullName.vb: Benday.Common.SearchViewModelBase(Of T).SimpleSearchValue
  nameWithType: SearchViewModelBase<T>.SimpleSearchValue
  nameWithType.vb: SearchViewModelBase(Of T).SimpleSearchValue
- uid: Benday.Common.SearchViewModelBase`1.SimpleSearchValue*
  name: SimpleSearchValue
  href: api/Benday.Common.SearchViewModelBase-1.html#Benday_Common_SearchViewModelBase_1_SimpleSearchValue_
  commentId: Overload:Benday.Common.SearchViewModelBase`1.SimpleSearchValue
  isSpec: "True"
  fullName: Benday.Common.SearchViewModelBase<T>.SimpleSearchValue
  fullName.vb: Benday.Common.SearchViewModelBase(Of T).SimpleSearchValue
  nameWithType: SearchViewModelBase<T>.SimpleSearchValue
  nameWithType.vb: SearchViewModelBase(Of T).SimpleSearchValue
- uid: Benday.Common.SimpleSearchResults`1
  name: SimpleSearchResults<T>
  href: api/Benday.Common.SimpleSearchResults-1.html
  commentId: T:Benday.Common.SimpleSearchResults`1
  name.vb: SimpleSearchResults(Of T)
  fullName: Benday.Common.SimpleSearchResults<T>
  fullName.vb: Benday.Common.SimpleSearchResults(Of T)
  nameWithType: SimpleSearchResults<T>
  nameWithType.vb: SimpleSearchResults(Of T)
- uid: Benday.Common.SimpleSearchResults`1.#ctor
  name: SimpleSearchResults()
  href: api/Benday.Common.SimpleSearchResults-1.html#Benday_Common_SimpleSearchResults_1__ctor
  commentId: M:Benday.Common.SimpleSearchResults`1.#ctor
  name.vb: New()
  fullName: Benday.Common.SimpleSearchResults<T>.SimpleSearchResults()
  fullName.vb: Benday.Common.SimpleSearchResults(Of T).New()
  nameWithType: SimpleSearchResults<T>.SimpleSearchResults()
  nameWithType.vb: SimpleSearchResults(Of T).New()
- uid: Benday.Common.SimpleSearchResults`1.#ctor*
  name: SimpleSearchResults
  href: api/Benday.Common.SimpleSearchResults-1.html#Benday_Common_SimpleSearchResults_1__ctor_
  commentId: Overload:Benday.Common.SimpleSearchResults`1.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Benday.Common.SimpleSearchResults<T>.SimpleSearchResults
  fullName.vb: Benday.Common.SimpleSearchResults(Of T).New
  nameWithType: SimpleSearchResults<T>.SimpleSearchResults
  nameWithType.vb: SimpleSearchResults(Of T).New
- uid: Benday.Common.SimpleSearchResults`1.CurrentPage
  name: CurrentPage
  href: api/Benday.Common.SimpleSearchResults-1.html#Benday_Common_SimpleSearchResults_1_CurrentPage
  commentId: P:Benday.Common.SimpleSearchResults`1.CurrentPage
  fullName: Benday.Common.SimpleSearchResults<T>.CurrentPage
  fullName.vb: Benday.Common.SimpleSearchResults(Of T).CurrentPage
  nameWithType: SimpleSearchResults<T>.CurrentPage
  nameWithType.vb: SimpleSearchResults(Of T).CurrentPage
- uid: Benday.Common.SimpleSearchResults`1.CurrentPage*
  name: CurrentPage
  href: api/Benday.Common.SimpleSearchResults-1.html#Benday_Common_SimpleSearchResults_1_CurrentPage_
  commentId: Overload:Benday.Common.SimpleSearchResults`1.CurrentPage
  isSpec: "True"
  fullName: Benday.Common.SimpleSearchResults<T>.CurrentPage
  fullName.vb: Benday.Common.SimpleSearchResults(Of T).CurrentPage
  nameWithType: SimpleSearchResults<T>.CurrentPage
  nameWithType.vb: SimpleSearchResults(Of T).CurrentPage
- uid: Benday.Common.SimpleSearchResults`1.CurrentPageValues
  name: CurrentPageValues
  href: api/Benday.Common.SimpleSearchResults-1.html#Benday_Common_SimpleSearchResults_1_CurrentPageValues
  commentId: P:Benday.Common.SimpleSearchResults`1.CurrentPageValues
  fullName: Benday.Common.SimpleSearchResults<T>.CurrentPageValues
  fullName.vb: Benday.Common.SimpleSearchResults(Of T).CurrentPageValues
  nameWithType: SimpleSearchResults<T>.CurrentPageValues
  nameWithType.vb: SimpleSearchResults(Of T).CurrentPageValues
- uid: Benday.Common.SimpleSearchResults`1.CurrentPageValues*
  name: CurrentPageValues
  href: api/Benday.Common.SimpleSearchResults-1.html#Benday_Common_SimpleSearchResults_1_CurrentPageValues_
  commentId: Overload:Benday.Common.SimpleSearchResults`1.CurrentPageValues
  isSpec: "True"
  fullName: Benday.Common.SimpleSearchResults<T>.CurrentPageValues
  fullName.vb: Benday.Common.SimpleSearchResults(Of T).CurrentPageValues
  nameWithType: SimpleSearchResults<T>.CurrentPageValues
  nameWithType.vb: SimpleSearchResults(Of T).CurrentPageValues
- uid: Benday.Common.SimpleSearchResults`1.CurrentSortDirection
  name: CurrentSortDirection
  href: api/Benday.Common.SimpleSearchResults-1.html#Benday_Common_SimpleSearchResults_1_CurrentSortDirection
  commentId: P:Benday.Common.SimpleSearchResults`1.CurrentSortDirection
  fullName: Benday.Common.SimpleSearchResults<T>.CurrentSortDirection
  fullName.vb: Benday.Common.SimpleSearchResults(Of T).CurrentSortDirection
  nameWithType: SimpleSearchResults<T>.CurrentSortDirection
  nameWithType.vb: SimpleSearchResults(Of T).CurrentSortDirection
- uid: Benday.Common.SimpleSearchResults`1.CurrentSortDirection*
  name: CurrentSortDirection
  href: api/Benday.Common.SimpleSearchResults-1.html#Benday_Common_SimpleSearchResults_1_CurrentSortDirection_
  commentId: Overload:Benday.Common.SimpleSearchResults`1.CurrentSortDirection
  isSpec: "True"
  fullName: Benday.Common.SimpleSearchResults<T>.CurrentSortDirection
  fullName.vb: Benday.Common.SimpleSearchResults(Of T).CurrentSortDirection
  nameWithType: SimpleSearchResults<T>.CurrentSortDirection
  nameWithType.vb: SimpleSearchResults(Of T).CurrentSortDirection
- uid: Benday.Common.SimpleSearchResults`1.CurrentSortProperty
  name: CurrentSortProperty
  href: api/Benday.Common.SimpleSearchResults-1.html#Benday_Common_SimpleSearchResults_1_CurrentSortProperty
  commentId: P:Benday.Common.SimpleSearchResults`1.CurrentSortProperty
  fullName: Benday.Common.SimpleSearchResults<T>.CurrentSortProperty
  fullName.vb: Benday.Common.SimpleSearchResults(Of T).CurrentSortProperty
  nameWithType: SimpleSearchResults<T>.CurrentSortProperty
  nameWithType.vb: SimpleSearchResults(Of T).CurrentSortProperty
- uid: Benday.Common.SimpleSearchResults`1.CurrentSortProperty*
  name: CurrentSortProperty
  href: api/Benday.Common.SimpleSearchResults-1.html#Benday_Common_SimpleSearchResults_1_CurrentSortProperty_
  commentId: Overload:Benday.Common.SimpleSearchResults`1.CurrentSortProperty
  isSpec: "True"
  fullName: Benday.Common.SimpleSearchResults<T>.CurrentSortProperty
  fullName.vb: Benday.Common.SimpleSearchResults(Of T).CurrentSortProperty
  nameWithType: SimpleSearchResults<T>.CurrentSortProperty
  nameWithType.vb: SimpleSearchResults(Of T).CurrentSortProperty
- uid: Benday.Common.SimpleSearchResults`1.ItemsPerPage
  name: ItemsPerPage
  href: api/Benday.Common.SimpleSearchResults-1.html#Benday_Common_SimpleSearchResults_1_ItemsPerPage
  commentId: P:Benday.Common.SimpleSearchResults`1.ItemsPerPage
  fullName: Benday.Common.SimpleSearchResults<T>.ItemsPerPage
  fullName.vb: Benday.Common.SimpleSearchResults(Of T).ItemsPerPage
  nameWithType: SimpleSearchResults<T>.ItemsPerPage
  nameWithType.vb: SimpleSearchResults(Of T).ItemsPerPage
- uid: Benday.Common.SimpleSearchResults`1.ItemsPerPage*
  name: ItemsPerPage
  href: api/Benday.Common.SimpleSearchResults-1.html#Benday_Common_SimpleSearchResults_1_ItemsPerPage_
  commentId: Overload:Benday.Common.SimpleSearchResults`1.ItemsPerPage
  isSpec: "True"
  fullName: Benday.Common.SimpleSearchResults<T>.ItemsPerPage
  fullName.vb: Benday.Common.SimpleSearchResults(Of T).ItemsPerPage
  nameWithType: SimpleSearchResults<T>.ItemsPerPage
  nameWithType.vb: SimpleSearchResults(Of T).ItemsPerPage
- uid: Benday.Common.SimpleSearchResults`1.PageCount
  name: PageCount
  href: api/Benday.Common.SimpleSearchResults-1.html#Benday_Common_SimpleSearchResults_1_PageCount
  commentId: P:Benday.Common.SimpleSearchResults`1.PageCount
  fullName: Benday.Common.SimpleSearchResults<T>.PageCount
  fullName.vb: Benday.Common.SimpleSearchResults(Of T).PageCount
  nameWithType: SimpleSearchResults<T>.PageCount
  nameWithType.vb: SimpleSearchResults(Of T).PageCount
- uid: Benday.Common.SimpleSearchResults`1.PageCount*
  name: PageCount
  href: api/Benday.Common.SimpleSearchResults-1.html#Benday_Common_SimpleSearchResults_1_PageCount_
  commentId: Overload:Benday.Common.SimpleSearchResults`1.PageCount
  isSpec: "True"
  fullName: Benday.Common.SimpleSearchResults<T>.PageCount
  fullName.vb: Benday.Common.SimpleSearchResults(Of T).PageCount
  nameWithType: SimpleSearchResults<T>.PageCount
  nameWithType.vb: SimpleSearchResults(Of T).PageCount
- uid: Benday.Common.SimpleSearchResults`1.SearchValue
  name: SearchValue
  href: api/Benday.Common.SimpleSearchResults-1.html#Benday_Common_SimpleSearchResults_1_SearchValue
  commentId: P:Benday.Common.SimpleSearchResults`1.SearchValue
  fullName: Benday.Common.SimpleSearchResults<T>.SearchValue
  fullName.vb: Benday.Common.SimpleSearchResults(Of T).SearchValue
  nameWithType: SimpleSearchResults<T>.SearchValue
  nameWithType.vb: SimpleSearchResults(Of T).SearchValue
- uid: Benday.Common.SimpleSearchResults`1.SearchValue*
  name: SearchValue
  href: api/Benday.Common.SimpleSearchResults-1.html#Benday_Common_SimpleSearchResults_1_SearchValue_
  commentId: Overload:Benday.Common.SimpleSearchResults`1.SearchValue
  isSpec: "True"
  fullName: Benday.Common.SimpleSearchResults<T>.SearchValue
  fullName.vb: Benday.Common.SimpleSearchResults(Of T).SearchValue
  nameWithType: SimpleSearchResults<T>.SearchValue
  nameWithType.vb: SimpleSearchResults(Of T).SearchValue
- uid: Benday.Common.SimpleSearchResults`1.TotalCount
  name: TotalCount
  href: api/Benday.Common.SimpleSearchResults-1.html#Benday_Common_SimpleSearchResults_1_TotalCount
  commentId: P:Benday.Common.SimpleSearchResults`1.TotalCount
  fullName: Benday.Common.SimpleSearchResults<T>.TotalCount
  fullName.vb: Benday.Common.SimpleSearchResults(Of T).TotalCount
  nameWithType: SimpleSearchResults<T>.TotalCount
  nameWithType.vb: SimpleSearchResults(Of T).TotalCount
- uid: Benday.Common.SimpleSearchResults`1.TotalCount*
  name: TotalCount
  href: api/Benday.Common.SimpleSearchResults-1.html#Benday_Common_SimpleSearchResults_1_TotalCount_
  commentId: Overload:Benday.Common.SimpleSearchResults`1.TotalCount
  isSpec: "True"
  fullName: Benday.Common.SimpleSearchResults<T>.TotalCount
  fullName.vb: Benday.Common.SimpleSearchResults(Of T).TotalCount
  nameWithType: SimpleSearchResults<T>.TotalCount
  nameWithType.vb: SimpleSearchResults(Of T).TotalCount
- uid: Benday.Common.SortBy
  name: SortBy
  href: api/Benday.Common.SortBy.html
  commentId: T:Benday.Common.SortBy
  fullName: Benday.Common.SortBy
  nameWithType: SortBy
- uid: Benday.Common.SortBy.Direction
  name: Direction
  href: api/Benday.Common.SortBy.html#Benday_Common_SortBy_Direction
  commentId: P:Benday.Common.SortBy.Direction
  fullName: Benday.Common.SortBy.Direction
  nameWithType: SortBy.Direction
- uid: Benday.Common.SortBy.Direction*
  name: Direction
  href: api/Benday.Common.SortBy.html#Benday_Common_SortBy_Direction_
  commentId: Overload:Benday.Common.SortBy.Direction
  isSpec: "True"
  fullName: Benday.Common.SortBy.Direction
  nameWithType: SortBy.Direction
- uid: Benday.Common.SortBy.PropertyName
  name: PropertyName
  href: api/Benday.Common.SortBy.html#Benday_Common_SortBy_PropertyName
  commentId: P:Benday.Common.SortBy.PropertyName
  fullName: Benday.Common.SortBy.PropertyName
  nameWithType: SortBy.PropertyName
- uid: Benday.Common.SortBy.PropertyName*
  name: PropertyName
  href: api/Benday.Common.SortBy.html#Benday_Common_SortBy_PropertyName_
  commentId: Overload:Benday.Common.SortBy.PropertyName
  isSpec: "True"
  fullName: Benday.Common.SortBy.PropertyName
  nameWithType: SortBy.PropertyName
- uid: Benday.Common.SortableViewModelBase`1
  name: SortableViewModelBase<T>
  href: api/Benday.Common.SortableViewModelBase-1.html
  commentId: T:Benday.Common.SortableViewModelBase`1
  name.vb: SortableViewModelBase(Of T)
  fullName: Benday.Common.SortableViewModelBase<T>
  fullName.vb: Benday.Common.SortableViewModelBase(Of T)
  nameWithType: SortableViewModelBase<T>
  nameWithType.vb: SortableViewModelBase(Of T)
- uid: Benday.Common.SortableViewModelBase`1.#ctor
  name: SortableViewModelBase()
  href: api/Benday.Common.SortableViewModelBase-1.html#Benday_Common_SortableViewModelBase_1__ctor
  commentId: M:Benday.Common.SortableViewModelBase`1.#ctor
  name.vb: New()
  fullName: Benday.Common.SortableViewModelBase<T>.SortableViewModelBase()
  fullName.vb: Benday.Common.SortableViewModelBase(Of T).New()
  nameWithType: SortableViewModelBase<T>.SortableViewModelBase()
  nameWithType.vb: SortableViewModelBase(Of T).New()
- uid: Benday.Common.SortableViewModelBase`1.#ctor*
  name: SortableViewModelBase
  href: api/Benday.Common.SortableViewModelBase-1.html#Benday_Common_SortableViewModelBase_1__ctor_
  commentId: Overload:Benday.Common.SortableViewModelBase`1.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Benday.Common.SortableViewModelBase<T>.SortableViewModelBase
  fullName.vb: Benday.Common.SortableViewModelBase(Of T).New
  nameWithType: SortableViewModelBase<T>.SortableViewModelBase
  nameWithType.vb: SortableViewModelBase(Of T).New
- uid: Benday.Common.SortableViewModelBase`1.CurrentSortDirection
  name: CurrentSortDirection
  href: api/Benday.Common.SortableViewModelBase-1.html#Benday_Common_SortableViewModelBase_1_CurrentSortDirection
  commentId: P:Benday.Common.SortableViewModelBase`1.CurrentSortDirection
  fullName: Benday.Common.SortableViewModelBase<T>.CurrentSortDirection
  fullName.vb: Benday.Common.SortableViewModelBase(Of T).CurrentSortDirection
  nameWithType: SortableViewModelBase<T>.CurrentSortDirection
  nameWithType.vb: SortableViewModelBase(Of T).CurrentSortDirection
- uid: Benday.Common.SortableViewModelBase`1.CurrentSortDirection*
  name: CurrentSortDirection
  href: api/Benday.Common.SortableViewModelBase-1.html#Benday_Common_SortableViewModelBase_1_CurrentSortDirection_
  commentId: Overload:Benday.Common.SortableViewModelBase`1.CurrentSortDirection
  isSpec: "True"
  fullName: Benday.Common.SortableViewModelBase<T>.CurrentSortDirection
  fullName.vb: Benday.Common.SortableViewModelBase(Of T).CurrentSortDirection
  nameWithType: SortableViewModelBase<T>.CurrentSortDirection
  nameWithType.vb: SortableViewModelBase(Of T).CurrentSortDirection
- uid: Benday.Common.SortableViewModelBase`1.CurrentSortProperty
  name: CurrentSortProperty
  href: api/Benday.Common.SortableViewModelBase-1.html#Benday_Common_SortableViewModelBase_1_CurrentSortProperty
  commentId: P:Benday.Common.SortableViewModelBase`1.CurrentSortProperty
  fullName: Benday.Common.SortableViewModelBase<T>.CurrentSortProperty
  fullName.vb: Benday.Common.SortableViewModelBase(Of T).CurrentSortProperty
  nameWithType: SortableViewModelBase<T>.CurrentSortProperty
  nameWithType.vb: SortableViewModelBase(Of T).CurrentSortProperty
- uid: Benday.Common.SortableViewModelBase`1.CurrentSortProperty*
  name: CurrentSortProperty
  href: api/Benday.Common.SortableViewModelBase-1.html#Benday_Common_SortableViewModelBase_1_CurrentSortProperty_
  commentId: Overload:Benday.Common.SortableViewModelBase`1.CurrentSortProperty
  isSpec: "True"
  fullName: Benday.Common.SortableViewModelBase<T>.CurrentSortProperty
  fullName.vb: Benday.Common.SortableViewModelBase(Of T).CurrentSortProperty
  nameWithType: SortableViewModelBase<T>.CurrentSortProperty
  nameWithType.vb: SortableViewModelBase(Of T).CurrentSortProperty
- uid: Benday.Common.SortableViewModelBase`1.Results
  name: Results
  href: api/Benday.Common.SortableViewModelBase-1.html#Benday_Common_SortableViewModelBase_1_Results
  commentId: P:Benday.Common.SortableViewModelBase`1.Results
  fullName: Benday.Common.SortableViewModelBase<T>.Results
  fullName.vb: Benday.Common.SortableViewModelBase(Of T).Results
  nameWithType: SortableViewModelBase<T>.Results
  nameWithType.vb: SortableViewModelBase(Of T).Results
- uid: Benday.Common.SortableViewModelBase`1.Results*
  name: Results
  href: api/Benday.Common.SortableViewModelBase-1.html#Benday_Common_SortableViewModelBase_1_Results_
  commentId: Overload:Benday.Common.SortableViewModelBase`1.Results
  isSpec: "True"
  fullName: Benday.Common.SortableViewModelBase<T>.Results
  fullName.vb: Benday.Common.SortableViewModelBase(Of T).Results
  nameWithType: SortableViewModelBase<T>.Results
  nameWithType.vb: SortableViewModelBase(Of T).Results
- uid: Benday.Common.StringExtensionMethods
  name: StringExtensionMethods
  href: api/Benday.Common.StringExtensionMethods.html
  commentId: T:Benday.Common.StringExtensionMethods
  fullName: Benday.Common.StringExtensionMethods
  nameWithType: StringExtensionMethods
- uid: Benday.Common.StringExtensionMethods.EqualsCaseInsensitive(System.String,System.String)
  name: EqualsCaseInsensitive(string?, string?)
  href: api/Benday.Common.StringExtensionMethods.html#Benday_Common_StringExtensionMethods_EqualsCaseInsensitive_System_String_System_String_
  commentId: M:Benday.Common.StringExtensionMethods.EqualsCaseInsensitive(System.String,System.String)
  name.vb: EqualsCaseInsensitive(String, String)
  fullName: Benday.Common.StringExtensionMethods.EqualsCaseInsensitive(string?, string?)
  fullName.vb: Benday.Common.StringExtensionMethods.EqualsCaseInsensitive(String, String)
  nameWithType: StringExtensionMethods.EqualsCaseInsensitive(string?, string?)
  nameWithType.vb: StringExtensionMethods.EqualsCaseInsensitive(String, String)
- uid: Benday.Common.StringExtensionMethods.EqualsCaseInsensitive*
  name: EqualsCaseInsensitive
  href: api/Benday.Common.StringExtensionMethods.html#Benday_Common_StringExtensionMethods_EqualsCaseInsensitive_
  commentId: Overload:Benday.Common.StringExtensionMethods.EqualsCaseInsensitive
  isSpec: "True"
  fullName: Benday.Common.StringExtensionMethods.EqualsCaseInsensitive
  nameWithType: StringExtensionMethods.EqualsCaseInsensitive
- uid: Benday.Common.StringExtensionMethods.IsNullOrEmpty(System.String)
  name: IsNullOrEmpty(string?)
  href: api/Benday.Common.StringExtensionMethods.html#Benday_Common_StringExtensionMethods_IsNullOrEmpty_System_String_
  commentId: M:Benday.Common.StringExtensionMethods.IsNullOrEmpty(System.String)
  name.vb: IsNullOrEmpty(String)
  fullName: Benday.Common.StringExtensionMethods.IsNullOrEmpty(string?)
  fullName.vb: Benday.Common.StringExtensionMethods.IsNullOrEmpty(String)
  nameWithType: StringExtensionMethods.IsNullOrEmpty(string?)
  nameWithType.vb: StringExtensionMethods.IsNullOrEmpty(String)
- uid: Benday.Common.StringExtensionMethods.IsNullOrEmpty*
  name: IsNullOrEmpty
  href: api/Benday.Common.StringExtensionMethods.html#Benday_Common_StringExtensionMethods_IsNullOrEmpty_
  commentId: Overload:Benday.Common.StringExtensionMethods.IsNullOrEmpty
  isSpec: "True"
  fullName: Benday.Common.StringExtensionMethods.IsNullOrEmpty
  nameWithType: StringExtensionMethods.IsNullOrEmpty
- uid: Benday.Common.StringExtensionMethods.IsNullOrWhitespace(System.String)
  name: IsNullOrWhitespace(string?)
  href: api/Benday.Common.StringExtensionMethods.html#Benday_Common_StringExtensionMethods_IsNullOrWhitespace_System_String_
  commentId: M:Benday.Common.StringExtensionMethods.IsNullOrWhitespace(System.String)
  name.vb: IsNullOrWhitespace(String)
  fullName: Benday.Common.StringExtensionMethods.IsNullOrWhitespace(string?)
  fullName.vb: Benday.Common.StringExtensionMethods.IsNullOrWhitespace(String)
  nameWithType: StringExtensionMethods.IsNullOrWhitespace(string?)
  nameWithType.vb: StringExtensionMethods.IsNullOrWhitespace(String)
- uid: Benday.Common.StringExtensionMethods.IsNullOrWhitespace*
  name: IsNullOrWhitespace
  href: api/Benday.Common.StringExtensionMethods.html#Benday_Common_StringExtensionMethods_IsNullOrWhitespace_
  commentId: Overload:Benday.Common.StringExtensionMethods.IsNullOrWhitespace
  isSpec: "True"
  fullName: Benday.Common.StringExtensionMethods.IsNullOrWhitespace
  nameWithType: StringExtensionMethods.IsNullOrWhitespace
- uid: Benday.Common.StringExtensionMethods.SafeContains(System.String,System.String)
  name: SafeContains(string?, string)
  href: api/Benday.Common.StringExtensionMethods.html#Benday_Common_StringExtensionMethods_SafeContains_System_String_System_String_
  commentId: M:Benday.Common.StringExtensionMethods.SafeContains(System.String,System.String)
  name.vb: SafeContains(String, String)
  fullName: Benday.Common.StringExtensionMethods.SafeContains(string?, string)
  fullName.vb: Benday.Common.StringExtensionMethods.SafeContains(String, String)
  nameWithType: StringExtensionMethods.SafeContains(string?, string)
  nameWithType.vb: StringExtensionMethods.SafeContains(String, String)
- uid: Benday.Common.StringExtensionMethods.SafeContains*
  name: SafeContains
  href: api/Benday.Common.StringExtensionMethods.html#Benday_Common_StringExtensionMethods_SafeContains_
  commentId: Overload:Benday.Common.StringExtensionMethods.SafeContains
  isSpec: "True"
  fullName: Benday.Common.StringExtensionMethods.SafeContains
  nameWithType: StringExtensionMethods.SafeContains
- uid: Benday.Common.StringExtensionMethods.SafeContainsCaseInsensitive(System.String,System.String)
  name: SafeContainsCaseInsensitive(string?, string)
  href: api/Benday.Common.StringExtensionMethods.html#Benday_Common_StringExtensionMethods_SafeContainsCaseInsensitive_System_String_System_String_
  commentId: M:Benday.Common.StringExtensionMethods.SafeContainsCaseInsensitive(System.String,System.String)
  name.vb: SafeContainsCaseInsensitive(String, String)
  fullName: Benday.Common.StringExtensionMethods.SafeContainsCaseInsensitive(string?, string)
  fullName.vb: Benday.Common.StringExtensionMethods.SafeContainsCaseInsensitive(String, String)
  nameWithType: StringExtensionMethods.SafeContainsCaseInsensitive(string?, string)
  nameWithType.vb: StringExtensionMethods.SafeContainsCaseInsensitive(String, String)
- uid: Benday.Common.StringExtensionMethods.SafeContainsCaseInsensitive*
  name: SafeContainsCaseInsensitive
  href: api/Benday.Common.StringExtensionMethods.html#Benday_Common_StringExtensionMethods_SafeContainsCaseInsensitive_
  commentId: Overload:Benday.Common.StringExtensionMethods.SafeContainsCaseInsensitive
  isSpec: "True"
  fullName: Benday.Common.StringExtensionMethods.SafeContainsCaseInsensitive
  nameWithType: StringExtensionMethods.SafeContainsCaseInsensitive
- uid: Benday.Common.StringExtensionMethods.SafeToInt32(System.String,System.Int32)
  name: SafeToInt32(string?, int)
  href: api/Benday.Common.StringExtensionMethods.html#Benday_Common_StringExtensionMethods_SafeToInt32_System_String_System_Int32_
  commentId: M:Benday.Common.StringExtensionMethods.SafeToInt32(System.String,System.Int32)
  name.vb: SafeToInt32(String, Integer)
  fullName: Benday.Common.StringExtensionMethods.SafeToInt32(string?, int)
  fullName.vb: Benday.Common.StringExtensionMethods.SafeToInt32(String, Integer)
  nameWithType: StringExtensionMethods.SafeToInt32(string?, int)
  nameWithType.vb: StringExtensionMethods.SafeToInt32(String, Integer)
- uid: Benday.Common.StringExtensionMethods.SafeToInt32*
  name: SafeToInt32
  href: api/Benday.Common.StringExtensionMethods.html#Benday_Common_StringExtensionMethods_SafeToInt32_
  commentId: Overload:Benday.Common.StringExtensionMethods.SafeToInt32
  isSpec: "True"
  fullName: Benday.Common.StringExtensionMethods.SafeToInt32
  nameWithType: StringExtensionMethods.SafeToInt32
- uid: Benday.Common.StringExtensionMethods.SafeToString(System.String,System.String)
  name: SafeToString(string?, string)
  href: api/Benday.Common.StringExtensionMethods.html#Benday_Common_StringExtensionMethods_SafeToString_System_String_System_String_
  commentId: M:Benday.Common.StringExtensionMethods.SafeToString(System.String,System.String)
  name.vb: SafeToString(String, String)
  fullName: Benday.Common.StringExtensionMethods.SafeToString(string?, string)
  fullName.vb: Benday.Common.StringExtensionMethods.SafeToString(String, String)
  nameWithType: StringExtensionMethods.SafeToString(string?, string)
  nameWithType.vb: StringExtensionMethods.SafeToString(String, String)
- uid: Benday.Common.StringExtensionMethods.SafeToString*
  name: SafeToString
  href: api/Benday.Common.StringExtensionMethods.html#Benday_Common_StringExtensionMethods_SafeToString_
  commentId: Overload:Benday.Common.StringExtensionMethods.SafeToString
  isSpec: "True"
  fullName: Benday.Common.StringExtensionMethods.SafeToString
  nameWithType: StringExtensionMethods.SafeToString
- uid: Benday.Common.StringExtensionMethods.ToStringThrowIfNullOrEmpty(System.String,System.String)
  name: ToStringThrowIfNullOrEmpty(string?, string)
  href: api/Benday.Common.StringExtensionMethods.html#Benday_Common_StringExtensionMethods_ToStringThrowIfNullOrEmpty_System_String_System_String_
  commentId: M:Benday.Common.StringExtensionMethods.ToStringThrowIfNullOrEmpty(System.String,System.String)
  name.vb: ToStringThrowIfNullOrEmpty(String, String)
  fullName: Benday.Common.StringExtensionMethods.ToStringThrowIfNullOrEmpty(string?, string)
  fullName.vb: Benday.Common.StringExtensionMethods.ToStringThrowIfNullOrEmpty(String, String)
  nameWithType: StringExtensionMethods.ToStringThrowIfNullOrEmpty(string?, string)
  nameWithType.vb: StringExtensionMethods.ToStringThrowIfNullOrEmpty(String, String)
- uid: Benday.Common.StringExtensionMethods.ToStringThrowIfNullOrEmpty*
  name: ToStringThrowIfNullOrEmpty
  href: api/Benday.Common.StringExtensionMethods.html#Benday_Common_StringExtensionMethods_ToStringThrowIfNullOrEmpty_
  commentId: Overload:Benday.Common.StringExtensionMethods.ToStringThrowIfNullOrEmpty
  isSpec: "True"
  fullName: Benday.Common.StringExtensionMethods.ToStringThrowIfNullOrEmpty
  nameWithType: StringExtensionMethods.ToStringThrowIfNullOrEmpty
- uid: Benday.Common.Testing
  name: Benday.Common.Testing
  href: api/Benday.Common.Testing.html
  commentId: N:Benday.Common.Testing
  fullName: Benday.Common.Testing
  nameWithType: Benday.Common.Testing
- uid: Benday.Common.Testing.ArrayAssertionExtensions
  name: ArrayAssertionExtensions
  href: api/Benday.Common.Testing.ArrayAssertionExtensions.html
  commentId: T:Benday.Common.Testing.ArrayAssertionExtensions
  fullName: Benday.Common.Testing.ArrayAssertionExtensions
  nameWithType: ArrayAssertionExtensions
- uid: Benday.Common.Testing.ArrayAssertionExtensions.AllItemsAreNotNull*
  name: AllItemsAreNotNull
  href: api/Benday.Common.Testing.ArrayAssertionExtensions.html#Benday_Common_Testing_ArrayAssertionExtensions_AllItemsAreNotNull_
  commentId: Overload:Benday.Common.Testing.ArrayAssertionExtensions.AllItemsAreNotNull
  isSpec: "True"
  fullName: Benday.Common.Testing.ArrayAssertionExtensions.AllItemsAreNotNull
  nameWithType: ArrayAssertionExtensions.AllItemsAreNotNull
- uid: Benday.Common.Testing.ArrayAssertionExtensions.AllItemsAreNotNull``1(Benday.Common.Testing.ICheckArrayAssertion{``0[]},System.String)
  name: AllItemsAreNotNull<T>(ICheckArrayAssertion<T[]>, string?)
  href: api/Benday.Common.Testing.ArrayAssertionExtensions.html#Benday_Common_Testing_ArrayAssertionExtensions_AllItemsAreNotNull__1_Benday_Common_Testing_ICheckArrayAssertion___0____System_String_
  commentId: M:Benday.Common.Testing.ArrayAssertionExtensions.AllItemsAreNotNull``1(Benday.Common.Testing.ICheckArrayAssertion{``0[]},System.String)
  name.vb: AllItemsAreNotNull(Of T)(ICheckArrayAssertion(Of T()), String)
  fullName: Benday.Common.Testing.ArrayAssertionExtensions.AllItemsAreNotNull<T>(Benday.Common.Testing.ICheckArrayAssertion<T[]>, string?)
  fullName.vb: Benday.Common.Testing.ArrayAssertionExtensions.AllItemsAreNotNull(Of T)(Benday.Common.Testing.ICheckArrayAssertion(Of T()), String)
  nameWithType: ArrayAssertionExtensions.AllItemsAreNotNull<T>(ICheckArrayAssertion<T[]>, string?)
  nameWithType.vb: ArrayAssertionExtensions.AllItemsAreNotNull(Of T)(ICheckArrayAssertion(Of T()), String)
- uid: Benday.Common.Testing.ArrayAssertionExtensions.AllItemsAreUnique*
  name: AllItemsAreUnique
  href: api/Benday.Common.Testing.ArrayAssertionExtensions.html#Benday_Common_Testing_ArrayAssertionExtensions_AllItemsAreUnique_
  commentId: Overload:Benday.Common.Testing.ArrayAssertionExtensions.AllItemsAreUnique
  isSpec: "True"
  fullName: Benday.Common.Testing.ArrayAssertionExtensions.AllItemsAreUnique
  nameWithType: ArrayAssertionExtensions.AllItemsAreUnique
- uid: Benday.Common.Testing.ArrayAssertionExtensions.AllItemsAreUnique``1(Benday.Common.Testing.ICheckArrayAssertion{``0[]},System.String)
  name: AllItemsAreUnique<T>(ICheckArrayAssertion<T[]>, string?)
  href: api/Benday.Common.Testing.ArrayAssertionExtensions.html#Benday_Common_Testing_ArrayAssertionExtensions_AllItemsAreUnique__1_Benday_Common_Testing_ICheckArrayAssertion___0____System_String_
  commentId: M:Benday.Common.Testing.ArrayAssertionExtensions.AllItemsAreUnique``1(Benday.Common.Testing.ICheckArrayAssertion{``0[]},System.String)
  name.vb: AllItemsAreUnique(Of T)(ICheckArrayAssertion(Of T()), String)
  fullName: Benday.Common.Testing.ArrayAssertionExtensions.AllItemsAreUnique<T>(Benday.Common.Testing.ICheckArrayAssertion<T[]>, string?)
  fullName.vb: Benday.Common.Testing.ArrayAssertionExtensions.AllItemsAreUnique(Of T)(Benday.Common.Testing.ICheckArrayAssertion(Of T()), String)
  nameWithType: ArrayAssertionExtensions.AllItemsAreUnique<T>(ICheckArrayAssertion<T[]>, string?)
  nameWithType.vb: ArrayAssertionExtensions.AllItemsAreUnique(Of T)(ICheckArrayAssertion(Of T()), String)
- uid: Benday.Common.Testing.ArrayAssertionExtensions.Contains*
  name: Contains
  href: api/Benday.Common.Testing.ArrayAssertionExtensions.html#Benday_Common_Testing_ArrayAssertionExtensions_Contains_
  commentId: Overload:Benday.Common.Testing.ArrayAssertionExtensions.Contains
  isSpec: "True"
  fullName: Benday.Common.Testing.ArrayAssertionExtensions.Contains
  nameWithType: ArrayAssertionExtensions.Contains
- uid: Benday.Common.Testing.ArrayAssertionExtensions.Contains``1(Benday.Common.Testing.ICheckArrayAssertion{``0[]},``0,System.String)
  name: Contains<T>(ICheckArrayAssertion<T[]>, T, string?)
  href: api/Benday.Common.Testing.ArrayAssertionExtensions.html#Benday_Common_Testing_ArrayAssertionExtensions_Contains__1_Benday_Common_Testing_ICheckArrayAssertion___0______0_System_String_
  commentId: M:Benday.Common.Testing.ArrayAssertionExtensions.Contains``1(Benday.Common.Testing.ICheckArrayAssertion{``0[]},``0,System.String)
  name.vb: Contains(Of T)(ICheckArrayAssertion(Of T()), T, String)
  fullName: Benday.Common.Testing.ArrayAssertionExtensions.Contains<T>(Benday.Common.Testing.ICheckArrayAssertion<T[]>, T, string?)
  fullName.vb: Benday.Common.Testing.ArrayAssertionExtensions.Contains(Of T)(Benday.Common.Testing.ICheckArrayAssertion(Of T()), T, String)
  nameWithType: ArrayAssertionExtensions.Contains<T>(ICheckArrayAssertion<T[]>, T, string?)
  nameWithType.vb: ArrayAssertionExtensions.Contains(Of T)(ICheckArrayAssertion(Of T()), T, String)
- uid: Benday.Common.Testing.ArrayAssertionExtensions.DoesNotContain*
  name: DoesNotContain
  href: api/Benday.Common.Testing.ArrayAssertionExtensions.html#Benday_Common_Testing_ArrayAssertionExtensions_DoesNotContain_
  commentId: Overload:Benday.Common.Testing.ArrayAssertionExtensions.DoesNotContain
  isSpec: "True"
  fullName: Benday.Common.Testing.ArrayAssertionExtensions.DoesNotContain
  nameWithType: ArrayAssertionExtensions.DoesNotContain
- uid: Benday.Common.Testing.ArrayAssertionExtensions.DoesNotContain``1(Benday.Common.Testing.ICheckArrayAssertion{``0[]},``0,System.String)
  name: DoesNotContain<T>(ICheckArrayAssertion<T[]>, T, string?)
  href: api/Benday.Common.Testing.ArrayAssertionExtensions.html#Benday_Common_Testing_ArrayAssertionExtensions_DoesNotContain__1_Benday_Common_Testing_ICheckArrayAssertion___0______0_System_String_
  commentId: M:Benday.Common.Testing.ArrayAssertionExtensions.DoesNotContain``1(Benday.Common.Testing.ICheckArrayAssertion{``0[]},``0,System.String)
  name.vb: DoesNotContain(Of T)(ICheckArrayAssertion(Of T()), T, String)
  fullName: Benday.Common.Testing.ArrayAssertionExtensions.DoesNotContain<T>(Benday.Common.Testing.ICheckArrayAssertion<T[]>, T, string?)
  fullName.vb: Benday.Common.Testing.ArrayAssertionExtensions.DoesNotContain(Of T)(Benday.Common.Testing.ICheckArrayAssertion(Of T()), T, String)
  nameWithType: ArrayAssertionExtensions.DoesNotContain<T>(ICheckArrayAssertion<T[]>, T, string?)
  nameWithType.vb: ArrayAssertionExtensions.DoesNotContain(Of T)(ICheckArrayAssertion(Of T()), T, String)
- uid: Benday.Common.Testing.ArrayAssertionExtensions.IsEqualTo*
  name: IsEqualTo
  href: api/Benday.Common.Testing.ArrayAssertionExtensions.html#Benday_Common_Testing_ArrayAssertionExtensions_IsEqualTo_
  commentId: Overload:Benday.Common.Testing.ArrayAssertionExtensions.IsEqualTo
  isSpec: "True"
  fullName: Benday.Common.Testing.ArrayAssertionExtensions.IsEqualTo
  nameWithType: ArrayAssertionExtensions.IsEqualTo
- uid: Benday.Common.Testing.ArrayAssertionExtensions.IsEqualTo``1(Benday.Common.Testing.ICheckArrayAssertion{``0[]},System.Collections.Generic.IEnumerable{``0},System.String)
  name: IsEqualTo<T>(ICheckArrayAssertion<T[]>, IEnumerable<T>, string?)
  href: api/Benday.Common.Testing.ArrayAssertionExtensions.html#Benday_Common_Testing_ArrayAssertionExtensions_IsEqualTo__1_Benday_Common_Testing_ICheckArrayAssertion___0____System_Collections_Generic_IEnumerable___0__System_String_
  commentId: M:Benday.Common.Testing.ArrayAssertionExtensions.IsEqualTo``1(Benday.Common.Testing.ICheckArrayAssertion{``0[]},System.Collections.Generic.IEnumerable{``0},System.String)
  name.vb: IsEqualTo(Of T)(ICheckArrayAssertion(Of T()), IEnumerable(Of T), String)
  fullName: Benday.Common.Testing.ArrayAssertionExtensions.IsEqualTo<T>(Benday.Common.Testing.ICheckArrayAssertion<T[]>, System.Collections.Generic.IEnumerable<T>, string?)
  fullName.vb: Benday.Common.Testing.ArrayAssertionExtensions.IsEqualTo(Of T)(Benday.Common.Testing.ICheckArrayAssertion(Of T()), System.Collections.Generic.IEnumerable(Of T), String)
  nameWithType: ArrayAssertionExtensions.IsEqualTo<T>(ICheckArrayAssertion<T[]>, IEnumerable<T>, string?)
  nameWithType.vb: ArrayAssertionExtensions.IsEqualTo(Of T)(ICheckArrayAssertion(Of T()), IEnumerable(Of T), String)
- uid: Benday.Common.Testing.ArrayAssertionExtensions.IsEquivalentTo*
  name: IsEquivalentTo
  href: api/Benday.Common.Testing.ArrayAssertionExtensions.html#Benday_Common_Testing_ArrayAssertionExtensions_IsEquivalentTo_
  commentId: Overload:Benday.Common.Testing.ArrayAssertionExtensions.IsEquivalentTo
  isSpec: "True"
  fullName: Benday.Common.Testing.ArrayAssertionExtensions.IsEquivalentTo
  nameWithType: ArrayAssertionExtensions.IsEquivalentTo
- uid: Benday.Common.Testing.ArrayAssertionExtensions.IsEquivalentTo``1(Benday.Common.Testing.ICheckArrayAssertion{``0[]},System.Collections.Generic.IEnumerable{``0},System.String)
  name: IsEquivalentTo<T>(ICheckArrayAssertion<T[]>, IEnumerable<T>, string?)
  href: api/Benday.Common.Testing.ArrayAssertionExtensions.html#Benday_Common_Testing_ArrayAssertionExtensions_IsEquivalentTo__1_Benday_Common_Testing_ICheckArrayAssertion___0____System_Collections_Generic_IEnumerable___0__System_String_
  commentId: M:Benday.Common.Testing.ArrayAssertionExtensions.IsEquivalentTo``1(Benday.Common.Testing.ICheckArrayAssertion{``0[]},System.Collections.Generic.IEnumerable{``0},System.String)
  name.vb: IsEquivalentTo(Of T)(ICheckArrayAssertion(Of T()), IEnumerable(Of T), String)
  fullName: Benday.Common.Testing.ArrayAssertionExtensions.IsEquivalentTo<T>(Benday.Common.Testing.ICheckArrayAssertion<T[]>, System.Collections.Generic.IEnumerable<T>, string?)
  fullName.vb: Benday.Common.Testing.ArrayAssertionExtensions.IsEquivalentTo(Of T)(Benday.Common.Testing.ICheckArrayAssertion(Of T()), System.Collections.Generic.IEnumerable(Of T), String)
  nameWithType: ArrayAssertionExtensions.IsEquivalentTo<T>(ICheckArrayAssertion<T[]>, IEnumerable<T>, string?)
  nameWithType.vb: ArrayAssertionExtensions.IsEquivalentTo(Of T)(ICheckArrayAssertion(Of T()), IEnumerable(Of T), String)
- uid: Benday.Common.Testing.ArrayAssertionExtensions.IsNotEqualTo*
  name: IsNotEqualTo
  href: api/Benday.Common.Testing.ArrayAssertionExtensions.html#Benday_Common_Testing_ArrayAssertionExtensions_IsNotEqualTo_
  commentId: Overload:Benday.Common.Testing.ArrayAssertionExtensions.IsNotEqualTo
  isSpec: "True"
  fullName: Benday.Common.Testing.ArrayAssertionExtensions.IsNotEqualTo
  nameWithType: ArrayAssertionExtensions.IsNotEqualTo
- uid: Benday.Common.Testing.ArrayAssertionExtensions.IsNotEqualTo``1(Benday.Common.Testing.ICheckArrayAssertion{``0[]},System.Collections.Generic.IEnumerable{``0},System.String)
  name: IsNotEqualTo<T>(ICheckArrayAssertion<T[]>, IEnumerable<T>, string?)
  href: api/Benday.Common.Testing.ArrayAssertionExtensions.html#Benday_Common_Testing_ArrayAssertionExtensions_IsNotEqualTo__1_Benday_Common_Testing_ICheckArrayAssertion___0____System_Collections_Generic_IEnumerable___0__System_String_
  commentId: M:Benday.Common.Testing.ArrayAssertionExtensions.IsNotEqualTo``1(Benday.Common.Testing.ICheckArrayAssertion{``0[]},System.Collections.Generic.IEnumerable{``0},System.String)
  name.vb: IsNotEqualTo(Of T)(ICheckArrayAssertion(Of T()), IEnumerable(Of T), String)
  fullName: Benday.Common.Testing.ArrayAssertionExtensions.IsNotEqualTo<T>(Benday.Common.Testing.ICheckArrayAssertion<T[]>, System.Collections.Generic.IEnumerable<T>, string?)
  fullName.vb: Benday.Common.Testing.ArrayAssertionExtensions.IsNotEqualTo(Of T)(Benday.Common.Testing.ICheckArrayAssertion(Of T()), System.Collections.Generic.IEnumerable(Of T), String)
  nameWithType: ArrayAssertionExtensions.IsNotEqualTo<T>(ICheckArrayAssertion<T[]>, IEnumerable<T>, string?)
  nameWithType.vb: ArrayAssertionExtensions.IsNotEqualTo(Of T)(ICheckArrayAssertion(Of T()), IEnumerable(Of T), String)
- uid: Benday.Common.Testing.ArrayAssertionExtensions.IsNotEquivalentTo*
  name: IsNotEquivalentTo
  href: api/Benday.Common.Testing.ArrayAssertionExtensions.html#Benday_Common_Testing_ArrayAssertionExtensions_IsNotEquivalentTo_
  commentId: Overload:Benday.Common.Testing.ArrayAssertionExtensions.IsNotEquivalentTo
  isSpec: "True"
  fullName: Benday.Common.Testing.ArrayAssertionExtensions.IsNotEquivalentTo
  nameWithType: ArrayAssertionExtensions.IsNotEquivalentTo
- uid: Benday.Common.Testing.ArrayAssertionExtensions.IsNotEquivalentTo``1(Benday.Common.Testing.ICheckArrayAssertion{``0[]},System.Collections.Generic.IEnumerable{``0},System.String)
  name: IsNotEquivalentTo<T>(ICheckArrayAssertion<T[]>, IEnumerable<T>, string?)
  href: api/Benday.Common.Testing.ArrayAssertionExtensions.html#Benday_Common_Testing_ArrayAssertionExtensions_IsNotEquivalentTo__1_Benday_Common_Testing_ICheckArrayAssertion___0____System_Collections_Generic_IEnumerable___0__System_String_
  commentId: M:Benday.Common.Testing.ArrayAssertionExtensions.IsNotEquivalentTo``1(Benday.Common.Testing.ICheckArrayAssertion{``0[]},System.Collections.Generic.IEnumerable{``0},System.String)
  name.vb: IsNotEquivalentTo(Of T)(ICheckArrayAssertion(Of T()), IEnumerable(Of T), String)
  fullName: Benday.Common.Testing.ArrayAssertionExtensions.IsNotEquivalentTo<T>(Benday.Common.Testing.ICheckArrayAssertion<T[]>, System.Collections.Generic.IEnumerable<T>, string?)
  fullName.vb: Benday.Common.Testing.ArrayAssertionExtensions.IsNotEquivalentTo(Of T)(Benday.Common.Testing.ICheckArrayAssertion(Of T()), System.Collections.Generic.IEnumerable(Of T), String)
  nameWithType: ArrayAssertionExtensions.IsNotEquivalentTo<T>(ICheckArrayAssertion<T[]>, IEnumerable<T>, string?)
  nameWithType.vb: ArrayAssertionExtensions.IsNotEquivalentTo(Of T)(ICheckArrayAssertion(Of T()), IEnumerable(Of T), String)
- uid: Benday.Common.Testing.ArrayAssertionExtensions.IsSubsetOf*
  name: IsSubsetOf
  href: api/Benday.Common.Testing.ArrayAssertionExtensions.html#Benday_Common_Testing_ArrayAssertionExtensions_IsSubsetOf_
  commentId: Overload:Benday.Common.Testing.ArrayAssertionExtensions.IsSubsetOf
  isSpec: "True"
  fullName: Benday.Common.Testing.ArrayAssertionExtensions.IsSubsetOf
  nameWithType: ArrayAssertionExtensions.IsSubsetOf
- uid: Benday.Common.Testing.ArrayAssertionExtensions.IsSubsetOf``1(Benday.Common.Testing.ICheckArrayAssertion{``0[]},System.Collections.Generic.IEnumerable{``0},System.String)
  name: IsSubsetOf<T>(ICheckArrayAssertion<T[]>, IEnumerable<T>, string?)
  href: api/Benday.Common.Testing.ArrayAssertionExtensions.html#Benday_Common_Testing_ArrayAssertionExtensions_IsSubsetOf__1_Benday_Common_Testing_ICheckArrayAssertion___0____System_Collections_Generic_IEnumerable___0__System_String_
  commentId: M:Benday.Common.Testing.ArrayAssertionExtensions.IsSubsetOf``1(Benday.Common.Testing.ICheckArrayAssertion{``0[]},System.Collections.Generic.IEnumerable{``0},System.String)
  name.vb: IsSubsetOf(Of T)(ICheckArrayAssertion(Of T()), IEnumerable(Of T), String)
  fullName: Benday.Common.Testing.ArrayAssertionExtensions.IsSubsetOf<T>(Benday.Common.Testing.ICheckArrayAssertion<T[]>, System.Collections.Generic.IEnumerable<T>, string?)
  fullName.vb: Benday.Common.Testing.ArrayAssertionExtensions.IsSubsetOf(Of T)(Benday.Common.Testing.ICheckArrayAssertion(Of T()), System.Collections.Generic.IEnumerable(Of T), String)
  nameWithType: ArrayAssertionExtensions.IsSubsetOf<T>(ICheckArrayAssertion<T[]>, IEnumerable<T>, string?)
  nameWithType.vb: ArrayAssertionExtensions.IsSubsetOf(Of T)(ICheckArrayAssertion(Of T()), IEnumerable(Of T), String)
- uid: Benday.Common.Testing.ArrayAssertionExtensions.IsSupersetOf*
  name: IsSupersetOf
  href: api/Benday.Common.Testing.ArrayAssertionExtensions.html#Benday_Common_Testing_ArrayAssertionExtensions_IsSupersetOf_
  commentId: Overload:Benday.Common.Testing.ArrayAssertionExtensions.IsSupersetOf
  isSpec: "True"
  fullName: Benday.Common.Testing.ArrayAssertionExtensions.IsSupersetOf
  nameWithType: ArrayAssertionExtensions.IsSupersetOf
- uid: Benday.Common.Testing.ArrayAssertionExtensions.IsSupersetOf``1(Benday.Common.Testing.ICheckArrayAssertion{``0[]},System.Collections.Generic.IEnumerable{``0},System.String)
  name: IsSupersetOf<T>(ICheckArrayAssertion<T[]>, IEnumerable<T>, string?)
  href: api/Benday.Common.Testing.ArrayAssertionExtensions.html#Benday_Common_Testing_ArrayAssertionExtensions_IsSupersetOf__1_Benday_Common_Testing_ICheckArrayAssertion___0____System_Collections_Generic_IEnumerable___0__System_String_
  commentId: M:Benday.Common.Testing.ArrayAssertionExtensions.IsSupersetOf``1(Benday.Common.Testing.ICheckArrayAssertion{``0[]},System.Collections.Generic.IEnumerable{``0},System.String)
  name.vb: IsSupersetOf(Of T)(ICheckArrayAssertion(Of T()), IEnumerable(Of T), String)
  fullName: Benday.Common.Testing.ArrayAssertionExtensions.IsSupersetOf<T>(Benday.Common.Testing.ICheckArrayAssertion<T[]>, System.Collections.Generic.IEnumerable<T>, string?)
  fullName.vb: Benday.Common.Testing.ArrayAssertionExtensions.IsSupersetOf(Of T)(Benday.Common.Testing.ICheckArrayAssertion(Of T()), System.Collections.Generic.IEnumerable(Of T), String)
  nameWithType: ArrayAssertionExtensions.IsSupersetOf<T>(ICheckArrayAssertion<T[]>, IEnumerable<T>, string?)
  nameWithType.vb: ArrayAssertionExtensions.IsSupersetOf(Of T)(ICheckArrayAssertion(Of T()), IEnumerable(Of T), String)
- uid: Benday.Common.Testing.Assert
  name: Assert
  href: api/Benday.Common.Testing.Assert.html
  commentId: T:Benday.Common.Testing.Assert
  fullName: Benday.Common.Testing.Assert
  nameWithType: Assert
- uid: Benday.Common.Testing.Assert.AreEqual*
  name: AreEqual
  href: api/Benday.Common.Testing.Assert.html#Benday_Common_Testing_Assert_AreEqual_
  commentId: Overload:Benday.Common.Testing.Assert.AreEqual
  isSpec: "True"
  fullName: Benday.Common.Testing.Assert.AreEqual
  nameWithType: Assert.AreEqual
- uid: Benday.Common.Testing.Assert.AreEqual``1(``0,``0,System.String)
  name: AreEqual<T>(T, T, string)
  href: api/Benday.Common.Testing.Assert.html#Benday_Common_Testing_Assert_AreEqual__1___0___0_System_String_
  commentId: M:Benday.Common.Testing.Assert.AreEqual``1(``0,``0,System.String)
  name.vb: AreEqual(Of T)(T, T, String)
  fullName: Benday.Common.Testing.Assert.AreEqual<T>(T, T, string)
  fullName.vb: Benday.Common.Testing.Assert.AreEqual(Of T)(T, T, String)
  nameWithType: Assert.AreEqual<T>(T, T, string)
  nameWithType.vb: Assert.AreEqual(Of T)(T, T, String)
- uid: Benday.Common.Testing.Assert.AreNotEqual*
  name: AreNotEqual
  href: api/Benday.Common.Testing.Assert.html#Benday_Common_Testing_Assert_AreNotEqual_
  commentId: Overload:Benday.Common.Testing.Assert.AreNotEqual
  isSpec: "True"
  fullName: Benday.Common.Testing.Assert.AreNotEqual
  nameWithType: Assert.AreNotEqual
- uid: Benday.Common.Testing.Assert.AreNotEqual``1(``0,``0,System.String)
  name: AreNotEqual<T>(T, T, string)
  href: api/Benday.Common.Testing.Assert.html#Benday_Common_Testing_Assert_AreNotEqual__1___0___0_System_String_
  commentId: M:Benday.Common.Testing.Assert.AreNotEqual``1(``0,``0,System.String)
  name.vb: AreNotEqual(Of T)(T, T, String)
  fullName: Benday.Common.Testing.Assert.AreNotEqual<T>(T, T, string)
  fullName.vb: Benday.Common.Testing.Assert.AreNotEqual(Of T)(T, T, String)
  nameWithType: Assert.AreNotEqual<T>(T, T, string)
  nameWithType.vb: Assert.AreNotEqual(Of T)(T, T, String)
- uid: Benday.Common.Testing.Assert.AreNotSame(System.Object,System.Object,System.String)
  name: AreNotSame(object?, object?, string)
  href: api/Benday.Common.Testing.Assert.html#Benday_Common_Testing_Assert_AreNotSame_System_Object_System_Object_System_String_
  commentId: M:Benday.Common.Testing.Assert.AreNotSame(System.Object,System.Object,System.String)
  name.vb: AreNotSame(Object, Object, String)
  fullName: Benday.Common.Testing.Assert.AreNotSame(object?, object?, string)
  fullName.vb: Benday.Common.Testing.Assert.AreNotSame(Object, Object, String)
  nameWithType: Assert.AreNotSame(object?, object?, string)
  nameWithType.vb: Assert.AreNotSame(Object, Object, String)
- uid: Benday.Common.Testing.Assert.AreNotSame*
  name: AreNotSame
  href: api/Benday.Common.Testing.Assert.html#Benday_Common_Testing_Assert_AreNotSame_
  commentId: Overload:Benday.Common.Testing.Assert.AreNotSame
  isSpec: "True"
  fullName: Benday.Common.Testing.Assert.AreNotSame
  nameWithType: Assert.AreNotSame
- uid: Benday.Common.Testing.Assert.AreSame(System.Object,System.Object,System.String)
  name: AreSame(object?, object?, string)
  href: api/Benday.Common.Testing.Assert.html#Benday_Common_Testing_Assert_AreSame_System_Object_System_Object_System_String_
  commentId: M:Benday.Common.Testing.Assert.AreSame(System.Object,System.Object,System.String)
  name.vb: AreSame(Object, Object, String)
  fullName: Benday.Common.Testing.Assert.AreSame(object?, object?, string)
  fullName.vb: Benday.Common.Testing.Assert.AreSame(Object, Object, String)
  nameWithType: Assert.AreSame(object?, object?, string)
  nameWithType.vb: Assert.AreSame(Object, Object, String)
- uid: Benday.Common.Testing.Assert.AreSame*
  name: AreSame
  href: api/Benday.Common.Testing.Assert.html#Benday_Common_Testing_Assert_AreSame_
  commentId: Overload:Benday.Common.Testing.Assert.AreSame
  isSpec: "True"
  fullName: Benday.Common.Testing.Assert.AreSame
  nameWithType: Assert.AreSame
- uid: Benday.Common.Testing.Assert.DoesNotThrow(System.Action,System.String)
  name: DoesNotThrow(Action, string)
  href: api/Benday.Common.Testing.Assert.html#Benday_Common_Testing_Assert_DoesNotThrow_System_Action_System_String_
  commentId: M:Benday.Common.Testing.Assert.DoesNotThrow(System.Action,System.String)
  name.vb: DoesNotThrow(Action, String)
  fullName: Benday.Common.Testing.Assert.DoesNotThrow(System.Action, string)
  fullName.vb: Benday.Common.Testing.Assert.DoesNotThrow(System.Action, String)
  nameWithType: Assert.DoesNotThrow(Action, string)
  nameWithType.vb: Assert.DoesNotThrow(Action, String)
- uid: Benday.Common.Testing.Assert.DoesNotThrow*
  name: DoesNotThrow
  href: api/Benday.Common.Testing.Assert.html#Benday_Common_Testing_Assert_DoesNotThrow_
  commentId: Overload:Benday.Common.Testing.Assert.DoesNotThrow
  isSpec: "True"
  fullName: Benday.Common.Testing.Assert.DoesNotThrow
  nameWithType: Assert.DoesNotThrow
- uid: Benday.Common.Testing.Assert.Fail(System.String)
  name: Fail(string)
  href: api/Benday.Common.Testing.Assert.html#Benday_Common_Testing_Assert_Fail_System_String_
  commentId: M:Benday.Common.Testing.Assert.Fail(System.String)
  name.vb: Fail(String)
  fullName: Benday.Common.Testing.Assert.Fail(string)
  fullName.vb: Benday.Common.Testing.Assert.Fail(String)
  nameWithType: Assert.Fail(string)
  nameWithType.vb: Assert.Fail(String)
- uid: Benday.Common.Testing.Assert.Fail*
  name: Fail
  href: api/Benday.Common.Testing.Assert.html#Benday_Common_Testing_Assert_Fail_
  commentId: Overload:Benday.Common.Testing.Assert.Fail
  isSpec: "True"
  fullName: Benday.Common.Testing.Assert.Fail
  nameWithType: Assert.Fail
- uid: Benday.Common.Testing.Assert.IsFalse(System.Boolean,System.String)
  name: IsFalse(bool, string)
  href: api/Benday.Common.Testing.Assert.html#Benday_Common_Testing_Assert_IsFalse_System_Boolean_System_String_
  commentId: M:Benday.Common.Testing.Assert.IsFalse(System.Boolean,System.String)
  name.vb: IsFalse(Boolean, String)
  fullName: Benday.Common.Testing.Assert.IsFalse(bool, string)
  fullName.vb: Benday.Common.Testing.Assert.IsFalse(Boolean, String)
  nameWithType: Assert.IsFalse(bool, string)
  nameWithType.vb: Assert.IsFalse(Boolean, String)
- uid: Benday.Common.Testing.Assert.IsFalse*
  name: IsFalse
  href: api/Benday.Common.Testing.Assert.html#Benday_Common_Testing_Assert_IsFalse_
  commentId: Overload:Benday.Common.Testing.Assert.IsFalse
  isSpec: "True"
  fullName: Benday.Common.Testing.Assert.IsFalse
  nameWithType: Assert.IsFalse
- uid: Benday.Common.Testing.Assert.IsNotNull*
  name: IsNotNull
  href: api/Benday.Common.Testing.Assert.html#Benday_Common_Testing_Assert_IsNotNull_
  commentId: Overload:Benday.Common.Testing.Assert.IsNotNull
  isSpec: "True"
  fullName: Benday.Common.Testing.Assert.IsNotNull
  nameWithType: Assert.IsNotNull
- uid: Benday.Common.Testing.Assert.IsNotNull``1(``0,System.String)
  name: IsNotNull<T>(T?, string)
  href: api/Benday.Common.Testing.Assert.html#Benday_Common_Testing_Assert_IsNotNull__1___0_System_String_
  commentId: M:Benday.Common.Testing.Assert.IsNotNull``1(``0,System.String)
  name.vb: IsNotNull(Of T)(T, String)
  fullName: Benday.Common.Testing.Assert.IsNotNull<T>(T?, string)
  fullName.vb: Benday.Common.Testing.Assert.IsNotNull(Of T)(T, String)
  nameWithType: Assert.IsNotNull<T>(T?, string)
  nameWithType.vb: Assert.IsNotNull(Of T)(T, String)
- uid: Benday.Common.Testing.Assert.IsNotOfType*
  name: IsNotOfType
  href: api/Benday.Common.Testing.Assert.html#Benday_Common_Testing_Assert_IsNotOfType_
  commentId: Overload:Benday.Common.Testing.Assert.IsNotOfType
  isSpec: "True"
  fullName: Benday.Common.Testing.Assert.IsNotOfType
  nameWithType: Assert.IsNotOfType
- uid: Benday.Common.Testing.Assert.IsNotOfType``1(System.Object,System.String)
  name: IsNotOfType<T>(object?, string)
  href: api/Benday.Common.Testing.Assert.html#Benday_Common_Testing_Assert_IsNotOfType__1_System_Object_System_String_
  commentId: M:Benday.Common.Testing.Assert.IsNotOfType``1(System.Object,System.String)
  name.vb: IsNotOfType(Of T)(Object, String)
  fullName: Benday.Common.Testing.Assert.IsNotOfType<T>(object?, string)
  fullName.vb: Benday.Common.Testing.Assert.IsNotOfType(Of T)(Object, String)
  nameWithType: Assert.IsNotOfType<T>(object?, string)
  nameWithType.vb: Assert.IsNotOfType(Of T)(Object, String)
- uid: Benday.Common.Testing.Assert.IsNull*
  name: IsNull
  href: api/Benday.Common.Testing.Assert.html#Benday_Common_Testing_Assert_IsNull_
  commentId: Overload:Benday.Common.Testing.Assert.IsNull
  isSpec: "True"
  fullName: Benday.Common.Testing.Assert.IsNull
  nameWithType: Assert.IsNull
- uid: Benday.Common.Testing.Assert.IsNull``1(``0,System.String)
  name: IsNull<T>(T?, string)
  href: api/Benday.Common.Testing.Assert.html#Benday_Common_Testing_Assert_IsNull__1___0_System_String_
  commentId: M:Benday.Common.Testing.Assert.IsNull``1(``0,System.String)
  name.vb: IsNull(Of T)(T, String)
  fullName: Benday.Common.Testing.Assert.IsNull<T>(T?, string)
  fullName.vb: Benday.Common.Testing.Assert.IsNull(Of T)(T, String)
  nameWithType: Assert.IsNull<T>(T?, string)
  nameWithType.vb: Assert.IsNull(Of T)(T, String)
- uid: Benday.Common.Testing.Assert.IsOfType*
  name: IsOfType
  href: api/Benday.Common.Testing.Assert.html#Benday_Common_Testing_Assert_IsOfType_
  commentId: Overload:Benday.Common.Testing.Assert.IsOfType
  isSpec: "True"
  fullName: Benday.Common.Testing.Assert.IsOfType
  nameWithType: Assert.IsOfType
- uid: Benday.Common.Testing.Assert.IsOfType``1(System.Object,System.String)
  name: IsOfType<T>(object?, string)
  href: api/Benday.Common.Testing.Assert.html#Benday_Common_Testing_Assert_IsOfType__1_System_Object_System_String_
  commentId: M:Benday.Common.Testing.Assert.IsOfType``1(System.Object,System.String)
  name.vb: IsOfType(Of T)(Object, String)
  fullName: Benday.Common.Testing.Assert.IsOfType<T>(object?, string)
  fullName.vb: Benday.Common.Testing.Assert.IsOfType(Of T)(Object, String)
  nameWithType: Assert.IsOfType<T>(object?, string)
  nameWithType.vb: Assert.IsOfType(Of T)(Object, String)
- uid: Benday.Common.Testing.Assert.IsTrue(System.Boolean,System.String)
  name: IsTrue(bool, string)
  href: api/Benday.Common.Testing.Assert.html#Benday_Common_Testing_Assert_IsTrue_System_Boolean_System_String_
  commentId: M:Benday.Common.Testing.Assert.IsTrue(System.Boolean,System.String)
  name.vb: IsTrue(Boolean, String)
  fullName: Benday.Common.Testing.Assert.IsTrue(bool, string)
  fullName.vb: Benday.Common.Testing.Assert.IsTrue(Boolean, String)
  nameWithType: Assert.IsTrue(bool, string)
  nameWithType.vb: Assert.IsTrue(Boolean, String)
- uid: Benday.Common.Testing.Assert.IsTrue*
  name: IsTrue
  href: api/Benday.Common.Testing.Assert.html#Benday_Common_Testing_Assert_IsTrue_
  commentId: Overload:Benday.Common.Testing.Assert.IsTrue
  isSpec: "True"
  fullName: Benday.Common.Testing.Assert.IsTrue
  nameWithType: Assert.IsTrue
- uid: Benday.Common.Testing.Assert.Throws*
  name: Throws
  href: api/Benday.Common.Testing.Assert.html#Benday_Common_Testing_Assert_Throws_
  commentId: Overload:Benday.Common.Testing.Assert.Throws
  isSpec: "True"
  fullName: Benday.Common.Testing.Assert.Throws
  nameWithType: Assert.Throws
- uid: Benday.Common.Testing.Assert.Throws``1(System.Action,System.String)
  name: Throws<T>(Action, string)
  href: api/Benday.Common.Testing.Assert.html#Benday_Common_Testing_Assert_Throws__1_System_Action_System_String_
  commentId: M:Benday.Common.Testing.Assert.Throws``1(System.Action,System.String)
  name.vb: Throws(Of T)(Action, String)
  fullName: Benday.Common.Testing.Assert.Throws<T>(System.Action, string)
  fullName.vb: Benday.Common.Testing.Assert.Throws(Of T)(System.Action, String)
  nameWithType: Assert.Throws<T>(Action, string)
  nameWithType.vb: Assert.Throws(Of T)(Action, String)
- uid: Benday.Common.Testing.AssertionException
  name: AssertionException
  href: api/Benday.Common.Testing.AssertionException.html
  commentId: T:Benday.Common.Testing.AssertionException
  fullName: Benday.Common.Testing.AssertionException
  nameWithType: AssertionException
- uid: Benday.Common.Testing.AssertionException.#ctor
  name: AssertionException()
  href: api/Benday.Common.Testing.AssertionException.html#Benday_Common_Testing_AssertionException__ctor
  commentId: M:Benday.Common.Testing.AssertionException.#ctor
  name.vb: New()
  fullName: Benday.Common.Testing.AssertionException.AssertionException()
  fullName.vb: Benday.Common.Testing.AssertionException.New()
  nameWithType: AssertionException.AssertionException()
  nameWithType.vb: AssertionException.New()
- uid: Benday.Common.Testing.AssertionException.#ctor(System.String)
  name: AssertionException(string)
  href: api/Benday.Common.Testing.AssertionException.html#Benday_Common_Testing_AssertionException__ctor_System_String_
  commentId: M:Benday.Common.Testing.AssertionException.#ctor(System.String)
  name.vb: New(String)
  fullName: Benday.Common.Testing.AssertionException.AssertionException(string)
  fullName.vb: Benday.Common.Testing.AssertionException.New(String)
  nameWithType: AssertionException.AssertionException(string)
  nameWithType.vb: AssertionException.New(String)
- uid: Benday.Common.Testing.AssertionException.#ctor(System.String,System.Exception)
  name: AssertionException(string, Exception)
  href: api/Benday.Common.Testing.AssertionException.html#Benday_Common_Testing_AssertionException__ctor_System_String_System_Exception_
  commentId: M:Benday.Common.Testing.AssertionException.#ctor(System.String,System.Exception)
  name.vb: New(String, Exception)
  fullName: Benday.Common.Testing.AssertionException.AssertionException(string, System.Exception)
  fullName.vb: Benday.Common.Testing.AssertionException.New(String, System.Exception)
  nameWithType: AssertionException.AssertionException(string, Exception)
  nameWithType.vb: AssertionException.New(String, Exception)
- uid: Benday.Common.Testing.AssertionException.#ctor*
  name: AssertionException
  href: api/Benday.Common.Testing.AssertionException.html#Benday_Common_Testing_AssertionException__ctor_
  commentId: Overload:Benday.Common.Testing.AssertionException.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Benday.Common.Testing.AssertionException.AssertionException
  fullName.vb: Benday.Common.Testing.AssertionException.New
  nameWithType: AssertionException.AssertionException
  nameWithType.vb: AssertionException.New
- uid: Benday.Common.Testing.CheckArrayAssertion`1
  name: CheckArrayAssertion<T>
  href: api/Benday.Common.Testing.CheckArrayAssertion-1.html
  commentId: T:Benday.Common.Testing.CheckArrayAssertion`1
  name.vb: CheckArrayAssertion(Of T)
  fullName: Benday.Common.Testing.CheckArrayAssertion<T>
  fullName.vb: Benday.Common.Testing.CheckArrayAssertion(Of T)
  nameWithType: CheckArrayAssertion<T>
  nameWithType.vb: CheckArrayAssertion(Of T)
- uid: Benday.Common.Testing.CheckArrayAssertion`1.#ctor(`0)
  name: CheckArrayAssertion(T)
  href: api/Benday.Common.Testing.CheckArrayAssertion-1.html#Benday_Common_Testing_CheckArrayAssertion_1__ctor__0_
  commentId: M:Benday.Common.Testing.CheckArrayAssertion`1.#ctor(`0)
  name.vb: New(T)
  fullName: Benday.Common.Testing.CheckArrayAssertion<T>.CheckArrayAssertion(T)
  fullName.vb: Benday.Common.Testing.CheckArrayAssertion(Of T).New(T)
  nameWithType: CheckArrayAssertion<T>.CheckArrayAssertion(T)
  nameWithType.vb: CheckArrayAssertion(Of T).New(T)
- uid: Benday.Common.Testing.CheckArrayAssertion`1.#ctor*
  name: CheckArrayAssertion
  href: api/Benday.Common.Testing.CheckArrayAssertion-1.html#Benday_Common_Testing_CheckArrayAssertion_1__ctor_
  commentId: Overload:Benday.Common.Testing.CheckArrayAssertion`1.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Benday.Common.Testing.CheckArrayAssertion<T>.CheckArrayAssertion
  fullName.vb: Benday.Common.Testing.CheckArrayAssertion(Of T).New
  nameWithType: CheckArrayAssertion<T>.CheckArrayAssertion
  nameWithType.vb: CheckArrayAssertion(Of T).New
- uid: Benday.Common.Testing.CheckAssertionExtensions
  name: CheckAssertionExtensions
  href: api/Benday.Common.Testing.CheckAssertionExtensions.html
  commentId: T:Benday.Common.Testing.CheckAssertionExtensions
  fullName: Benday.Common.Testing.CheckAssertionExtensions
  nameWithType: CheckAssertionExtensions
- uid: Benday.Common.Testing.CheckAssertionExtensions.Fail*
  name: Fail
  href: api/Benday.Common.Testing.CheckAssertionExtensions.html#Benday_Common_Testing_CheckAssertionExtensions_Fail_
  commentId: Overload:Benday.Common.Testing.CheckAssertionExtensions.Fail
  isSpec: "True"
  fullName: Benday.Common.Testing.CheckAssertionExtensions.Fail
  nameWithType: CheckAssertionExtensions.Fail
- uid: Benday.Common.Testing.CheckAssertionExtensions.FailWithOptionalMessage*
  name: FailWithOptionalMessage
  href: api/Benday.Common.Testing.CheckAssertionExtensions.html#Benday_Common_Testing_CheckAssertionExtensions_FailWithOptionalMessage_
  commentId: Overload:Benday.Common.Testing.CheckAssertionExtensions.FailWithOptionalMessage
  isSpec: "True"
  fullName: Benday.Common.Testing.CheckAssertionExtensions.FailWithOptionalMessage
  nameWithType: CheckAssertionExtensions.FailWithOptionalMessage
- uid: Benday.Common.Testing.CheckAssertionExtensions.FailWithOptionalMessage``1(Benday.Common.Testing.ICheckAssertion{``0},System.String,System.String)
  name: FailWithOptionalMessage<T>(ICheckAssertion<T>, string?, string)
  href: api/Benday.Common.Testing.CheckAssertionExtensions.html#Benday_Common_Testing_CheckAssertionExtensions_FailWithOptionalMessage__1_Benday_Common_Testing_ICheckAssertion___0__System_String_System_String_
  commentId: M:Benday.Common.Testing.CheckAssertionExtensions.FailWithOptionalMessage``1(Benday.Common.Testing.ICheckAssertion{``0},System.String,System.String)
  name.vb: FailWithOptionalMessage(Of T)(ICheckAssertion(Of T), String, String)
  fullName: Benday.Common.Testing.CheckAssertionExtensions.FailWithOptionalMessage<T>(Benday.Common.Testing.ICheckAssertion<T>, string?, string)
  fullName.vb: Benday.Common.Testing.CheckAssertionExtensions.FailWithOptionalMessage(Of T)(Benday.Common.Testing.ICheckAssertion(Of T), String, String)
  nameWithType: CheckAssertionExtensions.FailWithOptionalMessage<T>(ICheckAssertion<T>, string?, string)
  nameWithType.vb: CheckAssertionExtensions.FailWithOptionalMessage(Of T)(ICheckAssertion(Of T), String, String)
- uid: Benday.Common.Testing.CheckAssertionExtensions.Fail``1(Benday.Common.Testing.ICheckAssertion{``0},System.String)
  name: Fail<T>(ICheckAssertion<T>, string)
  href: api/Benday.Common.Testing.CheckAssertionExtensions.html#Benday_Common_Testing_CheckAssertionExtensions_Fail__1_Benday_Common_Testing_ICheckAssertion___0__System_String_
  commentId: M:Benday.Common.Testing.CheckAssertionExtensions.Fail``1(Benday.Common.Testing.ICheckAssertion{``0},System.String)
  name.vb: Fail(Of T)(ICheckAssertion(Of T), String)
  fullName: Benday.Common.Testing.CheckAssertionExtensions.Fail<T>(Benday.Common.Testing.ICheckAssertion<T>, string)
  fullName.vb: Benday.Common.Testing.CheckAssertionExtensions.Fail(Of T)(Benday.Common.Testing.ICheckAssertion(Of T), String)
  nameWithType: CheckAssertionExtensions.Fail<T>(ICheckAssertion<T>, string)
  nameWithType.vb: CheckAssertionExtensions.Fail(Of T)(ICheckAssertion(Of T), String)
- uid: Benday.Common.Testing.CheckAssertionExtensions.IsNotNull*
  name: IsNotNull
  href: api/Benday.Common.Testing.CheckAssertionExtensions.html#Benday_Common_Testing_CheckAssertionExtensions_IsNotNull_
  commentId: Overload:Benday.Common.Testing.CheckAssertionExtensions.IsNotNull
  isSpec: "True"
  fullName: Benday.Common.Testing.CheckAssertionExtensions.IsNotNull
  nameWithType: CheckAssertionExtensions.IsNotNull
- uid: Benday.Common.Testing.CheckAssertionExtensions.IsNotNull``1(Benday.Common.Testing.ICheckAssertion{``0},System.String)
  name: IsNotNull<T>(ICheckAssertion<T>, string?)
  href: api/Benday.Common.Testing.CheckAssertionExtensions.html#Benday_Common_Testing_CheckAssertionExtensions_IsNotNull__1_Benday_Common_Testing_ICheckAssertion___0__System_String_
  commentId: M:Benday.Common.Testing.CheckAssertionExtensions.IsNotNull``1(Benday.Common.Testing.ICheckAssertion{``0},System.String)
  name.vb: IsNotNull(Of T)(ICheckAssertion(Of T), String)
  fullName: Benday.Common.Testing.CheckAssertionExtensions.IsNotNull<T>(Benday.Common.Testing.ICheckAssertion<T>, string?)
  fullName.vb: Benday.Common.Testing.CheckAssertionExtensions.IsNotNull(Of T)(Benday.Common.Testing.ICheckAssertion(Of T), String)
  nameWithType: CheckAssertionExtensions.IsNotNull<T>(ICheckAssertion<T>, string?)
  nameWithType.vb: CheckAssertionExtensions.IsNotNull(Of T)(ICheckAssertion(Of T), String)
- uid: Benday.Common.Testing.CheckAssertionExtensions.IsNotTheSameAs*
  name: IsNotTheSameAs
  href: api/Benday.Common.Testing.CheckAssertionExtensions.html#Benday_Common_Testing_CheckAssertionExtensions_IsNotTheSameAs_
  commentId: Overload:Benday.Common.Testing.CheckAssertionExtensions.IsNotTheSameAs
  isSpec: "True"
  fullName: Benday.Common.Testing.CheckAssertionExtensions.IsNotTheSameAs
  nameWithType: CheckAssertionExtensions.IsNotTheSameAs
- uid: Benday.Common.Testing.CheckAssertionExtensions.IsNotTheSameAs``1(Benday.Common.Testing.ICheckAssertion{``0},``0,System.String)
  name: IsNotTheSameAs<T>(ICheckAssertion<T>, T?, string?)
  href: api/Benday.Common.Testing.CheckAssertionExtensions.html#Benday_Common_Testing_CheckAssertionExtensions_IsNotTheSameAs__1_Benday_Common_Testing_ICheckAssertion___0____0_System_String_
  commentId: M:Benday.Common.Testing.CheckAssertionExtensions.IsNotTheSameAs``1(Benday.Common.Testing.ICheckAssertion{``0},``0,System.String)
  name.vb: IsNotTheSameAs(Of T)(ICheckAssertion(Of T), T, String)
  fullName: Benday.Common.Testing.CheckAssertionExtensions.IsNotTheSameAs<T>(Benday.Common.Testing.ICheckAssertion<T>, T?, string?)
  fullName.vb: Benday.Common.Testing.CheckAssertionExtensions.IsNotTheSameAs(Of T)(Benday.Common.Testing.ICheckAssertion(Of T), T, String)
  nameWithType: CheckAssertionExtensions.IsNotTheSameAs<T>(ICheckAssertion<T>, T?, string?)
  nameWithType.vb: CheckAssertionExtensions.IsNotTheSameAs(Of T)(ICheckAssertion(Of T), T, String)
- uid: Benday.Common.Testing.CheckAssertionExtensions.IsNull*
  name: IsNull
  href: api/Benday.Common.Testing.CheckAssertionExtensions.html#Benday_Common_Testing_CheckAssertionExtensions_IsNull_
  commentId: Overload:Benday.Common.Testing.CheckAssertionExtensions.IsNull
  isSpec: "True"
  fullName: Benday.Common.Testing.CheckAssertionExtensions.IsNull
  nameWithType: CheckAssertionExtensions.IsNull
- uid: Benday.Common.Testing.CheckAssertionExtensions.IsNull``1(Benday.Common.Testing.ICheckAssertion{``0},System.String)
  name: IsNull<T>(ICheckAssertion<T>, string?)
  href: api/Benday.Common.Testing.CheckAssertionExtensions.html#Benday_Common_Testing_CheckAssertionExtensions_IsNull__1_Benday_Common_Testing_ICheckAssertion___0__System_String_
  commentId: M:Benday.Common.Testing.CheckAssertionExtensions.IsNull``1(Benday.Common.Testing.ICheckAssertion{``0},System.String)
  name.vb: IsNull(Of T)(ICheckAssertion(Of T), String)
  fullName: Benday.Common.Testing.CheckAssertionExtensions.IsNull<T>(Benday.Common.Testing.ICheckAssertion<T>, string?)
  fullName.vb: Benday.Common.Testing.CheckAssertionExtensions.IsNull(Of T)(Benday.Common.Testing.ICheckAssertion(Of T), String)
  nameWithType: CheckAssertionExtensions.IsNull<T>(ICheckAssertion<T>, string?)
  nameWithType.vb: CheckAssertionExtensions.IsNull(Of T)(ICheckAssertion(Of T), String)
- uid: Benday.Common.Testing.CheckAssertionExtensions.IsTheSameAs*
  name: IsTheSameAs
  href: api/Benday.Common.Testing.CheckAssertionExtensions.html#Benday_Common_Testing_CheckAssertionExtensions_IsTheSameAs_
  commentId: Overload:Benday.Common.Testing.CheckAssertionExtensions.IsTheSameAs
  isSpec: "True"
  fullName: Benday.Common.Testing.CheckAssertionExtensions.IsTheSameAs
  nameWithType: CheckAssertionExtensions.IsTheSameAs
- uid: Benday.Common.Testing.CheckAssertionExtensions.IsTheSameAs``1(Benday.Common.Testing.ICheckAssertion{``0},``0,System.String)
  name: IsTheSameAs<T>(ICheckAssertion<T>, T?, string?)
  href: api/Benday.Common.Testing.CheckAssertionExtensions.html#Benday_Common_Testing_CheckAssertionExtensions_IsTheSameAs__1_Benday_Common_Testing_ICheckAssertion___0____0_System_String_
  commentId: M:Benday.Common.Testing.CheckAssertionExtensions.IsTheSameAs``1(Benday.Common.Testing.ICheckAssertion{``0},``0,System.String)
  name.vb: IsTheSameAs(Of T)(ICheckAssertion(Of T), T, String)
  fullName: Benday.Common.Testing.CheckAssertionExtensions.IsTheSameAs<T>(Benday.Common.Testing.ICheckAssertion<T>, T?, string?)
  fullName.vb: Benday.Common.Testing.CheckAssertionExtensions.IsTheSameAs(Of T)(Benday.Common.Testing.ICheckAssertion(Of T), T, String)
  nameWithType: CheckAssertionExtensions.IsTheSameAs<T>(ICheckAssertion<T>, T?, string?)
  nameWithType.vb: CheckAssertionExtensions.IsTheSameAs(Of T)(ICheckAssertion(Of T), T, String)
- uid: Benday.Common.Testing.CheckAssertionFailureException
  name: CheckAssertionFailureException
  href: api/Benday.Common.Testing.CheckAssertionFailureException.html
  commentId: T:Benday.Common.Testing.CheckAssertionFailureException
  fullName: Benday.Common.Testing.CheckAssertionFailureException
  nameWithType: CheckAssertionFailureException
- uid: Benday.Common.Testing.CheckAssertionFailureException.#ctor(System.String)
  name: CheckAssertionFailureException(string)
  href: api/Benday.Common.Testing.CheckAssertionFailureException.html#Benday_Common_Testing_CheckAssertionFailureException__ctor_System_String_
  commentId: M:Benday.Common.Testing.CheckAssertionFailureException.#ctor(System.String)
  name.vb: New(String)
  fullName: Benday.Common.Testing.CheckAssertionFailureException.CheckAssertionFailureException(string)
  fullName.vb: Benday.Common.Testing.CheckAssertionFailureException.New(String)
  nameWithType: CheckAssertionFailureException.CheckAssertionFailureException(string)
  nameWithType.vb: CheckAssertionFailureException.New(String)
- uid: Benday.Common.Testing.CheckAssertionFailureException.#ctor*
  name: CheckAssertionFailureException
  href: api/Benday.Common.Testing.CheckAssertionFailureException.html#Benday_Common_Testing_CheckAssertionFailureException__ctor_
  commentId: Overload:Benday.Common.Testing.CheckAssertionFailureException.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Benday.Common.Testing.CheckAssertionFailureException.CheckAssertionFailureException
  fullName.vb: Benday.Common.Testing.CheckAssertionFailureException.New
  nameWithType: CheckAssertionFailureException.CheckAssertionFailureException
  nameWithType.vb: CheckAssertionFailureException.New
- uid: Benday.Common.Testing.CheckAssertionForNullableType`1
  name: CheckAssertionForNullableType<T>
  href: api/Benday.Common.Testing.CheckAssertionForNullableType-1.html
  commentId: T:Benday.Common.Testing.CheckAssertionForNullableType`1
  name.vb: CheckAssertionForNullableType(Of T)
  fullName: Benday.Common.Testing.CheckAssertionForNullableType<T>
  fullName.vb: Benday.Common.Testing.CheckAssertionForNullableType(Of T)
  nameWithType: CheckAssertionForNullableType<T>
  nameWithType.vb: CheckAssertionForNullableType(Of T)
- uid: Benday.Common.Testing.CheckAssertionForNullableType`1.#ctor(`0)
  name: CheckAssertionForNullableType(T)
  href: api/Benday.Common.Testing.CheckAssertionForNullableType-1.html#Benday_Common_Testing_CheckAssertionForNullableType_1__ctor__0_
  commentId: M:Benday.Common.Testing.CheckAssertionForNullableType`1.#ctor(`0)
  name.vb: New(T)
  fullName: Benday.Common.Testing.CheckAssertionForNullableType<T>.CheckAssertionForNullableType(T)
  fullName.vb: Benday.Common.Testing.CheckAssertionForNullableType(Of T).New(T)
  nameWithType: CheckAssertionForNullableType<T>.CheckAssertionForNullableType(T)
  nameWithType.vb: CheckAssertionForNullableType(Of T).New(T)
- uid: Benday.Common.Testing.CheckAssertionForNullableType`1.#ctor*
  name: CheckAssertionForNullableType
  href: api/Benday.Common.Testing.CheckAssertionForNullableType-1.html#Benday_Common_Testing_CheckAssertionForNullableType_1__ctor_
  commentId: Overload:Benday.Common.Testing.CheckAssertionForNullableType`1.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Benday.Common.Testing.CheckAssertionForNullableType<T>.CheckAssertionForNullableType
  fullName.vb: Benday.Common.Testing.CheckAssertionForNullableType(Of T).New
  nameWithType: CheckAssertionForNullableType<T>.CheckAssertionForNullableType
  nameWithType.vb: CheckAssertionForNullableType(Of T).New
- uid: Benday.Common.Testing.CheckAssertion`1
  name: CheckAssertion<T>
  href: api/Benday.Common.Testing.CheckAssertion-1.html
  commentId: T:Benday.Common.Testing.CheckAssertion`1
  name.vb: CheckAssertion(Of T)
  fullName: Benday.Common.Testing.CheckAssertion<T>
  fullName.vb: Benday.Common.Testing.CheckAssertion(Of T)
  nameWithType: CheckAssertion<T>
  nameWithType.vb: CheckAssertion(Of T)
- uid: Benday.Common.Testing.CheckAssertion`1.#ctor(`0)
  name: CheckAssertion(T?)
  href: api/Benday.Common.Testing.CheckAssertion-1.html#Benday_Common_Testing_CheckAssertion_1__ctor__0_
  commentId: M:Benday.Common.Testing.CheckAssertion`1.#ctor(`0)
  name.vb: New(T)
  fullName: Benday.Common.Testing.CheckAssertion<T>.CheckAssertion(T?)
  fullName.vb: Benday.Common.Testing.CheckAssertion(Of T).New(T)
  nameWithType: CheckAssertion<T>.CheckAssertion(T?)
  nameWithType.vb: CheckAssertion(Of T).New(T)
- uid: Benday.Common.Testing.CheckAssertion`1.#ctor*
  name: CheckAssertion
  href: api/Benday.Common.Testing.CheckAssertion-1.html#Benday_Common_Testing_CheckAssertion_1__ctor_
  commentId: Overload:Benday.Common.Testing.CheckAssertion`1.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Benday.Common.Testing.CheckAssertion<T>.CheckAssertion
  fullName.vb: Benday.Common.Testing.CheckAssertion(Of T).New
  nameWithType: CheckAssertion<T>.CheckAssertion
  nameWithType.vb: CheckAssertion(Of T).New
- uid: Benday.Common.Testing.CheckAssertion`1.FailureMessage
  name: FailureMessage
  href: api/Benday.Common.Testing.CheckAssertion-1.html#Benday_Common_Testing_CheckAssertion_1_FailureMessage
  commentId: P:Benday.Common.Testing.CheckAssertion`1.FailureMessage
  fullName: Benday.Common.Testing.CheckAssertion<T>.FailureMessage
  fullName.vb: Benday.Common.Testing.CheckAssertion(Of T).FailureMessage
  nameWithType: CheckAssertion<T>.FailureMessage
  nameWithType.vb: CheckAssertion(Of T).FailureMessage
- uid: Benday.Common.Testing.CheckAssertion`1.FailureMessage*
  name: FailureMessage
  href: api/Benday.Common.Testing.CheckAssertion-1.html#Benday_Common_Testing_CheckAssertion_1_FailureMessage_
  commentId: Overload:Benday.Common.Testing.CheckAssertion`1.FailureMessage
  isSpec: "True"
  fullName: Benday.Common.Testing.CheckAssertion<T>.FailureMessage
  fullName.vb: Benday.Common.Testing.CheckAssertion(Of T).FailureMessage
  nameWithType: CheckAssertion<T>.FailureMessage
  nameWithType.vb: CheckAssertion(Of T).FailureMessage
- uid: Benday.Common.Testing.CheckAssertion`1.Input
  name: Input
  href: api/Benday.Common.Testing.CheckAssertion-1.html#Benday_Common_Testing_CheckAssertion_1_Input
  commentId: P:Benday.Common.Testing.CheckAssertion`1.Input
  fullName: Benday.Common.Testing.CheckAssertion<T>.Input
  fullName.vb: Benday.Common.Testing.CheckAssertion(Of T).Input
  nameWithType: CheckAssertion<T>.Input
  nameWithType.vb: CheckAssertion(Of T).Input
- uid: Benday.Common.Testing.CheckAssertion`1.Input*
  name: Input
  href: api/Benday.Common.Testing.CheckAssertion-1.html#Benday_Common_Testing_CheckAssertion_1_Input_
  commentId: Overload:Benday.Common.Testing.CheckAssertion`1.Input
  isSpec: "True"
  fullName: Benday.Common.Testing.CheckAssertion<T>.Input
  fullName.vb: Benday.Common.Testing.CheckAssertion(Of T).Input
  nameWithType: CheckAssertion<T>.Input
  nameWithType.vb: CheckAssertion(Of T).Input
- uid: Benday.Common.Testing.CheckAssertion`1.WithMessage(System.String)
  name: WithMessage(string)
  href: api/Benday.Common.Testing.CheckAssertion-1.html#Benday_Common_Testing_CheckAssertion_1_WithMessage_System_String_
  commentId: M:Benday.Common.Testing.CheckAssertion`1.WithMessage(System.String)
  name.vb: WithMessage(String)
  fullName: Benday.Common.Testing.CheckAssertion<T>.WithMessage(string)
  fullName.vb: Benday.Common.Testing.CheckAssertion(Of T).WithMessage(String)
  nameWithType: CheckAssertion<T>.WithMessage(string)
  nameWithType.vb: CheckAssertion(Of T).WithMessage(String)
- uid: Benday.Common.Testing.CheckAssertion`1.WithMessage*
  name: WithMessage
  href: api/Benday.Common.Testing.CheckAssertion-1.html#Benday_Common_Testing_CheckAssertion_1_WithMessage_
  commentId: Overload:Benday.Common.Testing.CheckAssertion`1.WithMessage
  isSpec: "True"
  fullName: Benday.Common.Testing.CheckAssertion<T>.WithMessage
  fullName.vb: Benday.Common.Testing.CheckAssertion(Of T).WithMessage
  nameWithType: CheckAssertion<T>.WithMessage
  nameWithType.vb: CheckAssertion(Of T).WithMessage
- uid: Benday.Common.Testing.CheckCollectionAssertion`1
  name: CheckCollectionAssertion<T>
  href: api/Benday.Common.Testing.CheckCollectionAssertion-1.html
  commentId: T:Benday.Common.Testing.CheckCollectionAssertion`1
  name.vb: CheckCollectionAssertion(Of T)
  fullName: Benday.Common.Testing.CheckCollectionAssertion<T>
  fullName.vb: Benday.Common.Testing.CheckCollectionAssertion(Of T)
  nameWithType: CheckCollectionAssertion<T>
  nameWithType.vb: CheckCollectionAssertion(Of T)
- uid: Benday.Common.Testing.CheckCollectionAssertion`1.#ctor(`0)
  name: CheckCollectionAssertion(T)
  href: api/Benday.Common.Testing.CheckCollectionAssertion-1.html#Benday_Common_Testing_CheckCollectionAssertion_1__ctor__0_
  commentId: M:Benday.Common.Testing.CheckCollectionAssertion`1.#ctor(`0)
  name.vb: New(T)
  fullName: Benday.Common.Testing.CheckCollectionAssertion<T>.CheckCollectionAssertion(T)
  fullName.vb: Benday.Common.Testing.CheckCollectionAssertion(Of T).New(T)
  nameWithType: CheckCollectionAssertion<T>.CheckCollectionAssertion(T)
  nameWithType.vb: CheckCollectionAssertion(Of T).New(T)
- uid: Benday.Common.Testing.CheckCollectionAssertion`1.#ctor*
  name: CheckCollectionAssertion
  href: api/Benday.Common.Testing.CheckCollectionAssertion-1.html#Benday_Common_Testing_CheckCollectionAssertion_1__ctor_
  commentId: Overload:Benday.Common.Testing.CheckCollectionAssertion`1.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Benday.Common.Testing.CheckCollectionAssertion<T>.CheckCollectionAssertion
  fullName.vb: Benday.Common.Testing.CheckCollectionAssertion(Of T).New
  nameWithType: CheckCollectionAssertion<T>.CheckCollectionAssertion
  nameWithType.vb: CheckCollectionAssertion(Of T).New
- uid: Benday.Common.Testing.CheckExtensions
  name: CheckExtensions
  href: api/Benday.Common.Testing.CheckExtensions.html
  commentId: T:Benday.Common.Testing.CheckExtensions
  fullName: Benday.Common.Testing.CheckExtensions
  nameWithType: CheckExtensions
- uid: Benday.Common.Testing.CheckExtensions.CheckThat(System.String)
  name: CheckThat(string)
  href: api/Benday.Common.Testing.CheckExtensions.html#Benday_Common_Testing_CheckExtensions_CheckThat_System_String_
  commentId: M:Benday.Common.Testing.CheckExtensions.CheckThat(System.String)
  name.vb: CheckThat(String)
  fullName: Benday.Common.Testing.CheckExtensions.CheckThat(string)
  fullName.vb: Benday.Common.Testing.CheckExtensions.CheckThat(String)
  nameWithType: CheckExtensions.CheckThat(string)
  nameWithType.vb: CheckExtensions.CheckThat(String)
- uid: Benday.Common.Testing.CheckExtensions.CheckThat*
  name: CheckThat
  href: api/Benday.Common.Testing.CheckExtensions.html#Benday_Common_Testing_CheckExtensions_CheckThat_
  commentId: Overload:Benday.Common.Testing.CheckExtensions.CheckThat
  isSpec: "True"
  fullName: Benday.Common.Testing.CheckExtensions.CheckThat
  nameWithType: CheckExtensions.CheckThat
- uid: Benday.Common.Testing.CheckExtensions.CheckThatCollection*
  name: CheckThatCollection
  href: api/Benday.Common.Testing.CheckExtensions.html#Benday_Common_Testing_CheckExtensions_CheckThatCollection_
  commentId: Overload:Benday.Common.Testing.CheckExtensions.CheckThatCollection
  isSpec: "True"
  fullName: Benday.Common.Testing.CheckExtensions.CheckThatCollection
  nameWithType: CheckExtensions.CheckThatCollection
- uid: Benday.Common.Testing.CheckExtensions.CheckThatCollection``1(``0)
  name: CheckThatCollection<T>(T)
  href: api/Benday.Common.Testing.CheckExtensions.html#Benday_Common_Testing_CheckExtensions_CheckThatCollection__1___0_
  commentId: M:Benday.Common.Testing.CheckExtensions.CheckThatCollection``1(``0)
  name.vb: CheckThatCollection(Of T)(T)
  fullName: Benday.Common.Testing.CheckExtensions.CheckThatCollection<T>(T)
  fullName.vb: Benday.Common.Testing.CheckExtensions.CheckThatCollection(Of T)(T)
  nameWithType: CheckExtensions.CheckThatCollection<T>(T)
  nameWithType.vb: CheckExtensions.CheckThatCollection(Of T)(T)
- uid: Benday.Common.Testing.CheckExtensions.CheckThatNullable(System.String)
  name: CheckThatNullable(string?)
  href: api/Benday.Common.Testing.CheckExtensions.html#Benday_Common_Testing_CheckExtensions_CheckThatNullable_System_String_
  commentId: M:Benday.Common.Testing.CheckExtensions.CheckThatNullable(System.String)
  name.vb: CheckThatNullable(String)
  fullName: Benday.Common.Testing.CheckExtensions.CheckThatNullable(string?)
  fullName.vb: Benday.Common.Testing.CheckExtensions.CheckThatNullable(String)
  nameWithType: CheckExtensions.CheckThatNullable(string?)
  nameWithType.vb: CheckExtensions.CheckThatNullable(String)
- uid: Benday.Common.Testing.CheckExtensions.CheckThatNullable(System.String[])
  name: CheckThatNullable(string?[])
  href: api/Benday.Common.Testing.CheckExtensions.html#Benday_Common_Testing_CheckExtensions_CheckThatNullable_System_String___
  commentId: M:Benday.Common.Testing.CheckExtensions.CheckThatNullable(System.String[])
  name.vb: CheckThatNullable(String())
  fullName: Benday.Common.Testing.CheckExtensions.CheckThatNullable(string?[])
  fullName.vb: Benday.Common.Testing.CheckExtensions.CheckThatNullable(String())
  nameWithType: CheckExtensions.CheckThatNullable(string?[])
  nameWithType.vb: CheckExtensions.CheckThatNullable(String())
- uid: Benday.Common.Testing.CheckExtensions.CheckThatNullable*
  name: CheckThatNullable
  href: api/Benday.Common.Testing.CheckExtensions.html#Benday_Common_Testing_CheckExtensions_CheckThatNullable_
  commentId: Overload:Benday.Common.Testing.CheckExtensions.CheckThatNullable
  isSpec: "True"
  fullName: Benday.Common.Testing.CheckExtensions.CheckThatNullable
  nameWithType: CheckExtensions.CheckThatNullable
- uid: Benday.Common.Testing.CheckExtensions.CheckThat``1(``0[])
  name: CheckThat<T>(T[])
  href: api/Benday.Common.Testing.CheckExtensions.html#Benday_Common_Testing_CheckExtensions_CheckThat__1___0___
  commentId: M:Benday.Common.Testing.CheckExtensions.CheckThat``1(``0[])
  name.vb: CheckThat(Of T)(T())
  fullName: Benday.Common.Testing.CheckExtensions.CheckThat<T>(T[])
  fullName.vb: Benday.Common.Testing.CheckExtensions.CheckThat(Of T)(T())
  nameWithType: CheckExtensions.CheckThat<T>(T[])
  nameWithType.vb: CheckExtensions.CheckThat(Of T)(T())
- uid: Benday.Common.Testing.CollectionAssert
  name: CollectionAssert
  href: api/Benday.Common.Testing.CollectionAssert.html
  commentId: T:Benday.Common.Testing.CollectionAssert
  fullName: Benday.Common.Testing.CollectionAssert
  nameWithType: CollectionAssert
- uid: Benday.Common.Testing.CollectionAssert.AllMatch*
  name: AllMatch
  href: api/Benday.Common.Testing.CollectionAssert.html#Benday_Common_Testing_CollectionAssert_AllMatch_
  commentId: Overload:Benday.Common.Testing.CollectionAssert.AllMatch
  isSpec: "True"
  fullName: Benday.Common.Testing.CollectionAssert.AllMatch
  nameWithType: CollectionAssert.AllMatch
- uid: Benday.Common.Testing.CollectionAssert.AllMatch``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean},System.String)
  name: AllMatch<T>(IEnumerable<T>, Func<T, bool>, string)
  href: api/Benday.Common.Testing.CollectionAssert.html#Benday_Common_Testing_CollectionAssert_AllMatch__1_System_Collections_Generic_IEnumerable___0__System_Func___0_System_Boolean__System_String_
  commentId: M:Benday.Common.Testing.CollectionAssert.AllMatch``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean},System.String)
  name.vb: AllMatch(Of T)(IEnumerable(Of T), Func(Of T, Boolean), String)
  fullName: Benday.Common.Testing.CollectionAssert.AllMatch<T>(System.Collections.Generic.IEnumerable<T>, System.Func<T, bool>, string)
  fullName.vb: Benday.Common.Testing.CollectionAssert.AllMatch(Of T)(System.Collections.Generic.IEnumerable(Of T), System.Func(Of T, Boolean), String)
  nameWithType: CollectionAssert.AllMatch<T>(IEnumerable<T>, Func<T, bool>, string)
  nameWithType.vb: CollectionAssert.AllMatch(Of T)(IEnumerable(Of T), Func(Of T, Boolean), String)
- uid: Benday.Common.Testing.CollectionAssert.AnyMatch*
  name: AnyMatch
  href: api/Benday.Common.Testing.CollectionAssert.html#Benday_Common_Testing_CollectionAssert_AnyMatch_
  commentId: Overload:Benday.Common.Testing.CollectionAssert.AnyMatch
  isSpec: "True"
  fullName: Benday.Common.Testing.CollectionAssert.AnyMatch
  nameWithType: CollectionAssert.AnyMatch
- uid: Benday.Common.Testing.CollectionAssert.AnyMatch``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean},System.String)
  name: AnyMatch<T>(IEnumerable<T>, Func<T, bool>, string)
  href: api/Benday.Common.Testing.CollectionAssert.html#Benday_Common_Testing_CollectionAssert_AnyMatch__1_System_Collections_Generic_IEnumerable___0__System_Func___0_System_Boolean__System_String_
  commentId: M:Benday.Common.Testing.CollectionAssert.AnyMatch``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean},System.String)
  name.vb: AnyMatch(Of T)(IEnumerable(Of T), Func(Of T, Boolean), String)
  fullName: Benday.Common.Testing.CollectionAssert.AnyMatch<T>(System.Collections.Generic.IEnumerable<T>, System.Func<T, bool>, string)
  fullName.vb: Benday.Common.Testing.CollectionAssert.AnyMatch(Of T)(System.Collections.Generic.IEnumerable(Of T), System.Func(Of T, Boolean), String)
  nameWithType: CollectionAssert.AnyMatch<T>(IEnumerable<T>, Func<T, bool>, string)
  nameWithType.vb: CollectionAssert.AnyMatch(Of T)(IEnumerable(Of T), Func(Of T, Boolean), String)
- uid: Benday.Common.Testing.CollectionAssert.AreEqual*
  name: AreEqual
  href: api/Benday.Common.Testing.CollectionAssert.html#Benday_Common_Testing_CollectionAssert_AreEqual_
  commentId: Overload:Benday.Common.Testing.CollectionAssert.AreEqual
  isSpec: "True"
  fullName: Benday.Common.Testing.CollectionAssert.AreEqual
  nameWithType: CollectionAssert.AreEqual
- uid: Benday.Common.Testing.CollectionAssert.AreEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.String)
  name: AreEqual<T>(IEnumerable<T>, IEnumerable<T>, string)
  href: api/Benday.Common.Testing.CollectionAssert.html#Benday_Common_Testing_CollectionAssert_AreEqual__1_System_Collections_Generic_IEnumerable___0__System_Collections_Generic_IEnumerable___0__System_String_
  commentId: M:Benday.Common.Testing.CollectionAssert.AreEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.String)
  name.vb: AreEqual(Of T)(IEnumerable(Of T), IEnumerable(Of T), String)
  fullName: Benday.Common.Testing.CollectionAssert.AreEqual<T>(System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IEnumerable<T>, string)
  fullName.vb: Benday.Common.Testing.CollectionAssert.AreEqual(Of T)(System.Collections.Generic.IEnumerable(Of T), System.Collections.Generic.IEnumerable(Of T), String)
  nameWithType: CollectionAssert.AreEqual<T>(IEnumerable<T>, IEnumerable<T>, string)
  nameWithType.vb: CollectionAssert.AreEqual(Of T)(IEnumerable(Of T), IEnumerable(Of T), String)
- uid: Benday.Common.Testing.CollectionAssert.Contains*
  name: Contains
  href: api/Benday.Common.Testing.CollectionAssert.html#Benday_Common_Testing_CollectionAssert_Contains_
  commentId: Overload:Benday.Common.Testing.CollectionAssert.Contains
  isSpec: "True"
  fullName: Benday.Common.Testing.CollectionAssert.Contains
  nameWithType: CollectionAssert.Contains
- uid: Benday.Common.Testing.CollectionAssert.Contains``1(System.Collections.Generic.IEnumerable{``0},``0,System.String)
  name: Contains<T>(IEnumerable<T>, T, string)
  href: api/Benday.Common.Testing.CollectionAssert.html#Benday_Common_Testing_CollectionAssert_Contains__1_System_Collections_Generic_IEnumerable___0____0_System_String_
  commentId: M:Benday.Common.Testing.CollectionAssert.Contains``1(System.Collections.Generic.IEnumerable{``0},``0,System.String)
  name.vb: Contains(Of T)(IEnumerable(Of T), T, String)
  fullName: Benday.Common.Testing.CollectionAssert.Contains<T>(System.Collections.Generic.IEnumerable<T>, T, string)
  fullName.vb: Benday.Common.Testing.CollectionAssert.Contains(Of T)(System.Collections.Generic.IEnumerable(Of T), T, String)
  nameWithType: CollectionAssert.Contains<T>(IEnumerable<T>, T, string)
  nameWithType.vb: CollectionAssert.Contains(Of T)(IEnumerable(Of T), T, String)
- uid: Benday.Common.Testing.CollectionAssert.DoesNotContain*
  name: DoesNotContain
  href: api/Benday.Common.Testing.CollectionAssert.html#Benday_Common_Testing_CollectionAssert_DoesNotContain_
  commentId: Overload:Benday.Common.Testing.CollectionAssert.DoesNotContain
  isSpec: "True"
  fullName: Benday.Common.Testing.CollectionAssert.DoesNotContain
  nameWithType: CollectionAssert.DoesNotContain
- uid: Benday.Common.Testing.CollectionAssert.DoesNotContain``1(System.Collections.Generic.IEnumerable{``0},``0,System.String)
  name: DoesNotContain<T>(IEnumerable<T>, T, string)
  href: api/Benday.Common.Testing.CollectionAssert.html#Benday_Common_Testing_CollectionAssert_DoesNotContain__1_System_Collections_Generic_IEnumerable___0____0_System_String_
  commentId: M:Benday.Common.Testing.CollectionAssert.DoesNotContain``1(System.Collections.Generic.IEnumerable{``0},``0,System.String)
  name.vb: DoesNotContain(Of T)(IEnumerable(Of T), T, String)
  fullName: Benday.Common.Testing.CollectionAssert.DoesNotContain<T>(System.Collections.Generic.IEnumerable<T>, T, string)
  fullName.vb: Benday.Common.Testing.CollectionAssert.DoesNotContain(Of T)(System.Collections.Generic.IEnumerable(Of T), T, String)
  nameWithType: CollectionAssert.DoesNotContain<T>(IEnumerable<T>, T, string)
  nameWithType.vb: CollectionAssert.DoesNotContain(Of T)(IEnumerable(Of T), T, String)
- uid: Benday.Common.Testing.CollectionAssert.HasCount*
  name: HasCount
  href: api/Benday.Common.Testing.CollectionAssert.html#Benday_Common_Testing_CollectionAssert_HasCount_
  commentId: Overload:Benday.Common.Testing.CollectionAssert.HasCount
  isSpec: "True"
  fullName: Benday.Common.Testing.CollectionAssert.HasCount
  nameWithType: CollectionAssert.HasCount
- uid: Benday.Common.Testing.CollectionAssert.HasCount``1(System.Collections.Generic.IEnumerable{``0},System.Int32,System.String)
  name: HasCount<T>(IEnumerable<T>, int, string)
  href: api/Benday.Common.Testing.CollectionAssert.html#Benday_Common_Testing_CollectionAssert_HasCount__1_System_Collections_Generic_IEnumerable___0__System_Int32_System_String_
  commentId: M:Benday.Common.Testing.CollectionAssert.HasCount``1(System.Collections.Generic.IEnumerable{``0},System.Int32,System.String)
  name.vb: HasCount(Of T)(IEnumerable(Of T), Integer, String)
  fullName: Benday.Common.Testing.CollectionAssert.HasCount<T>(System.Collections.Generic.IEnumerable<T>, int, string)
  fullName.vb: Benday.Common.Testing.CollectionAssert.HasCount(Of T)(System.Collections.Generic.IEnumerable(Of T), Integer, String)
  nameWithType: CollectionAssert.HasCount<T>(IEnumerable<T>, int, string)
  nameWithType.vb: CollectionAssert.HasCount(Of T)(IEnumerable(Of T), Integer, String)
- uid: Benday.Common.Testing.CollectionAssert.HasUniqueElements*
  name: HasUniqueElements
  href: api/Benday.Common.Testing.CollectionAssert.html#Benday_Common_Testing_CollectionAssert_HasUniqueElements_
  commentId: Overload:Benday.Common.Testing.CollectionAssert.HasUniqueElements
  isSpec: "True"
  fullName: Benday.Common.Testing.CollectionAssert.HasUniqueElements
  nameWithType: CollectionAssert.HasUniqueElements
- uid: Benday.Common.Testing.CollectionAssert.HasUniqueElements``1(System.Collections.Generic.IEnumerable{``0},System.String)
  name: HasUniqueElements<T>(IEnumerable<T>, string)
  href: api/Benday.Common.Testing.CollectionAssert.html#Benday_Common_Testing_CollectionAssert_HasUniqueElements__1_System_Collections_Generic_IEnumerable___0__System_String_
  commentId: M:Benday.Common.Testing.CollectionAssert.HasUniqueElements``1(System.Collections.Generic.IEnumerable{``0},System.String)
  name.vb: HasUniqueElements(Of T)(IEnumerable(Of T), String)
  fullName: Benday.Common.Testing.CollectionAssert.HasUniqueElements<T>(System.Collections.Generic.IEnumerable<T>, string)
  fullName.vb: Benday.Common.Testing.CollectionAssert.HasUniqueElements(Of T)(System.Collections.Generic.IEnumerable(Of T), String)
  nameWithType: CollectionAssert.HasUniqueElements<T>(IEnumerable<T>, string)
  nameWithType.vb: CollectionAssert.HasUniqueElements(Of T)(IEnumerable(Of T), String)
- uid: Benday.Common.Testing.CollectionAssert.IsEmpty*
  name: IsEmpty
  href: api/Benday.Common.Testing.CollectionAssert.html#Benday_Common_Testing_CollectionAssert_IsEmpty_
  commentId: Overload:Benday.Common.Testing.CollectionAssert.IsEmpty
  isSpec: "True"
  fullName: Benday.Common.Testing.CollectionAssert.IsEmpty
  nameWithType: CollectionAssert.IsEmpty
- uid: Benday.Common.Testing.CollectionAssert.IsEmpty``1(System.Collections.Generic.IEnumerable{``0},System.String)
  name: IsEmpty<T>(IEnumerable<T>, string)
  href: api/Benday.Common.Testing.CollectionAssert.html#Benday_Common_Testing_CollectionAssert_IsEmpty__1_System_Collections_Generic_IEnumerable___0__System_String_
  commentId: M:Benday.Common.Testing.CollectionAssert.IsEmpty``1(System.Collections.Generic.IEnumerable{``0},System.String)
  name.vb: IsEmpty(Of T)(IEnumerable(Of T), String)
  fullName: Benday.Common.Testing.CollectionAssert.IsEmpty<T>(System.Collections.Generic.IEnumerable<T>, string)
  fullName.vb: Benday.Common.Testing.CollectionAssert.IsEmpty(Of T)(System.Collections.Generic.IEnumerable(Of T), String)
  nameWithType: CollectionAssert.IsEmpty<T>(IEnumerable<T>, string)
  nameWithType.vb: CollectionAssert.IsEmpty(Of T)(IEnumerable(Of T), String)
- uid: Benday.Common.Testing.CollectionAssert.IsNotEmpty*
  name: IsNotEmpty
  href: api/Benday.Common.Testing.CollectionAssert.html#Benday_Common_Testing_CollectionAssert_IsNotEmpty_
  commentId: Overload:Benday.Common.Testing.CollectionAssert.IsNotEmpty
  isSpec: "True"
  fullName: Benday.Common.Testing.CollectionAssert.IsNotEmpty
  nameWithType: CollectionAssert.IsNotEmpty
- uid: Benday.Common.Testing.CollectionAssert.IsNotEmpty``1(System.Collections.Generic.IEnumerable{``0},System.String)
  name: IsNotEmpty<T>(IEnumerable<T>, string)
  href: api/Benday.Common.Testing.CollectionAssert.html#Benday_Common_Testing_CollectionAssert_IsNotEmpty__1_System_Collections_Generic_IEnumerable___0__System_String_
  commentId: M:Benday.Common.Testing.CollectionAssert.IsNotEmpty``1(System.Collections.Generic.IEnumerable{``0},System.String)
  name.vb: IsNotEmpty(Of T)(IEnumerable(Of T), String)
  fullName: Benday.Common.Testing.CollectionAssert.IsNotEmpty<T>(System.Collections.Generic.IEnumerable<T>, string)
  fullName.vb: Benday.Common.Testing.CollectionAssert.IsNotEmpty(Of T)(System.Collections.Generic.IEnumerable(Of T), String)
  nameWithType: CollectionAssert.IsNotEmpty<T>(IEnumerable<T>, string)
  nameWithType.vb: CollectionAssert.IsNotEmpty(Of T)(IEnumerable(Of T), String)
- uid: Benday.Common.Testing.CollectionAssert.IsSubsetOf*
  name: IsSubsetOf
  href: api/Benday.Common.Testing.CollectionAssert.html#Benday_Common_Testing_CollectionAssert_IsSubsetOf_
  commentId: Overload:Benday.Common.Testing.CollectionAssert.IsSubsetOf
  isSpec: "True"
  fullName: Benday.Common.Testing.CollectionAssert.IsSubsetOf
  nameWithType: CollectionAssert.IsSubsetOf
- uid: Benday.Common.Testing.CollectionAssert.IsSubsetOf``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.String)
  name: IsSubsetOf<T>(IEnumerable<T>, IEnumerable<T>, string)
  href: api/Benday.Common.Testing.CollectionAssert.html#Benday_Common_Testing_CollectionAssert_IsSubsetOf__1_System_Collections_Generic_IEnumerable___0__System_Collections_Generic_IEnumerable___0__System_String_
  commentId: M:Benday.Common.Testing.CollectionAssert.IsSubsetOf``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.String)
  name.vb: IsSubsetOf(Of T)(IEnumerable(Of T), IEnumerable(Of T), String)
  fullName: Benday.Common.Testing.CollectionAssert.IsSubsetOf<T>(System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IEnumerable<T>, string)
  fullName.vb: Benday.Common.Testing.CollectionAssert.IsSubsetOf(Of T)(System.Collections.Generic.IEnumerable(Of T), System.Collections.Generic.IEnumerable(Of T), String)
  nameWithType: CollectionAssert.IsSubsetOf<T>(IEnumerable<T>, IEnumerable<T>, string)
  nameWithType.vb: CollectionAssert.IsSubsetOf(Of T)(IEnumerable(Of T), IEnumerable(Of T), String)
- uid: Benday.Common.Testing.CollectionAssert.IsSupersetOf*
  name: IsSupersetOf
  href: api/Benday.Common.Testing.CollectionAssert.html#Benday_Common_Testing_CollectionAssert_IsSupersetOf_
  commentId: Overload:Benday.Common.Testing.CollectionAssert.IsSupersetOf
  isSpec: "True"
  fullName: Benday.Common.Testing.CollectionAssert.IsSupersetOf
  nameWithType: CollectionAssert.IsSupersetOf
- uid: Benday.Common.Testing.CollectionAssert.IsSupersetOf``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.String)
  name: IsSupersetOf<T>(IEnumerable<T>, IEnumerable<T>, string)
  href: api/Benday.Common.Testing.CollectionAssert.html#Benday_Common_Testing_CollectionAssert_IsSupersetOf__1_System_Collections_Generic_IEnumerable___0__System_Collections_Generic_IEnumerable___0__System_String_
  commentId: M:Benday.Common.Testing.CollectionAssert.IsSupersetOf``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.String)
  name.vb: IsSupersetOf(Of T)(IEnumerable(Of T), IEnumerable(Of T), String)
  fullName: Benday.Common.Testing.CollectionAssert.IsSupersetOf<T>(System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IEnumerable<T>, string)
  fullName.vb: Benday.Common.Testing.CollectionAssert.IsSupersetOf(Of T)(System.Collections.Generic.IEnumerable(Of T), System.Collections.Generic.IEnumerable(Of T), String)
  nameWithType: CollectionAssert.IsSupersetOf<T>(IEnumerable<T>, IEnumerable<T>, string)
  nameWithType.vb: CollectionAssert.IsSupersetOf(Of T)(IEnumerable(Of T), IEnumerable(Of T), String)
- uid: Benday.Common.Testing.CollectionAssertExtensions
  name: CollectionAssertExtensions
  href: api/Benday.Common.Testing.CollectionAssertExtensions.html
  commentId: T:Benday.Common.Testing.CollectionAssertExtensions
  fullName: Benday.Common.Testing.CollectionAssertExtensions
  nameWithType: CollectionAssertExtensions
- uid: Benday.Common.Testing.CollectionAssertExtensions.ShouldAllMatch*
  name: ShouldAllMatch
  href: api/Benday.Common.Testing.CollectionAssertExtensions.html#Benday_Common_Testing_CollectionAssertExtensions_ShouldAllMatch_
  commentId: Overload:Benday.Common.Testing.CollectionAssertExtensions.ShouldAllMatch
  isSpec: "True"
  fullName: Benday.Common.Testing.CollectionAssertExtensions.ShouldAllMatch
  nameWithType: CollectionAssertExtensions.ShouldAllMatch
- uid: Benday.Common.Testing.CollectionAssertExtensions.ShouldAllMatch``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean},System.String)
  name: ShouldAllMatch<T>(IEnumerable<T>, Func<T, bool>, string)
  href: api/Benday.Common.Testing.CollectionAssertExtensions.html#Benday_Common_Testing_CollectionAssertExtensions_ShouldAllMatch__1_System_Collections_Generic_IEnumerable___0__System_Func___0_System_Boolean__System_String_
  commentId: M:Benday.Common.Testing.CollectionAssertExtensions.ShouldAllMatch``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean},System.String)
  name.vb: ShouldAllMatch(Of T)(IEnumerable(Of T), Func(Of T, Boolean), String)
  fullName: Benday.Common.Testing.CollectionAssertExtensions.ShouldAllMatch<T>(System.Collections.Generic.IEnumerable<T>, System.Func<T, bool>, string)
  fullName.vb: Benday.Common.Testing.CollectionAssertExtensions.ShouldAllMatch(Of T)(System.Collections.Generic.IEnumerable(Of T), System.Func(Of T, Boolean), String)
  nameWithType: CollectionAssertExtensions.ShouldAllMatch<T>(IEnumerable<T>, Func<T, bool>, string)
  nameWithType.vb: CollectionAssertExtensions.ShouldAllMatch(Of T)(IEnumerable(Of T), Func(Of T, Boolean), String)
- uid: Benday.Common.Testing.CollectionAssertExtensions.ShouldAnyMatch*
  name: ShouldAnyMatch
  href: api/Benday.Common.Testing.CollectionAssertExtensions.html#Benday_Common_Testing_CollectionAssertExtensions_ShouldAnyMatch_
  commentId: Overload:Benday.Common.Testing.CollectionAssertExtensions.ShouldAnyMatch
  isSpec: "True"
  fullName: Benday.Common.Testing.CollectionAssertExtensions.ShouldAnyMatch
  nameWithType: CollectionAssertExtensions.ShouldAnyMatch
- uid: Benday.Common.Testing.CollectionAssertExtensions.ShouldAnyMatch``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean},System.String)
  name: ShouldAnyMatch<T>(IEnumerable<T>, Func<T, bool>, string)
  href: api/Benday.Common.Testing.CollectionAssertExtensions.html#Benday_Common_Testing_CollectionAssertExtensions_ShouldAnyMatch__1_System_Collections_Generic_IEnumerable___0__System_Func___0_System_Boolean__System_String_
  commentId: M:Benday.Common.Testing.CollectionAssertExtensions.ShouldAnyMatch``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean},System.String)
  name.vb: ShouldAnyMatch(Of T)(IEnumerable(Of T), Func(Of T, Boolean), String)
  fullName: Benday.Common.Testing.CollectionAssertExtensions.ShouldAnyMatch<T>(System.Collections.Generic.IEnumerable<T>, System.Func<T, bool>, string)
  fullName.vb: Benday.Common.Testing.CollectionAssertExtensions.ShouldAnyMatch(Of T)(System.Collections.Generic.IEnumerable(Of T), System.Func(Of T, Boolean), String)
  nameWithType: CollectionAssertExtensions.ShouldAnyMatch<T>(IEnumerable<T>, Func<T, bool>, string)
  nameWithType.vb: CollectionAssertExtensions.ShouldAnyMatch(Of T)(IEnumerable(Of T), Func(Of T, Boolean), String)
- uid: Benday.Common.Testing.CollectionAssertExtensions.ShouldBeEmpty*
  name: ShouldBeEmpty
  href: api/Benday.Common.Testing.CollectionAssertExtensions.html#Benday_Common_Testing_CollectionAssertExtensions_ShouldBeEmpty_
  commentId: Overload:Benday.Common.Testing.CollectionAssertExtensions.ShouldBeEmpty
  isSpec: "True"
  fullName: Benday.Common.Testing.CollectionAssertExtensions.ShouldBeEmpty
  nameWithType: CollectionAssertExtensions.ShouldBeEmpty
- uid: Benday.Common.Testing.CollectionAssertExtensions.ShouldBeEmpty``1(System.Collections.Generic.IEnumerable{``0},System.String)
  name: ShouldBeEmpty<T>(IEnumerable<T>, string)
  href: api/Benday.Common.Testing.CollectionAssertExtensions.html#Benday_Common_Testing_CollectionAssertExtensions_ShouldBeEmpty__1_System_Collections_Generic_IEnumerable___0__System_String_
  commentId: M:Benday.Common.Testing.CollectionAssertExtensions.ShouldBeEmpty``1(System.Collections.Generic.IEnumerable{``0},System.String)
  name.vb: ShouldBeEmpty(Of T)(IEnumerable(Of T), String)
  fullName: Benday.Common.Testing.CollectionAssertExtensions.ShouldBeEmpty<T>(System.Collections.Generic.IEnumerable<T>, string)
  fullName.vb: Benday.Common.Testing.CollectionAssertExtensions.ShouldBeEmpty(Of T)(System.Collections.Generic.IEnumerable(Of T), String)
  nameWithType: CollectionAssertExtensions.ShouldBeEmpty<T>(IEnumerable<T>, string)
  nameWithType.vb: CollectionAssertExtensions.ShouldBeEmpty(Of T)(IEnumerable(Of T), String)
- uid: Benday.Common.Testing.CollectionAssertExtensions.ShouldBeSubsetOf*
  name: ShouldBeSubsetOf
  href: api/Benday.Common.Testing.CollectionAssertExtensions.html#Benday_Common_Testing_CollectionAssertExtensions_ShouldBeSubsetOf_
  commentId: Overload:Benday.Common.Testing.CollectionAssertExtensions.ShouldBeSubsetOf
  isSpec: "True"
  fullName: Benday.Common.Testing.CollectionAssertExtensions.ShouldBeSubsetOf
  nameWithType: CollectionAssertExtensions.ShouldBeSubsetOf
- uid: Benday.Common.Testing.CollectionAssertExtensions.ShouldBeSubsetOf``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.String)
  name: ShouldBeSubsetOf<T>(IEnumerable<T>, IEnumerable<T>, string)
  href: api/Benday.Common.Testing.CollectionAssertExtensions.html#Benday_Common_Testing_CollectionAssertExtensions_ShouldBeSubsetOf__1_System_Collections_Generic_IEnumerable___0__System_Collections_Generic_IEnumerable___0__System_String_
  commentId: M:Benday.Common.Testing.CollectionAssertExtensions.ShouldBeSubsetOf``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.String)
  name.vb: ShouldBeSubsetOf(Of T)(IEnumerable(Of T), IEnumerable(Of T), String)
  fullName: Benday.Common.Testing.CollectionAssertExtensions.ShouldBeSubsetOf<T>(System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IEnumerable<T>, string)
  fullName.vb: Benday.Common.Testing.CollectionAssertExtensions.ShouldBeSubsetOf(Of T)(System.Collections.Generic.IEnumerable(Of T), System.Collections.Generic.IEnumerable(Of T), String)
  nameWithType: CollectionAssertExtensions.ShouldBeSubsetOf<T>(IEnumerable<T>, IEnumerable<T>, string)
  nameWithType.vb: CollectionAssertExtensions.ShouldBeSubsetOf(Of T)(IEnumerable(Of T), IEnumerable(Of T), String)
- uid: Benday.Common.Testing.CollectionAssertExtensions.ShouldBeSupersetOf*
  name: ShouldBeSupersetOf
  href: api/Benday.Common.Testing.CollectionAssertExtensions.html#Benday_Common_Testing_CollectionAssertExtensions_ShouldBeSupersetOf_
  commentId: Overload:Benday.Common.Testing.CollectionAssertExtensions.ShouldBeSupersetOf
  isSpec: "True"
  fullName: Benday.Common.Testing.CollectionAssertExtensions.ShouldBeSupersetOf
  nameWithType: CollectionAssertExtensions.ShouldBeSupersetOf
- uid: Benday.Common.Testing.CollectionAssertExtensions.ShouldBeSupersetOf``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.String)
  name: ShouldBeSupersetOf<T>(IEnumerable<T>, IEnumerable<T>, string)
  href: api/Benday.Common.Testing.CollectionAssertExtensions.html#Benday_Common_Testing_CollectionAssertExtensions_ShouldBeSupersetOf__1_System_Collections_Generic_IEnumerable___0__System_Collections_Generic_IEnumerable___0__System_String_
  commentId: M:Benday.Common.Testing.CollectionAssertExtensions.ShouldBeSupersetOf``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.String)
  name.vb: ShouldBeSupersetOf(Of T)(IEnumerable(Of T), IEnumerable(Of T), String)
  fullName: Benday.Common.Testing.CollectionAssertExtensions.ShouldBeSupersetOf<T>(System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IEnumerable<T>, string)
  fullName.vb: Benday.Common.Testing.CollectionAssertExtensions.ShouldBeSupersetOf(Of T)(System.Collections.Generic.IEnumerable(Of T), System.Collections.Generic.IEnumerable(Of T), String)
  nameWithType: CollectionAssertExtensions.ShouldBeSupersetOf<T>(IEnumerable<T>, IEnumerable<T>, string)
  nameWithType.vb: CollectionAssertExtensions.ShouldBeSupersetOf(Of T)(IEnumerable(Of T), IEnumerable(Of T), String)
- uid: Benday.Common.Testing.CollectionAssertExtensions.ShouldContain*
  name: ShouldContain
  href: api/Benday.Common.Testing.CollectionAssertExtensions.html#Benday_Common_Testing_CollectionAssertExtensions_ShouldContain_
  commentId: Overload:Benday.Common.Testing.CollectionAssertExtensions.ShouldContain
  isSpec: "True"
  fullName: Benday.Common.Testing.CollectionAssertExtensions.ShouldContain
  nameWithType: CollectionAssertExtensions.ShouldContain
- uid: Benday.Common.Testing.CollectionAssertExtensions.ShouldContain``1(System.Collections.Generic.IEnumerable{``0},``0,System.String)
  name: ShouldContain<T>(IEnumerable<T>, T, string)
  href: api/Benday.Common.Testing.CollectionAssertExtensions.html#Benday_Common_Testing_CollectionAssertExtensions_ShouldContain__1_System_Collections_Generic_IEnumerable___0____0_System_String_
  commentId: M:Benday.Common.Testing.CollectionAssertExtensions.ShouldContain``1(System.Collections.Generic.IEnumerable{``0},``0,System.String)
  name.vb: ShouldContain(Of T)(IEnumerable(Of T), T, String)
  fullName: Benday.Common.Testing.CollectionAssertExtensions.ShouldContain<T>(System.Collections.Generic.IEnumerable<T>, T, string)
  fullName.vb: Benday.Common.Testing.CollectionAssertExtensions.ShouldContain(Of T)(System.Collections.Generic.IEnumerable(Of T), T, String)
  nameWithType: CollectionAssertExtensions.ShouldContain<T>(IEnumerable<T>, T, string)
  nameWithType.vb: CollectionAssertExtensions.ShouldContain(Of T)(IEnumerable(Of T), T, String)
- uid: Benday.Common.Testing.CollectionAssertExtensions.ShouldEqual*
  name: ShouldEqual
  href: api/Benday.Common.Testing.CollectionAssertExtensions.html#Benday_Common_Testing_CollectionAssertExtensions_ShouldEqual_
  commentId: Overload:Benday.Common.Testing.CollectionAssertExtensions.ShouldEqual
  isSpec: "True"
  fullName: Benday.Common.Testing.CollectionAssertExtensions.ShouldEqual
  nameWithType: CollectionAssertExtensions.ShouldEqual
- uid: Benday.Common.Testing.CollectionAssertExtensions.ShouldEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.String)
  name: ShouldEqual<T>(IEnumerable<T>, IEnumerable<T>, string)
  href: api/Benday.Common.Testing.CollectionAssertExtensions.html#Benday_Common_Testing_CollectionAssertExtensions_ShouldEqual__1_System_Collections_Generic_IEnumerable___0__System_Collections_Generic_IEnumerable___0__System_String_
  commentId: M:Benday.Common.Testing.CollectionAssertExtensions.ShouldEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.String)
  name.vb: ShouldEqual(Of T)(IEnumerable(Of T), IEnumerable(Of T), String)
  fullName: Benday.Common.Testing.CollectionAssertExtensions.ShouldEqual<T>(System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IEnumerable<T>, string)
  fullName.vb: Benday.Common.Testing.CollectionAssertExtensions.ShouldEqual(Of T)(System.Collections.Generic.IEnumerable(Of T), System.Collections.Generic.IEnumerable(Of T), String)
  nameWithType: CollectionAssertExtensions.ShouldEqual<T>(IEnumerable<T>, IEnumerable<T>, string)
  nameWithType.vb: CollectionAssertExtensions.ShouldEqual(Of T)(IEnumerable(Of T), IEnumerable(Of T), String)
- uid: Benday.Common.Testing.CollectionAssertExtensions.ShouldHaveCount*
  name: ShouldHaveCount
  href: api/Benday.Common.Testing.CollectionAssertExtensions.html#Benday_Common_Testing_CollectionAssertExtensions_ShouldHaveCount_
  commentId: Overload:Benday.Common.Testing.CollectionAssertExtensions.ShouldHaveCount
  isSpec: "True"
  fullName: Benday.Common.Testing.CollectionAssertExtensions.ShouldHaveCount
  nameWithType: CollectionAssertExtensions.ShouldHaveCount
- uid: Benday.Common.Testing.CollectionAssertExtensions.ShouldHaveCount``1(System.Collections.Generic.IEnumerable{``0},System.Int32,System.String)
  name: ShouldHaveCount<T>(IEnumerable<T>, int, string)
  href: api/Benday.Common.Testing.CollectionAssertExtensions.html#Benday_Common_Testing_CollectionAssertExtensions_ShouldHaveCount__1_System_Collections_Generic_IEnumerable___0__System_Int32_System_String_
  commentId: M:Benday.Common.Testing.CollectionAssertExtensions.ShouldHaveCount``1(System.Collections.Generic.IEnumerable{``0},System.Int32,System.String)
  name.vb: ShouldHaveCount(Of T)(IEnumerable(Of T), Integer, String)
  fullName: Benday.Common.Testing.CollectionAssertExtensions.ShouldHaveCount<T>(System.Collections.Generic.IEnumerable<T>, int, string)
  fullName.vb: Benday.Common.Testing.CollectionAssertExtensions.ShouldHaveCount(Of T)(System.Collections.Generic.IEnumerable(Of T), Integer, String)
  nameWithType: CollectionAssertExtensions.ShouldHaveCount<T>(IEnumerable<T>, int, string)
  nameWithType.vb: CollectionAssertExtensions.ShouldHaveCount(Of T)(IEnumerable(Of T), Integer, String)
- uid: Benday.Common.Testing.CollectionAssertExtensions.ShouldHaveSingleElement*
  name: ShouldHaveSingleElement
  href: api/Benday.Common.Testing.CollectionAssertExtensions.html#Benday_Common_Testing_CollectionAssertExtensions_ShouldHaveSingleElement_
  commentId: Overload:Benday.Common.Testing.CollectionAssertExtensions.ShouldHaveSingleElement
  isSpec: "True"
  fullName: Benday.Common.Testing.CollectionAssertExtensions.ShouldHaveSingleElement
  nameWithType: CollectionAssertExtensions.ShouldHaveSingleElement
- uid: Benday.Common.Testing.CollectionAssertExtensions.ShouldHaveSingleElement``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean},System.String)
  name: ShouldHaveSingleElement<T>(IEnumerable<T>, Func<T, bool>, string)
  href: api/Benday.Common.Testing.CollectionAssertExtensions.html#Benday_Common_Testing_CollectionAssertExtensions_ShouldHaveSingleElement__1_System_Collections_Generic_IEnumerable___0__System_Func___0_System_Boolean__System_String_
  commentId: M:Benday.Common.Testing.CollectionAssertExtensions.ShouldHaveSingleElement``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean},System.String)
  name.vb: ShouldHaveSingleElement(Of T)(IEnumerable(Of T), Func(Of T, Boolean), String)
  fullName: Benday.Common.Testing.CollectionAssertExtensions.ShouldHaveSingleElement<T>(System.Collections.Generic.IEnumerable<T>, System.Func<T, bool>, string)
  fullName.vb: Benday.Common.Testing.CollectionAssertExtensions.ShouldHaveSingleElement(Of T)(System.Collections.Generic.IEnumerable(Of T), System.Func(Of T, Boolean), String)
  nameWithType: CollectionAssertExtensions.ShouldHaveSingleElement<T>(IEnumerable<T>, Func<T, bool>, string)
  nameWithType.vb: CollectionAssertExtensions.ShouldHaveSingleElement(Of T)(IEnumerable(Of T), Func(Of T, Boolean), String)
- uid: Benday.Common.Testing.CollectionAssertExtensions.ShouldHaveSingleElement``1(System.Collections.Generic.IEnumerable{``0},System.String)
  name: ShouldHaveSingleElement<T>(IEnumerable<T>, string)
  href: api/Benday.Common.Testing.CollectionAssertExtensions.html#Benday_Common_Testing_CollectionAssertExtensions_ShouldHaveSingleElement__1_System_Collections_Generic_IEnumerable___0__System_String_
  commentId: M:Benday.Common.Testing.CollectionAssertExtensions.ShouldHaveSingleElement``1(System.Collections.Generic.IEnumerable{``0},System.String)
  name.vb: ShouldHaveSingleElement(Of T)(IEnumerable(Of T), String)
  fullName: Benday.Common.Testing.CollectionAssertExtensions.ShouldHaveSingleElement<T>(System.Collections.Generic.IEnumerable<T>, string)
  fullName.vb: Benday.Common.Testing.CollectionAssertExtensions.ShouldHaveSingleElement(Of T)(System.Collections.Generic.IEnumerable(Of T), String)
  nameWithType: CollectionAssertExtensions.ShouldHaveSingleElement<T>(IEnumerable<T>, string)
  nameWithType.vb: CollectionAssertExtensions.ShouldHaveSingleElement(Of T)(IEnumerable(Of T), String)
- uid: Benday.Common.Testing.CollectionAssertExtensions.ShouldHaveUniqueElements*
  name: ShouldHaveUniqueElements
  href: api/Benday.Common.Testing.CollectionAssertExtensions.html#Benday_Common_Testing_CollectionAssertExtensions_ShouldHaveUniqueElements_
  commentId: Overload:Benday.Common.Testing.CollectionAssertExtensions.ShouldHaveUniqueElements
  isSpec: "True"
  fullName: Benday.Common.Testing.CollectionAssertExtensions.ShouldHaveUniqueElements
  nameWithType: CollectionAssertExtensions.ShouldHaveUniqueElements
- uid: Benday.Common.Testing.CollectionAssertExtensions.ShouldHaveUniqueElements``1(System.Collections.Generic.IEnumerable{``0},System.String)
  name: ShouldHaveUniqueElements<T>(IEnumerable<T>, string)
  href: api/Benday.Common.Testing.CollectionAssertExtensions.html#Benday_Common_Testing_CollectionAssertExtensions_ShouldHaveUniqueElements__1_System_Collections_Generic_IEnumerable___0__System_String_
  commentId: M:Benday.Common.Testing.CollectionAssertExtensions.ShouldHaveUniqueElements``1(System.Collections.Generic.IEnumerable{``0},System.String)
  name.vb: ShouldHaveUniqueElements(Of T)(IEnumerable(Of T), String)
  fullName: Benday.Common.Testing.CollectionAssertExtensions.ShouldHaveUniqueElements<T>(System.Collections.Generic.IEnumerable<T>, string)
  fullName.vb: Benday.Common.Testing.CollectionAssertExtensions.ShouldHaveUniqueElements(Of T)(System.Collections.Generic.IEnumerable(Of T), String)
  nameWithType: CollectionAssertExtensions.ShouldHaveUniqueElements<T>(IEnumerable<T>, string)
  nameWithType.vb: CollectionAssertExtensions.ShouldHaveUniqueElements(Of T)(IEnumerable(Of T), String)
- uid: Benday.Common.Testing.CollectionAssertExtensions.ShouldNotBeEmpty*
  name: ShouldNotBeEmpty
  href: api/Benday.Common.Testing.CollectionAssertExtensions.html#Benday_Common_Testing_CollectionAssertExtensions_ShouldNotBeEmpty_
  commentId: Overload:Benday.Common.Testing.CollectionAssertExtensions.ShouldNotBeEmpty
  isSpec: "True"
  fullName: Benday.Common.Testing.CollectionAssertExtensions.ShouldNotBeEmpty
  nameWithType: CollectionAssertExtensions.ShouldNotBeEmpty
- uid: Benday.Common.Testing.CollectionAssertExtensions.ShouldNotBeEmpty``1(System.Collections.Generic.IEnumerable{``0},System.String)
  name: ShouldNotBeEmpty<T>(IEnumerable<T>, string)
  href: api/Benday.Common.Testing.CollectionAssertExtensions.html#Benday_Common_Testing_CollectionAssertExtensions_ShouldNotBeEmpty__1_System_Collections_Generic_IEnumerable___0__System_String_
  commentId: M:Benday.Common.Testing.CollectionAssertExtensions.ShouldNotBeEmpty``1(System.Collections.Generic.IEnumerable{``0},System.String)
  name.vb: ShouldNotBeEmpty(Of T)(IEnumerable(Of T), String)
  fullName: Benday.Common.Testing.CollectionAssertExtensions.ShouldNotBeEmpty<T>(System.Collections.Generic.IEnumerable<T>, string)
  fullName.vb: Benday.Common.Testing.CollectionAssertExtensions.ShouldNotBeEmpty(Of T)(System.Collections.Generic.IEnumerable(Of T), String)
  nameWithType: CollectionAssertExtensions.ShouldNotBeEmpty<T>(IEnumerable<T>, string)
  nameWithType.vb: CollectionAssertExtensions.ShouldNotBeEmpty(Of T)(IEnumerable(Of T), String)
- uid: Benday.Common.Testing.CollectionAssertExtensions.ShouldNotContain*
  name: ShouldNotContain
  href: api/Benday.Common.Testing.CollectionAssertExtensions.html#Benday_Common_Testing_CollectionAssertExtensions_ShouldNotContain_
  commentId: Overload:Benday.Common.Testing.CollectionAssertExtensions.ShouldNotContain
  isSpec: "True"
  fullName: Benday.Common.Testing.CollectionAssertExtensions.ShouldNotContain
  nameWithType: CollectionAssertExtensions.ShouldNotContain
- uid: Benday.Common.Testing.CollectionAssertExtensions.ShouldNotContain``1(System.Collections.Generic.IEnumerable{``0},``0,System.String)
  name: ShouldNotContain<T>(IEnumerable<T>, T, string)
  href: api/Benday.Common.Testing.CollectionAssertExtensions.html#Benday_Common_Testing_CollectionAssertExtensions_ShouldNotContain__1_System_Collections_Generic_IEnumerable___0____0_System_String_
  commentId: M:Benday.Common.Testing.CollectionAssertExtensions.ShouldNotContain``1(System.Collections.Generic.IEnumerable{``0},``0,System.String)
  name.vb: ShouldNotContain(Of T)(IEnumerable(Of T), T, String)
  fullName: Benday.Common.Testing.CollectionAssertExtensions.ShouldNotContain<T>(System.Collections.Generic.IEnumerable<T>, T, string)
  fullName.vb: Benday.Common.Testing.CollectionAssertExtensions.ShouldNotContain(Of T)(System.Collections.Generic.IEnumerable(Of T), T, String)
  nameWithType: CollectionAssertExtensions.ShouldNotContain<T>(IEnumerable<T>, T, string)
  nameWithType.vb: CollectionAssertExtensions.ShouldNotContain(Of T)(IEnumerable(Of T), T, String)
- uid: Benday.Common.Testing.ICheckArrayAssertion`1
  name: ICheckArrayAssertion<T>
  href: api/Benday.Common.Testing.ICheckArrayAssertion-1.html
  commentId: T:Benday.Common.Testing.ICheckArrayAssertion`1
  name.vb: ICheckArrayAssertion(Of T)
  fullName: Benday.Common.Testing.ICheckArrayAssertion<T>
  fullName.vb: Benday.Common.Testing.ICheckArrayAssertion(Of T)
  nameWithType: ICheckArrayAssertion<T>
  nameWithType.vb: ICheckArrayAssertion(Of T)
- uid: Benday.Common.Testing.ICheckAssertionForNullableType`1
  name: ICheckAssertionForNullableType<T>
  href: api/Benday.Common.Testing.ICheckAssertionForNullableType-1.html
  commentId: T:Benday.Common.Testing.ICheckAssertionForNullableType`1
  name.vb: ICheckAssertionForNullableType(Of T)
  fullName: Benday.Common.Testing.ICheckAssertionForNullableType<T>
  fullName.vb: Benday.Common.Testing.ICheckAssertionForNullableType(Of T)
  nameWithType: ICheckAssertionForNullableType<T>
  nameWithType.vb: ICheckAssertionForNullableType(Of T)
- uid: Benday.Common.Testing.ICheckAssertion`1
  name: ICheckAssertion<T>
  href: api/Benday.Common.Testing.ICheckAssertion-1.html
  commentId: T:Benday.Common.Testing.ICheckAssertion`1
  name.vb: ICheckAssertion(Of T)
  fullName: Benday.Common.Testing.ICheckAssertion<T>
  fullName.vb: Benday.Common.Testing.ICheckAssertion(Of T)
  nameWithType: ICheckAssertion<T>
  nameWithType.vb: ICheckAssertion(Of T)
- uid: Benday.Common.Testing.ICheckAssertion`1.FailureMessage
  name: FailureMessage
  href: api/Benday.Common.Testing.ICheckAssertion-1.html#Benday_Common_Testing_ICheckAssertion_1_FailureMessage
  commentId: P:Benday.Common.Testing.ICheckAssertion`1.FailureMessage
  fullName: Benday.Common.Testing.ICheckAssertion<T>.FailureMessage
  fullName.vb: Benday.Common.Testing.ICheckAssertion(Of T).FailureMessage
  nameWithType: ICheckAssertion<T>.FailureMessage
  nameWithType.vb: ICheckAssertion(Of T).FailureMessage
- uid: Benday.Common.Testing.ICheckAssertion`1.FailureMessage*
  name: FailureMessage
  href: api/Benday.Common.Testing.ICheckAssertion-1.html#Benday_Common_Testing_ICheckAssertion_1_FailureMessage_
  commentId: Overload:Benday.Common.Testing.ICheckAssertion`1.FailureMessage
  isSpec: "True"
  fullName: Benday.Common.Testing.ICheckAssertion<T>.FailureMessage
  fullName.vb: Benday.Common.Testing.ICheckAssertion(Of T).FailureMessage
  nameWithType: ICheckAssertion<T>.FailureMessage
  nameWithType.vb: ICheckAssertion(Of T).FailureMessage
- uid: Benday.Common.Testing.ICheckAssertion`1.Input
  name: Input
  href: api/Benday.Common.Testing.ICheckAssertion-1.html#Benday_Common_Testing_ICheckAssertion_1_Input
  commentId: P:Benday.Common.Testing.ICheckAssertion`1.Input
  fullName: Benday.Common.Testing.ICheckAssertion<T>.Input
  fullName.vb: Benday.Common.Testing.ICheckAssertion(Of T).Input
  nameWithType: ICheckAssertion<T>.Input
  nameWithType.vb: ICheckAssertion(Of T).Input
- uid: Benday.Common.Testing.ICheckAssertion`1.Input*
  name: Input
  href: api/Benday.Common.Testing.ICheckAssertion-1.html#Benday_Common_Testing_ICheckAssertion_1_Input_
  commentId: Overload:Benday.Common.Testing.ICheckAssertion`1.Input
  isSpec: "True"
  fullName: Benday.Common.Testing.ICheckAssertion<T>.Input
  fullName.vb: Benday.Common.Testing.ICheckAssertion(Of T).Input
  nameWithType: ICheckAssertion<T>.Input
  nameWithType.vb: ICheckAssertion(Of T).Input
- uid: Benday.Common.Testing.ICheckAssertion`1.WithMessage(System.String)
  name: WithMessage(string)
  href: api/Benday.Common.Testing.ICheckAssertion-1.html#Benday_Common_Testing_ICheckAssertion_1_WithMessage_System_String_
  commentId: M:Benday.Common.Testing.ICheckAssertion`1.WithMessage(System.String)
  name.vb: WithMessage(String)
  fullName: Benday.Common.Testing.ICheckAssertion<T>.WithMessage(string)
  fullName.vb: Benday.Common.Testing.ICheckAssertion(Of T).WithMessage(String)
  nameWithType: ICheckAssertion<T>.WithMessage(string)
  nameWithType.vb: ICheckAssertion(Of T).WithMessage(String)
- uid: Benday.Common.Testing.ICheckAssertion`1.WithMessage*
  name: WithMessage
  href: api/Benday.Common.Testing.ICheckAssertion-1.html#Benday_Common_Testing_ICheckAssertion_1_WithMessage_
  commentId: Overload:Benday.Common.Testing.ICheckAssertion`1.WithMessage
  isSpec: "True"
  fullName: Benday.Common.Testing.ICheckAssertion<T>.WithMessage
  fullName.vb: Benday.Common.Testing.ICheckAssertion(Of T).WithMessage
  nameWithType: ICheckAssertion<T>.WithMessage
  nameWithType.vb: ICheckAssertion(Of T).WithMessage
- uid: Benday.Common.Testing.ICheckCollectionAssertion`1
  name: ICheckCollectionAssertion<T>
  href: api/Benday.Common.Testing.ICheckCollectionAssertion-1.html
  commentId: T:Benday.Common.Testing.ICheckCollectionAssertion`1
  name.vb: ICheckCollectionAssertion(Of T)
  fullName: Benday.Common.Testing.ICheckCollectionAssertion<T>
  fullName.vb: Benday.Common.Testing.ICheckCollectionAssertion(Of T)
  nameWithType: ICheckCollectionAssertion<T>
  nameWithType.vb: ICheckCollectionAssertion(Of T)
- uid: Benday.Common.Testing.IEnumerableAssertionExtensions
  name: IEnumerableAssertionExtensions
  href: api/Benday.Common.Testing.IEnumerableAssertionExtensions.html
  commentId: T:Benday.Common.Testing.IEnumerableAssertionExtensions
  fullName: Benday.Common.Testing.IEnumerableAssertionExtensions
  nameWithType: IEnumerableAssertionExtensions
- uid: Benday.Common.Testing.IEnumerableAssertionExtensions.AllItemsAreNotNull*
  name: AllItemsAreNotNull
  href: api/Benday.Common.Testing.IEnumerableAssertionExtensions.html#Benday_Common_Testing_IEnumerableAssertionExtensions_AllItemsAreNotNull_
  commentId: Overload:Benday.Common.Testing.IEnumerableAssertionExtensions.AllItemsAreNotNull
  isSpec: "True"
  fullName: Benday.Common.Testing.IEnumerableAssertionExtensions.AllItemsAreNotNull
  nameWithType: IEnumerableAssertionExtensions.AllItemsAreNotNull
- uid: Benday.Common.Testing.IEnumerableAssertionExtensions.AllItemsAreNotNull``1(Benday.Common.Testing.ICheckCollectionAssertion{System.Collections.Generic.IEnumerable{``0}},System.String)
  name: AllItemsAreNotNull<T>(ICheckCollectionAssertion<IEnumerable<T?>>, string?)
  href: api/Benday.Common.Testing.IEnumerableAssertionExtensions.html#Benday_Common_Testing_IEnumerableAssertionExtensions_AllItemsAreNotNull__1_Benday_Common_Testing_ICheckCollectionAssertion_System_Collections_Generic_IEnumerable___0___System_String_
  commentId: M:Benday.Common.Testing.IEnumerableAssertionExtensions.AllItemsAreNotNull``1(Benday.Common.Testing.ICheckCollectionAssertion{System.Collections.Generic.IEnumerable{``0}},System.String)
  name.vb: AllItemsAreNotNull(Of T)(ICheckCollectionAssertion(Of IEnumerable(Of T)), String)
  fullName: Benday.Common.Testing.IEnumerableAssertionExtensions.AllItemsAreNotNull<T>(Benday.Common.Testing.ICheckCollectionAssertion<System.Collections.Generic.IEnumerable<T?>>, string?)
  fullName.vb: Benday.Common.Testing.IEnumerableAssertionExtensions.AllItemsAreNotNull(Of T)(Benday.Common.Testing.ICheckCollectionAssertion(Of System.Collections.Generic.IEnumerable(Of T)), String)
  nameWithType: IEnumerableAssertionExtensions.AllItemsAreNotNull<T>(ICheckCollectionAssertion<IEnumerable<T?>>, string?)
  nameWithType.vb: IEnumerableAssertionExtensions.AllItemsAreNotNull(Of T)(ICheckCollectionAssertion(Of IEnumerable(Of T)), String)
- uid: Benday.Common.Testing.IEnumerableAssertionExtensions.AllItemsAreUnique*
  name: AllItemsAreUnique
  href: api/Benday.Common.Testing.IEnumerableAssertionExtensions.html#Benday_Common_Testing_IEnumerableAssertionExtensions_AllItemsAreUnique_
  commentId: Overload:Benday.Common.Testing.IEnumerableAssertionExtensions.AllItemsAreUnique
  isSpec: "True"
  fullName: Benday.Common.Testing.IEnumerableAssertionExtensions.AllItemsAreUnique
  nameWithType: IEnumerableAssertionExtensions.AllItemsAreUnique
- uid: Benday.Common.Testing.IEnumerableAssertionExtensions.AllItemsAreUnique``1(Benday.Common.Testing.ICheckCollectionAssertion{System.Collections.Generic.IEnumerable{``0}},System.String)
  name: AllItemsAreUnique<T>(ICheckCollectionAssertion<IEnumerable<T>>, string?)
  href: api/Benday.Common.Testing.IEnumerableAssertionExtensions.html#Benday_Common_Testing_IEnumerableAssertionExtensions_AllItemsAreUnique__1_Benday_Common_Testing_ICheckCollectionAssertion_System_Collections_Generic_IEnumerable___0___System_String_
  commentId: M:Benday.Common.Testing.IEnumerableAssertionExtensions.AllItemsAreUnique``1(Benday.Common.Testing.ICheckCollectionAssertion{System.Collections.Generic.IEnumerable{``0}},System.String)
  name.vb: AllItemsAreUnique(Of T)(ICheckCollectionAssertion(Of IEnumerable(Of T)), String)
  fullName: Benday.Common.Testing.IEnumerableAssertionExtensions.AllItemsAreUnique<T>(Benday.Common.Testing.ICheckCollectionAssertion<System.Collections.Generic.IEnumerable<T>>, string?)
  fullName.vb: Benday.Common.Testing.IEnumerableAssertionExtensions.AllItemsAreUnique(Of T)(Benday.Common.Testing.ICheckCollectionAssertion(Of System.Collections.Generic.IEnumerable(Of T)), String)
  nameWithType: IEnumerableAssertionExtensions.AllItemsAreUnique<T>(ICheckCollectionAssertion<IEnumerable<T>>, string?)
  nameWithType.vb: IEnumerableAssertionExtensions.AllItemsAreUnique(Of T)(ICheckCollectionAssertion(Of IEnumerable(Of T)), String)
- uid: Benday.Common.Testing.IEnumerableAssertionExtensions.Contains*
  name: Contains
  href: api/Benday.Common.Testing.IEnumerableAssertionExtensions.html#Benday_Common_Testing_IEnumerableAssertionExtensions_Contains_
  commentId: Overload:Benday.Common.Testing.IEnumerableAssertionExtensions.Contains
  isSpec: "True"
  fullName: Benday.Common.Testing.IEnumerableAssertionExtensions.Contains
  nameWithType: IEnumerableAssertionExtensions.Contains
- uid: Benday.Common.Testing.IEnumerableAssertionExtensions.Contains``1(Benday.Common.Testing.ICheckCollectionAssertion{System.Collections.Generic.IEnumerable{``0}},``0,System.String)
  name: Contains<T>(ICheckCollectionAssertion<IEnumerable<T>>, T, string?)
  href: api/Benday.Common.Testing.IEnumerableAssertionExtensions.html#Benday_Common_Testing_IEnumerableAssertionExtensions_Contains__1_Benday_Common_Testing_ICheckCollectionAssertion_System_Collections_Generic_IEnumerable___0_____0_System_String_
  commentId: M:Benday.Common.Testing.IEnumerableAssertionExtensions.Contains``1(Benday.Common.Testing.ICheckCollectionAssertion{System.Collections.Generic.IEnumerable{``0}},``0,System.String)
  name.vb: Contains(Of T)(ICheckCollectionAssertion(Of IEnumerable(Of T)), T, String)
  fullName: Benday.Common.Testing.IEnumerableAssertionExtensions.Contains<T>(Benday.Common.Testing.ICheckCollectionAssertion<System.Collections.Generic.IEnumerable<T>>, T, string?)
  fullName.vb: Benday.Common.Testing.IEnumerableAssertionExtensions.Contains(Of T)(Benday.Common.Testing.ICheckCollectionAssertion(Of System.Collections.Generic.IEnumerable(Of T)), T, String)
  nameWithType: IEnumerableAssertionExtensions.Contains<T>(ICheckCollectionAssertion<IEnumerable<T>>, T, string?)
  nameWithType.vb: IEnumerableAssertionExtensions.Contains(Of T)(ICheckCollectionAssertion(Of IEnumerable(Of T)), T, String)
- uid: Benday.Common.Testing.IEnumerableAssertionExtensions.DoesNotContain*
  name: DoesNotContain
  href: api/Benday.Common.Testing.IEnumerableAssertionExtensions.html#Benday_Common_Testing_IEnumerableAssertionExtensions_DoesNotContain_
  commentId: Overload:Benday.Common.Testing.IEnumerableAssertionExtensions.DoesNotContain
  isSpec: "True"
  fullName: Benday.Common.Testing.IEnumerableAssertionExtensions.DoesNotContain
  nameWithType: IEnumerableAssertionExtensions.DoesNotContain
- uid: Benday.Common.Testing.IEnumerableAssertionExtensions.DoesNotContain``1(Benday.Common.Testing.ICheckCollectionAssertion{System.Collections.Generic.IEnumerable{``0}},``0,System.String)
  name: DoesNotContain<T>(ICheckCollectionAssertion<IEnumerable<T>>, T, string?)
  href: api/Benday.Common.Testing.IEnumerableAssertionExtensions.html#Benday_Common_Testing_IEnumerableAssertionExtensions_DoesNotContain__1_Benday_Common_Testing_ICheckCollectionAssertion_System_Collections_Generic_IEnumerable___0_____0_System_String_
  commentId: M:Benday.Common.Testing.IEnumerableAssertionExtensions.DoesNotContain``1(Benday.Common.Testing.ICheckCollectionAssertion{System.Collections.Generic.IEnumerable{``0}},``0,System.String)
  name.vb: DoesNotContain(Of T)(ICheckCollectionAssertion(Of IEnumerable(Of T)), T, String)
  fullName: Benday.Common.Testing.IEnumerableAssertionExtensions.DoesNotContain<T>(Benday.Common.Testing.ICheckCollectionAssertion<System.Collections.Generic.IEnumerable<T>>, T, string?)
  fullName.vb: Benday.Common.Testing.IEnumerableAssertionExtensions.DoesNotContain(Of T)(Benday.Common.Testing.ICheckCollectionAssertion(Of System.Collections.Generic.IEnumerable(Of T)), T, String)
  nameWithType: IEnumerableAssertionExtensions.DoesNotContain<T>(ICheckCollectionAssertion<IEnumerable<T>>, T, string?)
  nameWithType.vb: IEnumerableAssertionExtensions.DoesNotContain(Of T)(ICheckCollectionAssertion(Of IEnumerable(Of T)), T, String)
- uid: Benday.Common.Testing.IEnumerableAssertionExtensions.IsEqualTo*
  name: IsEqualTo
  href: api/Benday.Common.Testing.IEnumerableAssertionExtensions.html#Benday_Common_Testing_IEnumerableAssertionExtensions_IsEqualTo_
  commentId: Overload:Benday.Common.Testing.IEnumerableAssertionExtensions.IsEqualTo
  isSpec: "True"
  fullName: Benday.Common.Testing.IEnumerableAssertionExtensions.IsEqualTo
  nameWithType: IEnumerableAssertionExtensions.IsEqualTo
- uid: Benday.Common.Testing.IEnumerableAssertionExtensions.IsEqualTo``1(Benday.Common.Testing.ICheckCollectionAssertion{System.Collections.Generic.IEnumerable{``0}},System.Collections.Generic.IEnumerable{``0},System.String)
  name: IsEqualTo<T>(ICheckCollectionAssertion<IEnumerable<T>>, IEnumerable<T>, string?)
  href: api/Benday.Common.Testing.IEnumerableAssertionExtensions.html#Benday_Common_Testing_IEnumerableAssertionExtensions_IsEqualTo__1_Benday_Common_Testing_ICheckCollectionAssertion_System_Collections_Generic_IEnumerable___0___System_Collections_Generic_IEnumerable___0__System_String_
  commentId: M:Benday.Common.Testing.IEnumerableAssertionExtensions.IsEqualTo``1(Benday.Common.Testing.ICheckCollectionAssertion{System.Collections.Generic.IEnumerable{``0}},System.Collections.Generic.IEnumerable{``0},System.String)
  name.vb: IsEqualTo(Of T)(ICheckCollectionAssertion(Of IEnumerable(Of T)), IEnumerable(Of T), String)
  fullName: Benday.Common.Testing.IEnumerableAssertionExtensions.IsEqualTo<T>(Benday.Common.Testing.ICheckCollectionAssertion<System.Collections.Generic.IEnumerable<T>>, System.Collections.Generic.IEnumerable<T>, string?)
  fullName.vb: Benday.Common.Testing.IEnumerableAssertionExtensions.IsEqualTo(Of T)(Benday.Common.Testing.ICheckCollectionAssertion(Of System.Collections.Generic.IEnumerable(Of T)), System.Collections.Generic.IEnumerable(Of T), String)
  nameWithType: IEnumerableAssertionExtensions.IsEqualTo<T>(ICheckCollectionAssertion<IEnumerable<T>>, IEnumerable<T>, string?)
  nameWithType.vb: IEnumerableAssertionExtensions.IsEqualTo(Of T)(ICheckCollectionAssertion(Of IEnumerable(Of T)), IEnumerable(Of T), String)
- uid: Benday.Common.Testing.IEnumerableAssertionExtensions.IsEquivalentTo*
  name: IsEquivalentTo
  href: api/Benday.Common.Testing.IEnumerableAssertionExtensions.html#Benday_Common_Testing_IEnumerableAssertionExtensions_IsEquivalentTo_
  commentId: Overload:Benday.Common.Testing.IEnumerableAssertionExtensions.IsEquivalentTo
  isSpec: "True"
  fullName: Benday.Common.Testing.IEnumerableAssertionExtensions.IsEquivalentTo
  nameWithType: IEnumerableAssertionExtensions.IsEquivalentTo
- uid: Benday.Common.Testing.IEnumerableAssertionExtensions.IsEquivalentTo``1(Benday.Common.Testing.ICheckCollectionAssertion{System.Collections.Generic.IEnumerable{``0}},System.Collections.Generic.IEnumerable{``0},System.String)
  name: IsEquivalentTo<T>(ICheckCollectionAssertion<IEnumerable<T>>, IEnumerable<T>, string?)
  href: api/Benday.Common.Testing.IEnumerableAssertionExtensions.html#Benday_Common_Testing_IEnumerableAssertionExtensions_IsEquivalentTo__1_Benday_Common_Testing_ICheckCollectionAssertion_System_Collections_Generic_IEnumerable___0___System_Collections_Generic_IEnumerable___0__System_String_
  commentId: M:Benday.Common.Testing.IEnumerableAssertionExtensions.IsEquivalentTo``1(Benday.Common.Testing.ICheckCollectionAssertion{System.Collections.Generic.IEnumerable{``0}},System.Collections.Generic.IEnumerable{``0},System.String)
  name.vb: IsEquivalentTo(Of T)(ICheckCollectionAssertion(Of IEnumerable(Of T)), IEnumerable(Of T), String)
  fullName: Benday.Common.Testing.IEnumerableAssertionExtensions.IsEquivalentTo<T>(Benday.Common.Testing.ICheckCollectionAssertion<System.Collections.Generic.IEnumerable<T>>, System.Collections.Generic.IEnumerable<T>, string?)
  fullName.vb: Benday.Common.Testing.IEnumerableAssertionExtensions.IsEquivalentTo(Of T)(Benday.Common.Testing.ICheckCollectionAssertion(Of System.Collections.Generic.IEnumerable(Of T)), System.Collections.Generic.IEnumerable(Of T), String)
  nameWithType: IEnumerableAssertionExtensions.IsEquivalentTo<T>(ICheckCollectionAssertion<IEnumerable<T>>, IEnumerable<T>, string?)
  nameWithType.vb: IEnumerableAssertionExtensions.IsEquivalentTo(Of T)(ICheckCollectionAssertion(Of IEnumerable(Of T)), IEnumerable(Of T), String)
- uid: Benday.Common.Testing.IEnumerableAssertionExtensions.IsNotEqualTo*
  name: IsNotEqualTo
  href: api/Benday.Common.Testing.IEnumerableAssertionExtensions.html#Benday_Common_Testing_IEnumerableAssertionExtensions_IsNotEqualTo_
  commentId: Overload:Benday.Common.Testing.IEnumerableAssertionExtensions.IsNotEqualTo
  isSpec: "True"
  fullName: Benday.Common.Testing.IEnumerableAssertionExtensions.IsNotEqualTo
  nameWithType: IEnumerableAssertionExtensions.IsNotEqualTo
- uid: Benday.Common.Testing.IEnumerableAssertionExtensions.IsNotEqualTo``1(Benday.Common.Testing.ICheckCollectionAssertion{System.Collections.Generic.IEnumerable{``0}},System.Collections.Generic.IEnumerable{``0},System.String)
  name: IsNotEqualTo<T>(ICheckCollectionAssertion<IEnumerable<T>>, IEnumerable<T>, string?)
  href: api/Benday.Common.Testing.IEnumerableAssertionExtensions.html#Benday_Common_Testing_IEnumerableAssertionExtensions_IsNotEqualTo__1_Benday_Common_Testing_ICheckCollectionAssertion_System_Collections_Generic_IEnumerable___0___System_Collections_Generic_IEnumerable___0__System_String_
  commentId: M:Benday.Common.Testing.IEnumerableAssertionExtensions.IsNotEqualTo``1(Benday.Common.Testing.ICheckCollectionAssertion{System.Collections.Generic.IEnumerable{``0}},System.Collections.Generic.IEnumerable{``0},System.String)
  name.vb: IsNotEqualTo(Of T)(ICheckCollectionAssertion(Of IEnumerable(Of T)), IEnumerable(Of T), String)
  fullName: Benday.Common.Testing.IEnumerableAssertionExtensions.IsNotEqualTo<T>(Benday.Common.Testing.ICheckCollectionAssertion<System.Collections.Generic.IEnumerable<T>>, System.Collections.Generic.IEnumerable<T>, string?)
  fullName.vb: Benday.Common.Testing.IEnumerableAssertionExtensions.IsNotEqualTo(Of T)(Benday.Common.Testing.ICheckCollectionAssertion(Of System.Collections.Generic.IEnumerable(Of T)), System.Collections.Generic.IEnumerable(Of T), String)
  nameWithType: IEnumerableAssertionExtensions.IsNotEqualTo<T>(ICheckCollectionAssertion<IEnumerable<T>>, IEnumerable<T>, string?)
  nameWithType.vb: IEnumerableAssertionExtensions.IsNotEqualTo(Of T)(ICheckCollectionAssertion(Of IEnumerable(Of T)), IEnumerable(Of T), String)
- uid: Benday.Common.Testing.IEnumerableAssertionExtensions.IsNotEquivalentTo*
  name: IsNotEquivalentTo
  href: api/Benday.Common.Testing.IEnumerableAssertionExtensions.html#Benday_Common_Testing_IEnumerableAssertionExtensions_IsNotEquivalentTo_
  commentId: Overload:Benday.Common.Testing.IEnumerableAssertionExtensions.IsNotEquivalentTo
  isSpec: "True"
  fullName: Benday.Common.Testing.IEnumerableAssertionExtensions.IsNotEquivalentTo
  nameWithType: IEnumerableAssertionExtensions.IsNotEquivalentTo
- uid: Benday.Common.Testing.IEnumerableAssertionExtensions.IsNotEquivalentTo``1(Benday.Common.Testing.ICheckCollectionAssertion{System.Collections.Generic.IEnumerable{``0}},System.Collections.Generic.IEnumerable{``0},System.String)
  name: IsNotEquivalentTo<T>(ICheckCollectionAssertion<IEnumerable<T>>, IEnumerable<T>, string?)
  href: api/Benday.Common.Testing.IEnumerableAssertionExtensions.html#Benday_Common_Testing_IEnumerableAssertionExtensions_IsNotEquivalentTo__1_Benday_Common_Testing_ICheckCollectionAssertion_System_Collections_Generic_IEnumerable___0___System_Collections_Generic_IEnumerable___0__System_String_
  commentId: M:Benday.Common.Testing.IEnumerableAssertionExtensions.IsNotEquivalentTo``1(Benday.Common.Testing.ICheckCollectionAssertion{System.Collections.Generic.IEnumerable{``0}},System.Collections.Generic.IEnumerable{``0},System.String)
  name.vb: IsNotEquivalentTo(Of T)(ICheckCollectionAssertion(Of IEnumerable(Of T)), IEnumerable(Of T), String)
  fullName: Benday.Common.Testing.IEnumerableAssertionExtensions.IsNotEquivalentTo<T>(Benday.Common.Testing.ICheckCollectionAssertion<System.Collections.Generic.IEnumerable<T>>, System.Collections.Generic.IEnumerable<T>, string?)
  fullName.vb: Benday.Common.Testing.IEnumerableAssertionExtensions.IsNotEquivalentTo(Of T)(Benday.Common.Testing.ICheckCollectionAssertion(Of System.Collections.Generic.IEnumerable(Of T)), System.Collections.Generic.IEnumerable(Of T), String)
  nameWithType: IEnumerableAssertionExtensions.IsNotEquivalentTo<T>(ICheckCollectionAssertion<IEnumerable<T>>, IEnumerable<T>, string?)
  nameWithType.vb: IEnumerableAssertionExtensions.IsNotEquivalentTo(Of T)(ICheckCollectionAssertion(Of IEnumerable(Of T)), IEnumerable(Of T), String)
- uid: Benday.Common.Testing.IEnumerableAssertionExtensions.IsSubsetOf*
  name: IsSubsetOf
  href: api/Benday.Common.Testing.IEnumerableAssertionExtensions.html#Benday_Common_Testing_IEnumerableAssertionExtensions_IsSubsetOf_
  commentId: Overload:Benday.Common.Testing.IEnumerableAssertionExtensions.IsSubsetOf
  isSpec: "True"
  fullName: Benday.Common.Testing.IEnumerableAssertionExtensions.IsSubsetOf
  nameWithType: IEnumerableAssertionExtensions.IsSubsetOf
- uid: Benday.Common.Testing.IEnumerableAssertionExtensions.IsSubsetOf``1(Benday.Common.Testing.ICheckCollectionAssertion{System.Collections.Generic.IEnumerable{``0}},System.Collections.Generic.IEnumerable{``0},System.String)
  name: IsSubsetOf<T>(ICheckCollectionAssertion<IEnumerable<T>>, IEnumerable<T>, string?)
  href: api/Benday.Common.Testing.IEnumerableAssertionExtensions.html#Benday_Common_Testing_IEnumerableAssertionExtensions_IsSubsetOf__1_Benday_Common_Testing_ICheckCollectionAssertion_System_Collections_Generic_IEnumerable___0___System_Collections_Generic_IEnumerable___0__System_String_
  commentId: M:Benday.Common.Testing.IEnumerableAssertionExtensions.IsSubsetOf``1(Benday.Common.Testing.ICheckCollectionAssertion{System.Collections.Generic.IEnumerable{``0}},System.Collections.Generic.IEnumerable{``0},System.String)
  name.vb: IsSubsetOf(Of T)(ICheckCollectionAssertion(Of IEnumerable(Of T)), IEnumerable(Of T), String)
  fullName: Benday.Common.Testing.IEnumerableAssertionExtensions.IsSubsetOf<T>(Benday.Common.Testing.ICheckCollectionAssertion<System.Collections.Generic.IEnumerable<T>>, System.Collections.Generic.IEnumerable<T>, string?)
  fullName.vb: Benday.Common.Testing.IEnumerableAssertionExtensions.IsSubsetOf(Of T)(Benday.Common.Testing.ICheckCollectionAssertion(Of System.Collections.Generic.IEnumerable(Of T)), System.Collections.Generic.IEnumerable(Of T), String)
  nameWithType: IEnumerableAssertionExtensions.IsSubsetOf<T>(ICheckCollectionAssertion<IEnumerable<T>>, IEnumerable<T>, string?)
  nameWithType.vb: IEnumerableAssertionExtensions.IsSubsetOf(Of T)(ICheckCollectionAssertion(Of IEnumerable(Of T)), IEnumerable(Of T), String)
- uid: Benday.Common.Testing.IEnumerableAssertionExtensions.IsSupersetOf*
  name: IsSupersetOf
  href: api/Benday.Common.Testing.IEnumerableAssertionExtensions.html#Benday_Common_Testing_IEnumerableAssertionExtensions_IsSupersetOf_
  commentId: Overload:Benday.Common.Testing.IEnumerableAssertionExtensions.IsSupersetOf
  isSpec: "True"
  fullName: Benday.Common.Testing.IEnumerableAssertionExtensions.IsSupersetOf
  nameWithType: IEnumerableAssertionExtensions.IsSupersetOf
- uid: Benday.Common.Testing.IEnumerableAssertionExtensions.IsSupersetOf``1(Benday.Common.Testing.ICheckCollectionAssertion{System.Collections.Generic.IEnumerable{``0}},System.Collections.Generic.IEnumerable{``0},System.String)
  name: IsSupersetOf<T>(ICheckCollectionAssertion<IEnumerable<T>>, IEnumerable<T>, string?)
  href: api/Benday.Common.Testing.IEnumerableAssertionExtensions.html#Benday_Common_Testing_IEnumerableAssertionExtensions_IsSupersetOf__1_Benday_Common_Testing_ICheckCollectionAssertion_System_Collections_Generic_IEnumerable___0___System_Collections_Generic_IEnumerable___0__System_String_
  commentId: M:Benday.Common.Testing.IEnumerableAssertionExtensions.IsSupersetOf``1(Benday.Common.Testing.ICheckCollectionAssertion{System.Collections.Generic.IEnumerable{``0}},System.Collections.Generic.IEnumerable{``0},System.String)
  name.vb: IsSupersetOf(Of T)(ICheckCollectionAssertion(Of IEnumerable(Of T)), IEnumerable(Of T), String)
  fullName: Benday.Common.Testing.IEnumerableAssertionExtensions.IsSupersetOf<T>(Benday.Common.Testing.ICheckCollectionAssertion<System.Collections.Generic.IEnumerable<T>>, System.Collections.Generic.IEnumerable<T>, string?)
  fullName.vb: Benday.Common.Testing.IEnumerableAssertionExtensions.IsSupersetOf(Of T)(Benday.Common.Testing.ICheckCollectionAssertion(Of System.Collections.Generic.IEnumerable(Of T)), System.Collections.Generic.IEnumerable(Of T), String)
  nameWithType: IEnumerableAssertionExtensions.IsSupersetOf<T>(ICheckCollectionAssertion<IEnumerable<T>>, IEnumerable<T>, string?)
  nameWithType.vb: IEnumerableAssertionExtensions.IsSupersetOf(Of T)(ICheckCollectionAssertion(Of IEnumerable(Of T)), IEnumerable(Of T), String)
- uid: Benday.Common.Testing.IListAssertionExtensions
  name: IListAssertionExtensions
  href: api/Benday.Common.Testing.IListAssertionExtensions.html
  commentId: T:Benday.Common.Testing.IListAssertionExtensions
  fullName: Benday.Common.Testing.IListAssertionExtensions
  nameWithType: IListAssertionExtensions
- uid: Benday.Common.Testing.IListAssertionExtensions.AllItemsAreNotNull*
  name: AllItemsAreNotNull
  href: api/Benday.Common.Testing.IListAssertionExtensions.html#Benday_Common_Testing_IListAssertionExtensions_AllItemsAreNotNull_
  commentId: Overload:Benday.Common.Testing.IListAssertionExtensions.AllItemsAreNotNull
  isSpec: "True"
  fullName: Benday.Common.Testing.IListAssertionExtensions.AllItemsAreNotNull
  nameWithType: IListAssertionExtensions.AllItemsAreNotNull
- uid: Benday.Common.Testing.IListAssertionExtensions.AllItemsAreNotNull``1(Benday.Common.Testing.ICheckCollectionAssertion{System.Collections.Generic.IList{``0}},System.String)
  name: AllItemsAreNotNull<T>(ICheckCollectionAssertion<IList<T?>>, string?)
  href: api/Benday.Common.Testing.IListAssertionExtensions.html#Benday_Common_Testing_IListAssertionExtensions_AllItemsAreNotNull__1_Benday_Common_Testing_ICheckCollectionAssertion_System_Collections_Generic_IList___0___System_String_
  commentId: M:Benday.Common.Testing.IListAssertionExtensions.AllItemsAreNotNull``1(Benday.Common.Testing.ICheckCollectionAssertion{System.Collections.Generic.IList{``0}},System.String)
  name.vb: AllItemsAreNotNull(Of T)(ICheckCollectionAssertion(Of IList(Of T)), String)
  fullName: Benday.Common.Testing.IListAssertionExtensions.AllItemsAreNotNull<T>(Benday.Common.Testing.ICheckCollectionAssertion<System.Collections.Generic.IList<T?>>, string?)
  fullName.vb: Benday.Common.Testing.IListAssertionExtensions.AllItemsAreNotNull(Of T)(Benday.Common.Testing.ICheckCollectionAssertion(Of System.Collections.Generic.IList(Of T)), String)
  nameWithType: IListAssertionExtensions.AllItemsAreNotNull<T>(ICheckCollectionAssertion<IList<T?>>, string?)
  nameWithType.vb: IListAssertionExtensions.AllItemsAreNotNull(Of T)(ICheckCollectionAssertion(Of IList(Of T)), String)
- uid: Benday.Common.Testing.IListAssertionExtensions.AllItemsAreUnique*
  name: AllItemsAreUnique
  href: api/Benday.Common.Testing.IListAssertionExtensions.html#Benday_Common_Testing_IListAssertionExtensions_AllItemsAreUnique_
  commentId: Overload:Benday.Common.Testing.IListAssertionExtensions.AllItemsAreUnique
  isSpec: "True"
  fullName: Benday.Common.Testing.IListAssertionExtensions.AllItemsAreUnique
  nameWithType: IListAssertionExtensions.AllItemsAreUnique
- uid: Benday.Common.Testing.IListAssertionExtensions.AllItemsAreUnique``1(Benday.Common.Testing.ICheckCollectionAssertion{System.Collections.Generic.IList{``0}},System.String)
  name: AllItemsAreUnique<T>(ICheckCollectionAssertion<IList<T>>, string?)
  href: api/Benday.Common.Testing.IListAssertionExtensions.html#Benday_Common_Testing_IListAssertionExtensions_AllItemsAreUnique__1_Benday_Common_Testing_ICheckCollectionAssertion_System_Collections_Generic_IList___0___System_String_
  commentId: M:Benday.Common.Testing.IListAssertionExtensions.AllItemsAreUnique``1(Benday.Common.Testing.ICheckCollectionAssertion{System.Collections.Generic.IList{``0}},System.String)
  name.vb: AllItemsAreUnique(Of T)(ICheckCollectionAssertion(Of IList(Of T)), String)
  fullName: Benday.Common.Testing.IListAssertionExtensions.AllItemsAreUnique<T>(Benday.Common.Testing.ICheckCollectionAssertion<System.Collections.Generic.IList<T>>, string?)
  fullName.vb: Benday.Common.Testing.IListAssertionExtensions.AllItemsAreUnique(Of T)(Benday.Common.Testing.ICheckCollectionAssertion(Of System.Collections.Generic.IList(Of T)), String)
  nameWithType: IListAssertionExtensions.AllItemsAreUnique<T>(ICheckCollectionAssertion<IList<T>>, string?)
  nameWithType.vb: IListAssertionExtensions.AllItemsAreUnique(Of T)(ICheckCollectionAssertion(Of IList(Of T)), String)
- uid: Benday.Common.Testing.IListAssertionExtensions.Contains*
  name: Contains
  href: api/Benday.Common.Testing.IListAssertionExtensions.html#Benday_Common_Testing_IListAssertionExtensions_Contains_
  commentId: Overload:Benday.Common.Testing.IListAssertionExtensions.Contains
  isSpec: "True"
  fullName: Benday.Common.Testing.IListAssertionExtensions.Contains
  nameWithType: IListAssertionExtensions.Contains
- uid: Benday.Common.Testing.IListAssertionExtensions.Contains``1(Benday.Common.Testing.ICheckCollectionAssertion{System.Collections.Generic.IList{``0}},``0,System.String)
  name: Contains<T>(ICheckCollectionAssertion<IList<T>>, T, string?)
  href: api/Benday.Common.Testing.IListAssertionExtensions.html#Benday_Common_Testing_IListAssertionExtensions_Contains__1_Benday_Common_Testing_ICheckCollectionAssertion_System_Collections_Generic_IList___0_____0_System_String_
  commentId: M:Benday.Common.Testing.IListAssertionExtensions.Contains``1(Benday.Common.Testing.ICheckCollectionAssertion{System.Collections.Generic.IList{``0}},``0,System.String)
  name.vb: Contains(Of T)(ICheckCollectionAssertion(Of IList(Of T)), T, String)
  fullName: Benday.Common.Testing.IListAssertionExtensions.Contains<T>(Benday.Common.Testing.ICheckCollectionAssertion<System.Collections.Generic.IList<T>>, T, string?)
  fullName.vb: Benday.Common.Testing.IListAssertionExtensions.Contains(Of T)(Benday.Common.Testing.ICheckCollectionAssertion(Of System.Collections.Generic.IList(Of T)), T, String)
  nameWithType: IListAssertionExtensions.Contains<T>(ICheckCollectionAssertion<IList<T>>, T, string?)
  nameWithType.vb: IListAssertionExtensions.Contains(Of T)(ICheckCollectionAssertion(Of IList(Of T)), T, String)
- uid: Benday.Common.Testing.IListAssertionExtensions.DoesNotContain*
  name: DoesNotContain
  href: api/Benday.Common.Testing.IListAssertionExtensions.html#Benday_Common_Testing_IListAssertionExtensions_DoesNotContain_
  commentId: Overload:Benday.Common.Testing.IListAssertionExtensions.DoesNotContain
  isSpec: "True"
  fullName: Benday.Common.Testing.IListAssertionExtensions.DoesNotContain
  nameWithType: IListAssertionExtensions.DoesNotContain
- uid: Benday.Common.Testing.IListAssertionExtensions.DoesNotContain``1(Benday.Common.Testing.ICheckCollectionAssertion{System.Collections.Generic.IList{``0}},``0,System.String)
  name: DoesNotContain<T>(ICheckCollectionAssertion<IList<T>>, T, string?)
  href: api/Benday.Common.Testing.IListAssertionExtensions.html#Benday_Common_Testing_IListAssertionExtensions_DoesNotContain__1_Benday_Common_Testing_ICheckCollectionAssertion_System_Collections_Generic_IList___0_____0_System_String_
  commentId: M:Benday.Common.Testing.IListAssertionExtensions.DoesNotContain``1(Benday.Common.Testing.ICheckCollectionAssertion{System.Collections.Generic.IList{``0}},``0,System.String)
  name.vb: DoesNotContain(Of T)(ICheckCollectionAssertion(Of IList(Of T)), T, String)
  fullName: Benday.Common.Testing.IListAssertionExtensions.DoesNotContain<T>(Benday.Common.Testing.ICheckCollectionAssertion<System.Collections.Generic.IList<T>>, T, string?)
  fullName.vb: Benday.Common.Testing.IListAssertionExtensions.DoesNotContain(Of T)(Benday.Common.Testing.ICheckCollectionAssertion(Of System.Collections.Generic.IList(Of T)), T, String)
  nameWithType: IListAssertionExtensions.DoesNotContain<T>(ICheckCollectionAssertion<IList<T>>, T, string?)
  nameWithType.vb: IListAssertionExtensions.DoesNotContain(Of T)(ICheckCollectionAssertion(Of IList(Of T)), T, String)
- uid: Benday.Common.Testing.IListAssertionExtensions.IsEqualTo*
  name: IsEqualTo
  href: api/Benday.Common.Testing.IListAssertionExtensions.html#Benday_Common_Testing_IListAssertionExtensions_IsEqualTo_
  commentId: Overload:Benday.Common.Testing.IListAssertionExtensions.IsEqualTo
  isSpec: "True"
  fullName: Benday.Common.Testing.IListAssertionExtensions.IsEqualTo
  nameWithType: IListAssertionExtensions.IsEqualTo
- uid: Benday.Common.Testing.IListAssertionExtensions.IsEqualTo``1(Benday.Common.Testing.ICheckCollectionAssertion{System.Collections.Generic.IList{``0}},System.Collections.Generic.IList{``0},System.String)
  name: IsEqualTo<T>(ICheckCollectionAssertion<IList<T>>, IList<T>, string?)
  href: api/Benday.Common.Testing.IListAssertionExtensions.html#Benday_Common_Testing_IListAssertionExtensions_IsEqualTo__1_Benday_Common_Testing_ICheckCollectionAssertion_System_Collections_Generic_IList___0___System_Collections_Generic_IList___0__System_String_
  commentId: M:Benday.Common.Testing.IListAssertionExtensions.IsEqualTo``1(Benday.Common.Testing.ICheckCollectionAssertion{System.Collections.Generic.IList{``0}},System.Collections.Generic.IList{``0},System.String)
  name.vb: IsEqualTo(Of T)(ICheckCollectionAssertion(Of IList(Of T)), IList(Of T), String)
  fullName: Benday.Common.Testing.IListAssertionExtensions.IsEqualTo<T>(Benday.Common.Testing.ICheckCollectionAssertion<System.Collections.Generic.IList<T>>, System.Collections.Generic.IList<T>, string?)
  fullName.vb: Benday.Common.Testing.IListAssertionExtensions.IsEqualTo(Of T)(Benday.Common.Testing.ICheckCollectionAssertion(Of System.Collections.Generic.IList(Of T)), System.Collections.Generic.IList(Of T), String)
  nameWithType: IListAssertionExtensions.IsEqualTo<T>(ICheckCollectionAssertion<IList<T>>, IList<T>, string?)
  nameWithType.vb: IListAssertionExtensions.IsEqualTo(Of T)(ICheckCollectionAssertion(Of IList(Of T)), IList(Of T), String)
- uid: Benday.Common.Testing.IListAssertionExtensions.IsEquivalentTo*
  name: IsEquivalentTo
  href: api/Benday.Common.Testing.IListAssertionExtensions.html#Benday_Common_Testing_IListAssertionExtensions_IsEquivalentTo_
  commentId: Overload:Benday.Common.Testing.IListAssertionExtensions.IsEquivalentTo
  isSpec: "True"
  fullName: Benday.Common.Testing.IListAssertionExtensions.IsEquivalentTo
  nameWithType: IListAssertionExtensions.IsEquivalentTo
- uid: Benday.Common.Testing.IListAssertionExtensions.IsEquivalentTo``1(Benday.Common.Testing.ICheckCollectionAssertion{System.Collections.Generic.IList{``0}},System.Collections.Generic.IList{``0},System.String)
  name: IsEquivalentTo<T>(ICheckCollectionAssertion<IList<T>>, IList<T>, string?)
  href: api/Benday.Common.Testing.IListAssertionExtensions.html#Benday_Common_Testing_IListAssertionExtensions_IsEquivalentTo__1_Benday_Common_Testing_ICheckCollectionAssertion_System_Collections_Generic_IList___0___System_Collections_Generic_IList___0__System_String_
  commentId: M:Benday.Common.Testing.IListAssertionExtensions.IsEquivalentTo``1(Benday.Common.Testing.ICheckCollectionAssertion{System.Collections.Generic.IList{``0}},System.Collections.Generic.IList{``0},System.String)
  name.vb: IsEquivalentTo(Of T)(ICheckCollectionAssertion(Of IList(Of T)), IList(Of T), String)
  fullName: Benday.Common.Testing.IListAssertionExtensions.IsEquivalentTo<T>(Benday.Common.Testing.ICheckCollectionAssertion<System.Collections.Generic.IList<T>>, System.Collections.Generic.IList<T>, string?)
  fullName.vb: Benday.Common.Testing.IListAssertionExtensions.IsEquivalentTo(Of T)(Benday.Common.Testing.ICheckCollectionAssertion(Of System.Collections.Generic.IList(Of T)), System.Collections.Generic.IList(Of T), String)
  nameWithType: IListAssertionExtensions.IsEquivalentTo<T>(ICheckCollectionAssertion<IList<T>>, IList<T>, string?)
  nameWithType.vb: IListAssertionExtensions.IsEquivalentTo(Of T)(ICheckCollectionAssertion(Of IList(Of T)), IList(Of T), String)
- uid: Benday.Common.Testing.IListAssertionExtensions.IsNotEqualTo*
  name: IsNotEqualTo
  href: api/Benday.Common.Testing.IListAssertionExtensions.html#Benday_Common_Testing_IListAssertionExtensions_IsNotEqualTo_
  commentId: Overload:Benday.Common.Testing.IListAssertionExtensions.IsNotEqualTo
  isSpec: "True"
  fullName: Benday.Common.Testing.IListAssertionExtensions.IsNotEqualTo
  nameWithType: IListAssertionExtensions.IsNotEqualTo
- uid: Benday.Common.Testing.IListAssertionExtensions.IsNotEqualTo``1(Benday.Common.Testing.ICheckCollectionAssertion{System.Collections.Generic.IList{``0}},System.Collections.Generic.IList{``0},System.String)
  name: IsNotEqualTo<T>(ICheckCollectionAssertion<IList<T>>, IList<T>, string?)
  href: api/Benday.Common.Testing.IListAssertionExtensions.html#Benday_Common_Testing_IListAssertionExtensions_IsNotEqualTo__1_Benday_Common_Testing_ICheckCollectionAssertion_System_Collections_Generic_IList___0___System_Collections_Generic_IList___0__System_String_
  commentId: M:Benday.Common.Testing.IListAssertionExtensions.IsNotEqualTo``1(Benday.Common.Testing.ICheckCollectionAssertion{System.Collections.Generic.IList{``0}},System.Collections.Generic.IList{``0},System.String)
  name.vb: IsNotEqualTo(Of T)(ICheckCollectionAssertion(Of IList(Of T)), IList(Of T), String)
  fullName: Benday.Common.Testing.IListAssertionExtensions.IsNotEqualTo<T>(Benday.Common.Testing.ICheckCollectionAssertion<System.Collections.Generic.IList<T>>, System.Collections.Generic.IList<T>, string?)
  fullName.vb: Benday.Common.Testing.IListAssertionExtensions.IsNotEqualTo(Of T)(Benday.Common.Testing.ICheckCollectionAssertion(Of System.Collections.Generic.IList(Of T)), System.Collections.Generic.IList(Of T), String)
  nameWithType: IListAssertionExtensions.IsNotEqualTo<T>(ICheckCollectionAssertion<IList<T>>, IList<T>, string?)
  nameWithType.vb: IListAssertionExtensions.IsNotEqualTo(Of T)(ICheckCollectionAssertion(Of IList(Of T)), IList(Of T), String)
- uid: Benday.Common.Testing.IListAssertionExtensions.IsNotEquivalentTo*
  name: IsNotEquivalentTo
  href: api/Benday.Common.Testing.IListAssertionExtensions.html#Benday_Common_Testing_IListAssertionExtensions_IsNotEquivalentTo_
  commentId: Overload:Benday.Common.Testing.IListAssertionExtensions.IsNotEquivalentTo
  isSpec: "True"
  fullName: Benday.Common.Testing.IListAssertionExtensions.IsNotEquivalentTo
  nameWithType: IListAssertionExtensions.IsNotEquivalentTo
- uid: Benday.Common.Testing.IListAssertionExtensions.IsNotEquivalentTo``1(Benday.Common.Testing.ICheckCollectionAssertion{System.Collections.Generic.IList{``0}},System.Collections.Generic.IList{``0},System.String)
  name: IsNotEquivalentTo<T>(ICheckCollectionAssertion<IList<T>>, IList<T>, string?)
  href: api/Benday.Common.Testing.IListAssertionExtensions.html#Benday_Common_Testing_IListAssertionExtensions_IsNotEquivalentTo__1_Benday_Common_Testing_ICheckCollectionAssertion_System_Collections_Generic_IList___0___System_Collections_Generic_IList___0__System_String_
  commentId: M:Benday.Common.Testing.IListAssertionExtensions.IsNotEquivalentTo``1(Benday.Common.Testing.ICheckCollectionAssertion{System.Collections.Generic.IList{``0}},System.Collections.Generic.IList{``0},System.String)
  name.vb: IsNotEquivalentTo(Of T)(ICheckCollectionAssertion(Of IList(Of T)), IList(Of T), String)
  fullName: Benday.Common.Testing.IListAssertionExtensions.IsNotEquivalentTo<T>(Benday.Common.Testing.ICheckCollectionAssertion<System.Collections.Generic.IList<T>>, System.Collections.Generic.IList<T>, string?)
  fullName.vb: Benday.Common.Testing.IListAssertionExtensions.IsNotEquivalentTo(Of T)(Benday.Common.Testing.ICheckCollectionAssertion(Of System.Collections.Generic.IList(Of T)), System.Collections.Generic.IList(Of T), String)
  nameWithType: IListAssertionExtensions.IsNotEquivalentTo<T>(ICheckCollectionAssertion<IList<T>>, IList<T>, string?)
  nameWithType.vb: IListAssertionExtensions.IsNotEquivalentTo(Of T)(ICheckCollectionAssertion(Of IList(Of T)), IList(Of T), String)
- uid: Benday.Common.Testing.IListAssertionExtensions.IsSubsetOf*
  name: IsSubsetOf
  href: api/Benday.Common.Testing.IListAssertionExtensions.html#Benday_Common_Testing_IListAssertionExtensions_IsSubsetOf_
  commentId: Overload:Benday.Common.Testing.IListAssertionExtensions.IsSubsetOf
  isSpec: "True"
  fullName: Benday.Common.Testing.IListAssertionExtensions.IsSubsetOf
  nameWithType: IListAssertionExtensions.IsSubsetOf
- uid: Benday.Common.Testing.IListAssertionExtensions.IsSubsetOf``1(Benday.Common.Testing.ICheckCollectionAssertion{System.Collections.Generic.IList{``0}},System.Collections.Generic.IList{``0},System.String)
  name: IsSubsetOf<T>(ICheckCollectionAssertion<IList<T>>, IList<T>, string?)
  href: api/Benday.Common.Testing.IListAssertionExtensions.html#Benday_Common_Testing_IListAssertionExtensions_IsSubsetOf__1_Benday_Common_Testing_ICheckCollectionAssertion_System_Collections_Generic_IList___0___System_Collections_Generic_IList___0__System_String_
  commentId: M:Benday.Common.Testing.IListAssertionExtensions.IsSubsetOf``1(Benday.Common.Testing.ICheckCollectionAssertion{System.Collections.Generic.IList{``0}},System.Collections.Generic.IList{``0},System.String)
  name.vb: IsSubsetOf(Of T)(ICheckCollectionAssertion(Of IList(Of T)), IList(Of T), String)
  fullName: Benday.Common.Testing.IListAssertionExtensions.IsSubsetOf<T>(Benday.Common.Testing.ICheckCollectionAssertion<System.Collections.Generic.IList<T>>, System.Collections.Generic.IList<T>, string?)
  fullName.vb: Benday.Common.Testing.IListAssertionExtensions.IsSubsetOf(Of T)(Benday.Common.Testing.ICheckCollectionAssertion(Of System.Collections.Generic.IList(Of T)), System.Collections.Generic.IList(Of T), String)
  nameWithType: IListAssertionExtensions.IsSubsetOf<T>(ICheckCollectionAssertion<IList<T>>, IList<T>, string?)
  nameWithType.vb: IListAssertionExtensions.IsSubsetOf(Of T)(ICheckCollectionAssertion(Of IList(Of T)), IList(Of T), String)
- uid: Benday.Common.Testing.IListAssertionExtensions.IsSupersetOf*
  name: IsSupersetOf
  href: api/Benday.Common.Testing.IListAssertionExtensions.html#Benday_Common_Testing_IListAssertionExtensions_IsSupersetOf_
  commentId: Overload:Benday.Common.Testing.IListAssertionExtensions.IsSupersetOf
  isSpec: "True"
  fullName: Benday.Common.Testing.IListAssertionExtensions.IsSupersetOf
  nameWithType: IListAssertionExtensions.IsSupersetOf
- uid: Benday.Common.Testing.IListAssertionExtensions.IsSupersetOf``1(Benday.Common.Testing.ICheckCollectionAssertion{System.Collections.Generic.IList{``0}},System.Collections.Generic.IList{``0},System.String)
  name: IsSupersetOf<T>(ICheckCollectionAssertion<IList<T>>, IList<T>, string?)
  href: api/Benday.Common.Testing.IListAssertionExtensions.html#Benday_Common_Testing_IListAssertionExtensions_IsSupersetOf__1_Benday_Common_Testing_ICheckCollectionAssertion_System_Collections_Generic_IList___0___System_Collections_Generic_IList___0__System_String_
  commentId: M:Benday.Common.Testing.IListAssertionExtensions.IsSupersetOf``1(Benday.Common.Testing.ICheckCollectionAssertion{System.Collections.Generic.IList{``0}},System.Collections.Generic.IList{``0},System.String)
  name.vb: IsSupersetOf(Of T)(ICheckCollectionAssertion(Of IList(Of T)), IList(Of T), String)
  fullName: Benday.Common.Testing.IListAssertionExtensions.IsSupersetOf<T>(Benday.Common.Testing.ICheckCollectionAssertion<System.Collections.Generic.IList<T>>, System.Collections.Generic.IList<T>, string?)
  fullName.vb: Benday.Common.Testing.IListAssertionExtensions.IsSupersetOf(Of T)(Benday.Common.Testing.ICheckCollectionAssertion(Of System.Collections.Generic.IList(Of T)), System.Collections.Generic.IList(Of T), String)
  nameWithType: IListAssertionExtensions.IsSupersetOf<T>(ICheckCollectionAssertion<IList<T>>, IList<T>, string?)
  nameWithType.vb: IListAssertionExtensions.IsSupersetOf(Of T)(ICheckCollectionAssertion(Of IList(Of T)), IList(Of T), String)
- uid: Benday.Common.Testing.ListAssertionExtensions
  name: ListAssertionExtensions
  href: api/Benday.Common.Testing.ListAssertionExtensions.html
  commentId: T:Benday.Common.Testing.ListAssertionExtensions
  fullName: Benday.Common.Testing.ListAssertionExtensions
  nameWithType: ListAssertionExtensions
- uid: Benday.Common.Testing.ListAssertionExtensions.AllItemsAreNotNull*
  name: AllItemsAreNotNull
  href: api/Benday.Common.Testing.ListAssertionExtensions.html#Benday_Common_Testing_ListAssertionExtensions_AllItemsAreNotNull_
  commentId: Overload:Benday.Common.Testing.ListAssertionExtensions.AllItemsAreNotNull
  isSpec: "True"
  fullName: Benday.Common.Testing.ListAssertionExtensions.AllItemsAreNotNull
  nameWithType: ListAssertionExtensions.AllItemsAreNotNull
- uid: Benday.Common.Testing.ListAssertionExtensions.AllItemsAreNotNull``1(Benday.Common.Testing.ICheckCollectionAssertion{System.Collections.Generic.List{``0}},System.String)
  name: AllItemsAreNotNull<T>(ICheckCollectionAssertion<List<T?>>, string?)
  href: api/Benday.Common.Testing.ListAssertionExtensions.html#Benday_Common_Testing_ListAssertionExtensions_AllItemsAreNotNull__1_Benday_Common_Testing_ICheckCollectionAssertion_System_Collections_Generic_List___0___System_String_
  commentId: M:Benday.Common.Testing.ListAssertionExtensions.AllItemsAreNotNull``1(Benday.Common.Testing.ICheckCollectionAssertion{System.Collections.Generic.List{``0}},System.String)
  name.vb: AllItemsAreNotNull(Of T)(ICheckCollectionAssertion(Of List(Of T)), String)
  fullName: Benday.Common.Testing.ListAssertionExtensions.AllItemsAreNotNull<T>(Benday.Common.Testing.ICheckCollectionAssertion<System.Collections.Generic.List<T?>>, string?)
  fullName.vb: Benday.Common.Testing.ListAssertionExtensions.AllItemsAreNotNull(Of T)(Benday.Common.Testing.ICheckCollectionAssertion(Of System.Collections.Generic.List(Of T)), String)
  nameWithType: ListAssertionExtensions.AllItemsAreNotNull<T>(ICheckCollectionAssertion<List<T?>>, string?)
  nameWithType.vb: ListAssertionExtensions.AllItemsAreNotNull(Of T)(ICheckCollectionAssertion(Of List(Of T)), String)
- uid: Benday.Common.Testing.ListAssertionExtensions.AllItemsAreUnique*
  name: AllItemsAreUnique
  href: api/Benday.Common.Testing.ListAssertionExtensions.html#Benday_Common_Testing_ListAssertionExtensions_AllItemsAreUnique_
  commentId: Overload:Benday.Common.Testing.ListAssertionExtensions.AllItemsAreUnique
  isSpec: "True"
  fullName: Benday.Common.Testing.ListAssertionExtensions.AllItemsAreUnique
  nameWithType: ListAssertionExtensions.AllItemsAreUnique
- uid: Benday.Common.Testing.ListAssertionExtensions.AllItemsAreUnique``1(Benday.Common.Testing.ICheckCollectionAssertion{System.Collections.Generic.List{``0}},System.String)
  name: AllItemsAreUnique<T>(ICheckCollectionAssertion<List<T>>, string?)
  href: api/Benday.Common.Testing.ListAssertionExtensions.html#Benday_Common_Testing_ListAssertionExtensions_AllItemsAreUnique__1_Benday_Common_Testing_ICheckCollectionAssertion_System_Collections_Generic_List___0___System_String_
  commentId: M:Benday.Common.Testing.ListAssertionExtensions.AllItemsAreUnique``1(Benday.Common.Testing.ICheckCollectionAssertion{System.Collections.Generic.List{``0}},System.String)
  name.vb: AllItemsAreUnique(Of T)(ICheckCollectionAssertion(Of List(Of T)), String)
  fullName: Benday.Common.Testing.ListAssertionExtensions.AllItemsAreUnique<T>(Benday.Common.Testing.ICheckCollectionAssertion<System.Collections.Generic.List<T>>, string?)
  fullName.vb: Benday.Common.Testing.ListAssertionExtensions.AllItemsAreUnique(Of T)(Benday.Common.Testing.ICheckCollectionAssertion(Of System.Collections.Generic.List(Of T)), String)
  nameWithType: ListAssertionExtensions.AllItemsAreUnique<T>(ICheckCollectionAssertion<List<T>>, string?)
  nameWithType.vb: ListAssertionExtensions.AllItemsAreUnique(Of T)(ICheckCollectionAssertion(Of List(Of T)), String)
- uid: Benday.Common.Testing.ListAssertionExtensions.Contains*
  name: Contains
  href: api/Benday.Common.Testing.ListAssertionExtensions.html#Benday_Common_Testing_ListAssertionExtensions_Contains_
  commentId: Overload:Benday.Common.Testing.ListAssertionExtensions.Contains
  isSpec: "True"
  fullName: Benday.Common.Testing.ListAssertionExtensions.Contains
  nameWithType: ListAssertionExtensions.Contains
- uid: Benday.Common.Testing.ListAssertionExtensions.Contains``1(Benday.Common.Testing.ICheckCollectionAssertion{System.Collections.Generic.List{``0}},``0,System.String)
  name: Contains<T>(ICheckCollectionAssertion<List<T>>, T, string?)
  href: api/Benday.Common.Testing.ListAssertionExtensions.html#Benday_Common_Testing_ListAssertionExtensions_Contains__1_Benday_Common_Testing_ICheckCollectionAssertion_System_Collections_Generic_List___0_____0_System_String_
  commentId: M:Benday.Common.Testing.ListAssertionExtensions.Contains``1(Benday.Common.Testing.ICheckCollectionAssertion{System.Collections.Generic.List{``0}},``0,System.String)
  name.vb: Contains(Of T)(ICheckCollectionAssertion(Of List(Of T)), T, String)
  fullName: Benday.Common.Testing.ListAssertionExtensions.Contains<T>(Benday.Common.Testing.ICheckCollectionAssertion<System.Collections.Generic.List<T>>, T, string?)
  fullName.vb: Benday.Common.Testing.ListAssertionExtensions.Contains(Of T)(Benday.Common.Testing.ICheckCollectionAssertion(Of System.Collections.Generic.List(Of T)), T, String)
  nameWithType: ListAssertionExtensions.Contains<T>(ICheckCollectionAssertion<List<T>>, T, string?)
  nameWithType.vb: ListAssertionExtensions.Contains(Of T)(ICheckCollectionAssertion(Of List(Of T)), T, String)
- uid: Benday.Common.Testing.ListAssertionExtensions.DoesNotContain*
  name: DoesNotContain
  href: api/Benday.Common.Testing.ListAssertionExtensions.html#Benday_Common_Testing_ListAssertionExtensions_DoesNotContain_
  commentId: Overload:Benday.Common.Testing.ListAssertionExtensions.DoesNotContain
  isSpec: "True"
  fullName: Benday.Common.Testing.ListAssertionExtensions.DoesNotContain
  nameWithType: ListAssertionExtensions.DoesNotContain
- uid: Benday.Common.Testing.ListAssertionExtensions.DoesNotContain``1(Benday.Common.Testing.ICheckCollectionAssertion{System.Collections.Generic.List{``0}},``0,System.String)
  name: DoesNotContain<T>(ICheckCollectionAssertion<List<T>>, T, string?)
  href: api/Benday.Common.Testing.ListAssertionExtensions.html#Benday_Common_Testing_ListAssertionExtensions_DoesNotContain__1_Benday_Common_Testing_ICheckCollectionAssertion_System_Collections_Generic_List___0_____0_System_String_
  commentId: M:Benday.Common.Testing.ListAssertionExtensions.DoesNotContain``1(Benday.Common.Testing.ICheckCollectionAssertion{System.Collections.Generic.List{``0}},``0,System.String)
  name.vb: DoesNotContain(Of T)(ICheckCollectionAssertion(Of List(Of T)), T, String)
  fullName: Benday.Common.Testing.ListAssertionExtensions.DoesNotContain<T>(Benday.Common.Testing.ICheckCollectionAssertion<System.Collections.Generic.List<T>>, T, string?)
  fullName.vb: Benday.Common.Testing.ListAssertionExtensions.DoesNotContain(Of T)(Benday.Common.Testing.ICheckCollectionAssertion(Of System.Collections.Generic.List(Of T)), T, String)
  nameWithType: ListAssertionExtensions.DoesNotContain<T>(ICheckCollectionAssertion<List<T>>, T, string?)
  nameWithType.vb: ListAssertionExtensions.DoesNotContain(Of T)(ICheckCollectionAssertion(Of List(Of T)), T, String)
- uid: Benday.Common.Testing.ListAssertionExtensions.IsEqualTo*
  name: IsEqualTo
  href: api/Benday.Common.Testing.ListAssertionExtensions.html#Benday_Common_Testing_ListAssertionExtensions_IsEqualTo_
  commentId: Overload:Benday.Common.Testing.ListAssertionExtensions.IsEqualTo
  isSpec: "True"
  fullName: Benday.Common.Testing.ListAssertionExtensions.IsEqualTo
  nameWithType: ListAssertionExtensions.IsEqualTo
- uid: Benday.Common.Testing.ListAssertionExtensions.IsEqualTo``1(Benday.Common.Testing.ICheckCollectionAssertion{System.Collections.Generic.List{``0}},System.Collections.Generic.List{``0},System.String)
  name: IsEqualTo<T>(ICheckCollectionAssertion<List<T>>, List<T>, string?)
  href: api/Benday.Common.Testing.ListAssertionExtensions.html#Benday_Common_Testing_ListAssertionExtensions_IsEqualTo__1_Benday_Common_Testing_ICheckCollectionAssertion_System_Collections_Generic_List___0___System_Collections_Generic_List___0__System_String_
  commentId: M:Benday.Common.Testing.ListAssertionExtensions.IsEqualTo``1(Benday.Common.Testing.ICheckCollectionAssertion{System.Collections.Generic.List{``0}},System.Collections.Generic.List{``0},System.String)
  name.vb: IsEqualTo(Of T)(ICheckCollectionAssertion(Of List(Of T)), List(Of T), String)
  fullName: Benday.Common.Testing.ListAssertionExtensions.IsEqualTo<T>(Benday.Common.Testing.ICheckCollectionAssertion<System.Collections.Generic.List<T>>, System.Collections.Generic.List<T>, string?)
  fullName.vb: Benday.Common.Testing.ListAssertionExtensions.IsEqualTo(Of T)(Benday.Common.Testing.ICheckCollectionAssertion(Of System.Collections.Generic.List(Of T)), System.Collections.Generic.List(Of T), String)
  nameWithType: ListAssertionExtensions.IsEqualTo<T>(ICheckCollectionAssertion<List<T>>, List<T>, string?)
  nameWithType.vb: ListAssertionExtensions.IsEqualTo(Of T)(ICheckCollectionAssertion(Of List(Of T)), List(Of T), String)
- uid: Benday.Common.Testing.ListAssertionExtensions.IsEquivalentTo*
  name: IsEquivalentTo
  href: api/Benday.Common.Testing.ListAssertionExtensions.html#Benday_Common_Testing_ListAssertionExtensions_IsEquivalentTo_
  commentId: Overload:Benday.Common.Testing.ListAssertionExtensions.IsEquivalentTo
  isSpec: "True"
  fullName: Benday.Common.Testing.ListAssertionExtensions.IsEquivalentTo
  nameWithType: ListAssertionExtensions.IsEquivalentTo
- uid: Benday.Common.Testing.ListAssertionExtensions.IsEquivalentTo``1(Benday.Common.Testing.ICheckCollectionAssertion{System.Collections.Generic.List{``0}},System.Collections.Generic.List{``0},System.String)
  name: IsEquivalentTo<T>(ICheckCollectionAssertion<List<T>>, List<T>, string?)
  href: api/Benday.Common.Testing.ListAssertionExtensions.html#Benday_Common_Testing_ListAssertionExtensions_IsEquivalentTo__1_Benday_Common_Testing_ICheckCollectionAssertion_System_Collections_Generic_List___0___System_Collections_Generic_List___0__System_String_
  commentId: M:Benday.Common.Testing.ListAssertionExtensions.IsEquivalentTo``1(Benday.Common.Testing.ICheckCollectionAssertion{System.Collections.Generic.List{``0}},System.Collections.Generic.List{``0},System.String)
  name.vb: IsEquivalentTo(Of T)(ICheckCollectionAssertion(Of List(Of T)), List(Of T), String)
  fullName: Benday.Common.Testing.ListAssertionExtensions.IsEquivalentTo<T>(Benday.Common.Testing.ICheckCollectionAssertion<System.Collections.Generic.List<T>>, System.Collections.Generic.List<T>, string?)
  fullName.vb: Benday.Common.Testing.ListAssertionExtensions.IsEquivalentTo(Of T)(Benday.Common.Testing.ICheckCollectionAssertion(Of System.Collections.Generic.List(Of T)), System.Collections.Generic.List(Of T), String)
  nameWithType: ListAssertionExtensions.IsEquivalentTo<T>(ICheckCollectionAssertion<List<T>>, List<T>, string?)
  nameWithType.vb: ListAssertionExtensions.IsEquivalentTo(Of T)(ICheckCollectionAssertion(Of List(Of T)), List(Of T), String)
- uid: Benday.Common.Testing.ListAssertionExtensions.IsNotEqualTo*
  name: IsNotEqualTo
  href: api/Benday.Common.Testing.ListAssertionExtensions.html#Benday_Common_Testing_ListAssertionExtensions_IsNotEqualTo_
  commentId: Overload:Benday.Common.Testing.ListAssertionExtensions.IsNotEqualTo
  isSpec: "True"
  fullName: Benday.Common.Testing.ListAssertionExtensions.IsNotEqualTo
  nameWithType: ListAssertionExtensions.IsNotEqualTo
- uid: Benday.Common.Testing.ListAssertionExtensions.IsNotEqualTo``1(Benday.Common.Testing.ICheckCollectionAssertion{System.Collections.Generic.List{``0}},System.Collections.Generic.List{``0},System.String)
  name: IsNotEqualTo<T>(ICheckCollectionAssertion<List<T>>, List<T>, string?)
  href: api/Benday.Common.Testing.ListAssertionExtensions.html#Benday_Common_Testing_ListAssertionExtensions_IsNotEqualTo__1_Benday_Common_Testing_ICheckCollectionAssertion_System_Collections_Generic_List___0___System_Collections_Generic_List___0__System_String_
  commentId: M:Benday.Common.Testing.ListAssertionExtensions.IsNotEqualTo``1(Benday.Common.Testing.ICheckCollectionAssertion{System.Collections.Generic.List{``0}},System.Collections.Generic.List{``0},System.String)
  name.vb: IsNotEqualTo(Of T)(ICheckCollectionAssertion(Of List(Of T)), List(Of T), String)
  fullName: Benday.Common.Testing.ListAssertionExtensions.IsNotEqualTo<T>(Benday.Common.Testing.ICheckCollectionAssertion<System.Collections.Generic.List<T>>, System.Collections.Generic.List<T>, string?)
  fullName.vb: Benday.Common.Testing.ListAssertionExtensions.IsNotEqualTo(Of T)(Benday.Common.Testing.ICheckCollectionAssertion(Of System.Collections.Generic.List(Of T)), System.Collections.Generic.List(Of T), String)
  nameWithType: ListAssertionExtensions.IsNotEqualTo<T>(ICheckCollectionAssertion<List<T>>, List<T>, string?)
  nameWithType.vb: ListAssertionExtensions.IsNotEqualTo(Of T)(ICheckCollectionAssertion(Of List(Of T)), List(Of T), String)
- uid: Benday.Common.Testing.ListAssertionExtensions.IsNotEquivalentTo*
  name: IsNotEquivalentTo
  href: api/Benday.Common.Testing.ListAssertionExtensions.html#Benday_Common_Testing_ListAssertionExtensions_IsNotEquivalentTo_
  commentId: Overload:Benday.Common.Testing.ListAssertionExtensions.IsNotEquivalentTo
  isSpec: "True"
  fullName: Benday.Common.Testing.ListAssertionExtensions.IsNotEquivalentTo
  nameWithType: ListAssertionExtensions.IsNotEquivalentTo
- uid: Benday.Common.Testing.ListAssertionExtensions.IsNotEquivalentTo``1(Benday.Common.Testing.ICheckCollectionAssertion{System.Collections.Generic.List{``0}},System.Collections.Generic.List{``0},System.String)
  name: IsNotEquivalentTo<T>(ICheckCollectionAssertion<List<T>>, List<T>, string?)
  href: api/Benday.Common.Testing.ListAssertionExtensions.html#Benday_Common_Testing_ListAssertionExtensions_IsNotEquivalentTo__1_Benday_Common_Testing_ICheckCollectionAssertion_System_Collections_Generic_List___0___System_Collections_Generic_List___0__System_String_
  commentId: M:Benday.Common.Testing.ListAssertionExtensions.IsNotEquivalentTo``1(Benday.Common.Testing.ICheckCollectionAssertion{System.Collections.Generic.List{``0}},System.Collections.Generic.List{``0},System.String)
  name.vb: IsNotEquivalentTo(Of T)(ICheckCollectionAssertion(Of List(Of T)), List(Of T), String)
  fullName: Benday.Common.Testing.ListAssertionExtensions.IsNotEquivalentTo<T>(Benday.Common.Testing.ICheckCollectionAssertion<System.Collections.Generic.List<T>>, System.Collections.Generic.List<T>, string?)
  fullName.vb: Benday.Common.Testing.ListAssertionExtensions.IsNotEquivalentTo(Of T)(Benday.Common.Testing.ICheckCollectionAssertion(Of System.Collections.Generic.List(Of T)), System.Collections.Generic.List(Of T), String)
  nameWithType: ListAssertionExtensions.IsNotEquivalentTo<T>(ICheckCollectionAssertion<List<T>>, List<T>, string?)
  nameWithType.vb: ListAssertionExtensions.IsNotEquivalentTo(Of T)(ICheckCollectionAssertion(Of List(Of T)), List(Of T), String)
- uid: Benday.Common.Testing.ListAssertionExtensions.IsSubsetOf*
  name: IsSubsetOf
  href: api/Benday.Common.Testing.ListAssertionExtensions.html#Benday_Common_Testing_ListAssertionExtensions_IsSubsetOf_
  commentId: Overload:Benday.Common.Testing.ListAssertionExtensions.IsSubsetOf
  isSpec: "True"
  fullName: Benday.Common.Testing.ListAssertionExtensions.IsSubsetOf
  nameWithType: ListAssertionExtensions.IsSubsetOf
- uid: Benday.Common.Testing.ListAssertionExtensions.IsSubsetOf``1(Benday.Common.Testing.ICheckCollectionAssertion{System.Collections.Generic.List{``0}},System.Collections.Generic.List{``0},System.String)
  name: IsSubsetOf<T>(ICheckCollectionAssertion<List<T>>, List<T>, string?)
  href: api/Benday.Common.Testing.ListAssertionExtensions.html#Benday_Common_Testing_ListAssertionExtensions_IsSubsetOf__1_Benday_Common_Testing_ICheckCollectionAssertion_System_Collections_Generic_List___0___System_Collections_Generic_List___0__System_String_
  commentId: M:Benday.Common.Testing.ListAssertionExtensions.IsSubsetOf``1(Benday.Common.Testing.ICheckCollectionAssertion{System.Collections.Generic.List{``0}},System.Collections.Generic.List{``0},System.String)
  name.vb: IsSubsetOf(Of T)(ICheckCollectionAssertion(Of List(Of T)), List(Of T), String)
  fullName: Benday.Common.Testing.ListAssertionExtensions.IsSubsetOf<T>(Benday.Common.Testing.ICheckCollectionAssertion<System.Collections.Generic.List<T>>, System.Collections.Generic.List<T>, string?)
  fullName.vb: Benday.Common.Testing.ListAssertionExtensions.IsSubsetOf(Of T)(Benday.Common.Testing.ICheckCollectionAssertion(Of System.Collections.Generic.List(Of T)), System.Collections.Generic.List(Of T), String)
  nameWithType: ListAssertionExtensions.IsSubsetOf<T>(ICheckCollectionAssertion<List<T>>, List<T>, string?)
  nameWithType.vb: ListAssertionExtensions.IsSubsetOf(Of T)(ICheckCollectionAssertion(Of List(Of T)), List(Of T), String)
- uid: Benday.Common.Testing.ListAssertionExtensions.IsSupersetOf*
  name: IsSupersetOf
  href: api/Benday.Common.Testing.ListAssertionExtensions.html#Benday_Common_Testing_ListAssertionExtensions_IsSupersetOf_
  commentId: Overload:Benday.Common.Testing.ListAssertionExtensions.IsSupersetOf
  isSpec: "True"
  fullName: Benday.Common.Testing.ListAssertionExtensions.IsSupersetOf
  nameWithType: ListAssertionExtensions.IsSupersetOf
- uid: Benday.Common.Testing.ListAssertionExtensions.IsSupersetOf``1(Benday.Common.Testing.ICheckCollectionAssertion{System.Collections.Generic.List{``0}},System.Collections.Generic.List{``0},System.String)
  name: IsSupersetOf<T>(ICheckCollectionAssertion<List<T>>, List<T>, string?)
  href: api/Benday.Common.Testing.ListAssertionExtensions.html#Benday_Common_Testing_ListAssertionExtensions_IsSupersetOf__1_Benday_Common_Testing_ICheckCollectionAssertion_System_Collections_Generic_List___0___System_Collections_Generic_List___0__System_String_
  commentId: M:Benday.Common.Testing.ListAssertionExtensions.IsSupersetOf``1(Benday.Common.Testing.ICheckCollectionAssertion{System.Collections.Generic.List{``0}},System.Collections.Generic.List{``0},System.String)
  name.vb: IsSupersetOf(Of T)(ICheckCollectionAssertion(Of List(Of T)), List(Of T), String)
  fullName: Benday.Common.Testing.ListAssertionExtensions.IsSupersetOf<T>(Benday.Common.Testing.ICheckCollectionAssertion<System.Collections.Generic.List<T>>, System.Collections.Generic.List<T>, string?)
  fullName.vb: Benday.Common.Testing.ListAssertionExtensions.IsSupersetOf(Of T)(Benday.Common.Testing.ICheckCollectionAssertion(Of System.Collections.Generic.List(Of T)), System.Collections.Generic.List(Of T), String)
  nameWithType: ListAssertionExtensions.IsSupersetOf<T>(ICheckCollectionAssertion<List<T>>, List<T>, string?)
  nameWithType.vb: ListAssertionExtensions.IsSupersetOf(Of T)(ICheckCollectionAssertion(Of List(Of T)), List(Of T), String)
- uid: Benday.Common.Testing.MockCreationResult`1
  name: MockCreationResult<T>
  href: api/Benday.Common.Testing.MockCreationResult-1.html
  commentId: T:Benday.Common.Testing.MockCreationResult`1
  name.vb: MockCreationResult(Of T)
  fullName: Benday.Common.Testing.MockCreationResult<T>
  fullName.vb: Benday.Common.Testing.MockCreationResult(Of T)
  nameWithType: MockCreationResult<T>
  nameWithType.vb: MockCreationResult(Of T)
- uid: Benday.Common.Testing.MockCreationResult`1.#ctor(System.Reflection.ConstructorInfo,System.Object[],System.Collections.Generic.Dictionary{System.Type,Moq.Mock})
  name: MockCreationResult(ConstructorInfo, object[]?, Dictionary<Type, Mock>)
  href: api/Benday.Common.Testing.MockCreationResult-1.html#Benday_Common_Testing_MockCreationResult_1__ctor_System_Reflection_ConstructorInfo_System_Object___System_Collections_Generic_Dictionary_System_Type_Moq_Mock__
  commentId: M:Benday.Common.Testing.MockCreationResult`1.#ctor(System.Reflection.ConstructorInfo,System.Object[],System.Collections.Generic.Dictionary{System.Type,Moq.Mock})
  name.vb: New(ConstructorInfo, Object(), Dictionary(Of Type, Mock))
  fullName: Benday.Common.Testing.MockCreationResult<T>.MockCreationResult(System.Reflection.ConstructorInfo, object[]?, System.Collections.Generic.Dictionary<System.Type, Moq.Mock>)
  fullName.vb: Benday.Common.Testing.MockCreationResult(Of T).New(System.Reflection.ConstructorInfo, Object(), System.Collections.Generic.Dictionary(Of System.Type, Moq.Mock))
  nameWithType: MockCreationResult<T>.MockCreationResult(ConstructorInfo, object[]?, Dictionary<Type, Mock>)
  nameWithType.vb: MockCreationResult(Of T).New(ConstructorInfo, Object(), Dictionary(Of Type, Mock))
- uid: Benday.Common.Testing.MockCreationResult`1.#ctor*
  name: MockCreationResult
  href: api/Benday.Common.Testing.MockCreationResult-1.html#Benday_Common_Testing_MockCreationResult_1__ctor_
  commentId: Overload:Benday.Common.Testing.MockCreationResult`1.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Benday.Common.Testing.MockCreationResult<T>.MockCreationResult
  fullName.vb: Benday.Common.Testing.MockCreationResult(Of T).New
  nameWithType: MockCreationResult<T>.MockCreationResult
  nameWithType.vb: MockCreationResult(Of T).New
- uid: Benday.Common.Testing.MockCreationResult`1.ConstructorArguments
  name: ConstructorArguments
  href: api/Benday.Common.Testing.MockCreationResult-1.html#Benday_Common_Testing_MockCreationResult_1_ConstructorArguments
  commentId: P:Benday.Common.Testing.MockCreationResult`1.ConstructorArguments
  fullName: Benday.Common.Testing.MockCreationResult<T>.ConstructorArguments
  fullName.vb: Benday.Common.Testing.MockCreationResult(Of T).ConstructorArguments
  nameWithType: MockCreationResult<T>.ConstructorArguments
  nameWithType.vb: MockCreationResult(Of T).ConstructorArguments
- uid: Benday.Common.Testing.MockCreationResult`1.ConstructorArguments*
  name: ConstructorArguments
  href: api/Benday.Common.Testing.MockCreationResult-1.html#Benday_Common_Testing_MockCreationResult_1_ConstructorArguments_
  commentId: Overload:Benday.Common.Testing.MockCreationResult`1.ConstructorArguments
  isSpec: "True"
  fullName: Benday.Common.Testing.MockCreationResult<T>.ConstructorArguments
  fullName.vb: Benday.Common.Testing.MockCreationResult(Of T).ConstructorArguments
  nameWithType: MockCreationResult<T>.ConstructorArguments
  nameWithType.vb: MockCreationResult(Of T).ConstructorArguments
- uid: Benday.Common.Testing.MockCreationResult`1.GetMock*
  name: GetMock
  href: api/Benday.Common.Testing.MockCreationResult-1.html#Benday_Common_Testing_MockCreationResult_1_GetMock_
  commentId: Overload:Benday.Common.Testing.MockCreationResult`1.GetMock
  isSpec: "True"
  fullName: Benday.Common.Testing.MockCreationResult<T>.GetMock
  fullName.vb: Benday.Common.Testing.MockCreationResult(Of T).GetMock
  nameWithType: MockCreationResult<T>.GetMock
  nameWithType.vb: MockCreationResult(Of T).GetMock
- uid: Benday.Common.Testing.MockCreationResult`1.GetMock``1
  name: GetMock<TMock>()
  href: api/Benday.Common.Testing.MockCreationResult-1.html#Benday_Common_Testing_MockCreationResult_1_GetMock__1
  commentId: M:Benday.Common.Testing.MockCreationResult`1.GetMock``1
  name.vb: GetMock(Of TMock)()
  fullName: Benday.Common.Testing.MockCreationResult<T>.GetMock<TMock>()
  fullName.vb: Benday.Common.Testing.MockCreationResult(Of T).GetMock(Of TMock)()
  nameWithType: MockCreationResult<T>.GetMock<TMock>()
  nameWithType.vb: MockCreationResult(Of T).GetMock(Of TMock)()
- uid: Benday.Common.Testing.MockCreationResult`1.GetRequiredMock*
  name: GetRequiredMock
  href: api/Benday.Common.Testing.MockCreationResult-1.html#Benday_Common_Testing_MockCreationResult_1_GetRequiredMock_
  commentId: Overload:Benday.Common.Testing.MockCreationResult`1.GetRequiredMock
  isSpec: "True"
  fullName: Benday.Common.Testing.MockCreationResult<T>.GetRequiredMock
  fullName.vb: Benday.Common.Testing.MockCreationResult(Of T).GetRequiredMock
  nameWithType: MockCreationResult<T>.GetRequiredMock
  nameWithType.vb: MockCreationResult(Of T).GetRequiredMock
- uid: Benday.Common.Testing.MockCreationResult`1.GetRequiredMock``1
  name: GetRequiredMock<TMock>()
  href: api/Benday.Common.Testing.MockCreationResult-1.html#Benday_Common_Testing_MockCreationResult_1_GetRequiredMock__1
  commentId: M:Benday.Common.Testing.MockCreationResult`1.GetRequiredMock``1
  name.vb: GetRequiredMock(Of TMock)()
  fullName: Benday.Common.Testing.MockCreationResult<T>.GetRequiredMock<TMock>()
  fullName.vb: Benday.Common.Testing.MockCreationResult(Of T).GetRequiredMock(Of TMock)()
  nameWithType: MockCreationResult<T>.GetRequiredMock<TMock>()
  nameWithType.vb: MockCreationResult(Of T).GetRequiredMock(Of TMock)()
- uid: Benday.Common.Testing.MockCreationResult`1.Instance
  name: Instance
  href: api/Benday.Common.Testing.MockCreationResult-1.html#Benday_Common_Testing_MockCreationResult_1_Instance
  commentId: P:Benday.Common.Testing.MockCreationResult`1.Instance
  fullName: Benday.Common.Testing.MockCreationResult<T>.Instance
  fullName.vb: Benday.Common.Testing.MockCreationResult(Of T).Instance
  nameWithType: MockCreationResult<T>.Instance
  nameWithType.vb: MockCreationResult(Of T).Instance
- uid: Benday.Common.Testing.MockCreationResult`1.Instance*
  name: Instance
  href: api/Benday.Common.Testing.MockCreationResult-1.html#Benday_Common_Testing_MockCreationResult_1_Instance_
  commentId: Overload:Benday.Common.Testing.MockCreationResult`1.Instance
  isSpec: "True"
  fullName: Benday.Common.Testing.MockCreationResult<T>.Instance
  fullName.vb: Benday.Common.Testing.MockCreationResult(Of T).Instance
  nameWithType: MockCreationResult<T>.Instance
  nameWithType.vb: MockCreationResult(Of T).Instance
- uid: Benday.Common.Testing.MockCreationResult`1.IsInstanceCreated
  name: IsInstanceCreated
  href: api/Benday.Common.Testing.MockCreationResult-1.html#Benday_Common_Testing_MockCreationResult_1_IsInstanceCreated
  commentId: P:Benday.Common.Testing.MockCreationResult`1.IsInstanceCreated
  fullName: Benday.Common.Testing.MockCreationResult<T>.IsInstanceCreated
  fullName.vb: Benday.Common.Testing.MockCreationResult(Of T).IsInstanceCreated
  nameWithType: MockCreationResult<T>.IsInstanceCreated
  nameWithType.vb: MockCreationResult(Of T).IsInstanceCreated
- uid: Benday.Common.Testing.MockCreationResult`1.IsInstanceCreated*
  name: IsInstanceCreated
  href: api/Benday.Common.Testing.MockCreationResult-1.html#Benday_Common_Testing_MockCreationResult_1_IsInstanceCreated_
  commentId: Overload:Benday.Common.Testing.MockCreationResult`1.IsInstanceCreated
  isSpec: "True"
  fullName: Benday.Common.Testing.MockCreationResult<T>.IsInstanceCreated
  fullName.vb: Benday.Common.Testing.MockCreationResult(Of T).IsInstanceCreated
  nameWithType: MockCreationResult<T>.IsInstanceCreated
  nameWithType.vb: MockCreationResult(Of T).IsInstanceCreated
- uid: Benday.Common.Testing.MockCreationResult`1.Mocks
  name: Mocks
  href: api/Benday.Common.Testing.MockCreationResult-1.html#Benday_Common_Testing_MockCreationResult_1_Mocks
  commentId: P:Benday.Common.Testing.MockCreationResult`1.Mocks
  fullName: Benday.Common.Testing.MockCreationResult<T>.Mocks
  fullName.vb: Benday.Common.Testing.MockCreationResult(Of T).Mocks
  nameWithType: MockCreationResult<T>.Mocks
  nameWithType.vb: MockCreationResult(Of T).Mocks
- uid: Benday.Common.Testing.MockCreationResult`1.Mocks*
  name: Mocks
  href: api/Benday.Common.Testing.MockCreationResult-1.html#Benday_Common_Testing_MockCreationResult_1_Mocks_
  commentId: Overload:Benday.Common.Testing.MockCreationResult`1.Mocks
  isSpec: "True"
  fullName: Benday.Common.Testing.MockCreationResult<T>.Mocks
  fullName.vb: Benday.Common.Testing.MockCreationResult(Of T).Mocks
  nameWithType: MockCreationResult<T>.Mocks
  nameWithType.vb: MockCreationResult(Of T).Mocks
- uid: Benday.Common.Testing.MockCreationResult`1.ReflectedConstructor
  name: ReflectedConstructor
  href: api/Benday.Common.Testing.MockCreationResult-1.html#Benday_Common_Testing_MockCreationResult_1_ReflectedConstructor
  commentId: P:Benday.Common.Testing.MockCreationResult`1.ReflectedConstructor
  fullName: Benday.Common.Testing.MockCreationResult<T>.ReflectedConstructor
  fullName.vb: Benday.Common.Testing.MockCreationResult(Of T).ReflectedConstructor
  nameWithType: MockCreationResult<T>.ReflectedConstructor
  nameWithType.vb: MockCreationResult(Of T).ReflectedConstructor
- uid: Benday.Common.Testing.MockCreationResult`1.ReflectedConstructor*
  name: ReflectedConstructor
  href: api/Benday.Common.Testing.MockCreationResult-1.html#Benday_Common_Testing_MockCreationResult_1_ReflectedConstructor_
  commentId: Overload:Benday.Common.Testing.MockCreationResult`1.ReflectedConstructor
  isSpec: "True"
  fullName: Benday.Common.Testing.MockCreationResult<T>.ReflectedConstructor
  fullName.vb: Benday.Common.Testing.MockCreationResult(Of T).ReflectedConstructor
  nameWithType: MockCreationResult<T>.ReflectedConstructor
  nameWithType.vb: MockCreationResult(Of T).ReflectedConstructor
- uid: Benday.Common.Testing.MockUtility
  name: MockUtility
  href: api/Benday.Common.Testing.MockUtility.html
  commentId: T:Benday.Common.Testing.MockUtility
  fullName: Benday.Common.Testing.MockUtility
  nameWithType: MockUtility
- uid: Benday.Common.Testing.MockUtility.CreateInstance*
  name: CreateInstance
  href: api/Benday.Common.Testing.MockUtility.html#Benday_Common_Testing_MockUtility_CreateInstance_
  commentId: Overload:Benday.Common.Testing.MockUtility.CreateInstance
  isSpec: "True"
  fullName: Benday.Common.Testing.MockUtility.CreateInstance
  nameWithType: MockUtility.CreateInstance
- uid: Benday.Common.Testing.MockUtility.CreateInstance``1
  name: CreateInstance<T>()
  href: api/Benday.Common.Testing.MockUtility.html#Benday_Common_Testing_MockUtility_CreateInstance__1
  commentId: M:Benday.Common.Testing.MockUtility.CreateInstance``1
  name.vb: CreateInstance(Of T)()
  fullName: Benday.Common.Testing.MockUtility.CreateInstance<T>()
  fullName.vb: Benday.Common.Testing.MockUtility.CreateInstance(Of T)()
  nameWithType: MockUtility.CreateInstance<T>()
  nameWithType.vb: MockUtility.CreateInstance(Of T)()
- uid: Benday.Common.Testing.NullableStringAssertionExtensions
  name: NullableStringAssertionExtensions
  href: api/Benday.Common.Testing.NullableStringAssertionExtensions.html
  commentId: T:Benday.Common.Testing.NullableStringAssertionExtensions
  fullName: Benday.Common.Testing.NullableStringAssertionExtensions
  nameWithType: NullableStringAssertionExtensions
- uid: Benday.Common.Testing.NullableStringAssertionExtensions.Contains(Benday.Common.Testing.ICheckAssertionForNullableType{System.String},System.String,System.String)
  name: Contains(ICheckAssertionForNullableType<string?>, string, string?)
  href: api/Benday.Common.Testing.NullableStringAssertionExtensions.html#Benday_Common_Testing_NullableStringAssertionExtensions_Contains_Benday_Common_Testing_ICheckAssertionForNullableType_System_String__System_String_System_String_
  commentId: M:Benday.Common.Testing.NullableStringAssertionExtensions.Contains(Benday.Common.Testing.ICheckAssertionForNullableType{System.String},System.String,System.String)
  name.vb: Contains(ICheckAssertionForNullableType(Of String), String, String)
  fullName: Benday.Common.Testing.NullableStringAssertionExtensions.Contains(Benday.Common.Testing.ICheckAssertionForNullableType<string?>, string, string?)
  fullName.vb: Benday.Common.Testing.NullableStringAssertionExtensions.Contains(Benday.Common.Testing.ICheckAssertionForNullableType(Of String), String, String)
  nameWithType: NullableStringAssertionExtensions.Contains(ICheckAssertionForNullableType<string?>, string, string?)
  nameWithType.vb: NullableStringAssertionExtensions.Contains(ICheckAssertionForNullableType(Of String), String, String)
- uid: Benday.Common.Testing.NullableStringAssertionExtensions.Contains*
  name: Contains
  href: api/Benday.Common.Testing.NullableStringAssertionExtensions.html#Benday_Common_Testing_NullableStringAssertionExtensions_Contains_
  commentId: Overload:Benday.Common.Testing.NullableStringAssertionExtensions.Contains
  isSpec: "True"
  fullName: Benday.Common.Testing.NullableStringAssertionExtensions.Contains
  nameWithType: NullableStringAssertionExtensions.Contains
- uid: Benday.Common.Testing.NullableStringAssertionExtensions.ContainsCaseInsensitive(Benday.Common.Testing.ICheckAssertionForNullableType{System.String},System.String,System.String)
  name: ContainsCaseInsensitive(ICheckAssertionForNullableType<string?>, string, string?)
  href: api/Benday.Common.Testing.NullableStringAssertionExtensions.html#Benday_Common_Testing_NullableStringAssertionExtensions_ContainsCaseInsensitive_Benday_Common_Testing_ICheckAssertionForNullableType_System_String__System_String_System_String_
  commentId: M:Benday.Common.Testing.NullableStringAssertionExtensions.ContainsCaseInsensitive(Benday.Common.Testing.ICheckAssertionForNullableType{System.String},System.String,System.String)
  name.vb: ContainsCaseInsensitive(ICheckAssertionForNullableType(Of String), String, String)
  fullName: Benday.Common.Testing.NullableStringAssertionExtensions.ContainsCaseInsensitive(Benday.Common.Testing.ICheckAssertionForNullableType<string?>, string, string?)
  fullName.vb: Benday.Common.Testing.NullableStringAssertionExtensions.ContainsCaseInsensitive(Benday.Common.Testing.ICheckAssertionForNullableType(Of String), String, String)
  nameWithType: NullableStringAssertionExtensions.ContainsCaseInsensitive(ICheckAssertionForNullableType<string?>, string, string?)
  nameWithType.vb: NullableStringAssertionExtensions.ContainsCaseInsensitive(ICheckAssertionForNullableType(Of String), String, String)
- uid: Benday.Common.Testing.NullableStringAssertionExtensions.ContainsCaseInsensitive*
  name: ContainsCaseInsensitive
  href: api/Benday.Common.Testing.NullableStringAssertionExtensions.html#Benday_Common_Testing_NullableStringAssertionExtensions_ContainsCaseInsensitive_
  commentId: Overload:Benday.Common.Testing.NullableStringAssertionExtensions.ContainsCaseInsensitive
  isSpec: "True"
  fullName: Benday.Common.Testing.NullableStringAssertionExtensions.ContainsCaseInsensitive
  nameWithType: NullableStringAssertionExtensions.ContainsCaseInsensitive
- uid: Benday.Common.Testing.NullableStringAssertionExtensions.DoesNotContain(Benday.Common.Testing.ICheckAssertionForNullableType{System.String},System.String,System.String)
  name: DoesNotContain(ICheckAssertionForNullableType<string?>, string, string?)
  href: api/Benday.Common.Testing.NullableStringAssertionExtensions.html#Benday_Common_Testing_NullableStringAssertionExtensions_DoesNotContain_Benday_Common_Testing_ICheckAssertionForNullableType_System_String__System_String_System_String_
  commentId: M:Benday.Common.Testing.NullableStringAssertionExtensions.DoesNotContain(Benday.Common.Testing.ICheckAssertionForNullableType{System.String},System.String,System.String)
  name.vb: DoesNotContain(ICheckAssertionForNullableType(Of String), String, String)
  fullName: Benday.Common.Testing.NullableStringAssertionExtensions.DoesNotContain(Benday.Common.Testing.ICheckAssertionForNullableType<string?>, string, string?)
  fullName.vb: Benday.Common.Testing.NullableStringAssertionExtensions.DoesNotContain(Benday.Common.Testing.ICheckAssertionForNullableType(Of String), String, String)
  nameWithType: NullableStringAssertionExtensions.DoesNotContain(ICheckAssertionForNullableType<string?>, string, string?)
  nameWithType.vb: NullableStringAssertionExtensions.DoesNotContain(ICheckAssertionForNullableType(Of String), String, String)
- uid: Benday.Common.Testing.NullableStringAssertionExtensions.DoesNotContain*
  name: DoesNotContain
  href: api/Benday.Common.Testing.NullableStringAssertionExtensions.html#Benday_Common_Testing_NullableStringAssertionExtensions_DoesNotContain_
  commentId: Overload:Benday.Common.Testing.NullableStringAssertionExtensions.DoesNotContain
  isSpec: "True"
  fullName: Benday.Common.Testing.NullableStringAssertionExtensions.DoesNotContain
  nameWithType: NullableStringAssertionExtensions.DoesNotContain
- uid: Benday.Common.Testing.NullableStringAssertionExtensions.DoesNotContainCaseInsensitive(Benday.Common.Testing.ICheckAssertionForNullableType{System.String},System.String,System.String)
  name: DoesNotContainCaseInsensitive(ICheckAssertionForNullableType<string?>, string, string?)
  href: api/Benday.Common.Testing.NullableStringAssertionExtensions.html#Benday_Common_Testing_NullableStringAssertionExtensions_DoesNotContainCaseInsensitive_Benday_Common_Testing_ICheckAssertionForNullableType_System_String__System_String_System_String_
  commentId: M:Benday.Common.Testing.NullableStringAssertionExtensions.DoesNotContainCaseInsensitive(Benday.Common.Testing.ICheckAssertionForNullableType{System.String},System.String,System.String)
  name.vb: DoesNotContainCaseInsensitive(ICheckAssertionForNullableType(Of String), String, String)
  fullName: Benday.Common.Testing.NullableStringAssertionExtensions.DoesNotContainCaseInsensitive(Benday.Common.Testing.ICheckAssertionForNullableType<string?>, string, string?)
  fullName.vb: Benday.Common.Testing.NullableStringAssertionExtensions.DoesNotContainCaseInsensitive(Benday.Common.Testing.ICheckAssertionForNullableType(Of String), String, String)
  nameWithType: NullableStringAssertionExtensions.DoesNotContainCaseInsensitive(ICheckAssertionForNullableType<string?>, string, string?)
  nameWithType.vb: NullableStringAssertionExtensions.DoesNotContainCaseInsensitive(ICheckAssertionForNullableType(Of String), String, String)
- uid: Benday.Common.Testing.NullableStringAssertionExtensions.DoesNotContainCaseInsensitive*
  name: DoesNotContainCaseInsensitive
  href: api/Benday.Common.Testing.NullableStringAssertionExtensions.html#Benday_Common_Testing_NullableStringAssertionExtensions_DoesNotContainCaseInsensitive_
  commentId: Overload:Benday.Common.Testing.NullableStringAssertionExtensions.DoesNotContainCaseInsensitive
  isSpec: "True"
  fullName: Benday.Common.Testing.NullableStringAssertionExtensions.DoesNotContainCaseInsensitive
  nameWithType: NullableStringAssertionExtensions.DoesNotContainCaseInsensitive
- uid: Benday.Common.Testing.NullableStringAssertionExtensions.DoesNotEndWith(Benday.Common.Testing.ICheckAssertionForNullableType{System.String},System.String,System.String)
  name: DoesNotEndWith(ICheckAssertionForNullableType<string?>, string, string?)
  href: api/Benday.Common.Testing.NullableStringAssertionExtensions.html#Benday_Common_Testing_NullableStringAssertionExtensions_DoesNotEndWith_Benday_Common_Testing_ICheckAssertionForNullableType_System_String__System_String_System_String_
  commentId: M:Benday.Common.Testing.NullableStringAssertionExtensions.DoesNotEndWith(Benday.Common.Testing.ICheckAssertionForNullableType{System.String},System.String,System.String)
  name.vb: DoesNotEndWith(ICheckAssertionForNullableType(Of String), String, String)
  fullName: Benday.Common.Testing.NullableStringAssertionExtensions.DoesNotEndWith(Benday.Common.Testing.ICheckAssertionForNullableType<string?>, string, string?)
  fullName.vb: Benday.Common.Testing.NullableStringAssertionExtensions.DoesNotEndWith(Benday.Common.Testing.ICheckAssertionForNullableType(Of String), String, String)
  nameWithType: NullableStringAssertionExtensions.DoesNotEndWith(ICheckAssertionForNullableType<string?>, string, string?)
  nameWithType.vb: NullableStringAssertionExtensions.DoesNotEndWith(ICheckAssertionForNullableType(Of String), String, String)
- uid: Benday.Common.Testing.NullableStringAssertionExtensions.DoesNotEndWith*
  name: DoesNotEndWith
  href: api/Benday.Common.Testing.NullableStringAssertionExtensions.html#Benday_Common_Testing_NullableStringAssertionExtensions_DoesNotEndWith_
  commentId: Overload:Benday.Common.Testing.NullableStringAssertionExtensions.DoesNotEndWith
  isSpec: "True"
  fullName: Benday.Common.Testing.NullableStringAssertionExtensions.DoesNotEndWith
  nameWithType: NullableStringAssertionExtensions.DoesNotEndWith
- uid: Benday.Common.Testing.NullableStringAssertionExtensions.DoesNotEndWithCaseInsensitive(Benday.Common.Testing.ICheckAssertionForNullableType{System.String},System.String,System.String)
  name: DoesNotEndWithCaseInsensitive(ICheckAssertionForNullableType<string?>, string, string?)
  href: api/Benday.Common.Testing.NullableStringAssertionExtensions.html#Benday_Common_Testing_NullableStringAssertionExtensions_DoesNotEndWithCaseInsensitive_Benday_Common_Testing_ICheckAssertionForNullableType_System_String__System_String_System_String_
  commentId: M:Benday.Common.Testing.NullableStringAssertionExtensions.DoesNotEndWithCaseInsensitive(Benday.Common.Testing.ICheckAssertionForNullableType{System.String},System.String,System.String)
  name.vb: DoesNotEndWithCaseInsensitive(ICheckAssertionForNullableType(Of String), String, String)
  fullName: Benday.Common.Testing.NullableStringAssertionExtensions.DoesNotEndWithCaseInsensitive(Benday.Common.Testing.ICheckAssertionForNullableType<string?>, string, string?)
  fullName.vb: Benday.Common.Testing.NullableStringAssertionExtensions.DoesNotEndWithCaseInsensitive(Benday.Common.Testing.ICheckAssertionForNullableType(Of String), String, String)
  nameWithType: NullableStringAssertionExtensions.DoesNotEndWithCaseInsensitive(ICheckAssertionForNullableType<string?>, string, string?)
  nameWithType.vb: NullableStringAssertionExtensions.DoesNotEndWithCaseInsensitive(ICheckAssertionForNullableType(Of String), String, String)
- uid: Benday.Common.Testing.NullableStringAssertionExtensions.DoesNotEndWithCaseInsensitive*
  name: DoesNotEndWithCaseInsensitive
  href: api/Benday.Common.Testing.NullableStringAssertionExtensions.html#Benday_Common_Testing_NullableStringAssertionExtensions_DoesNotEndWithCaseInsensitive_
  commentId: Overload:Benday.Common.Testing.NullableStringAssertionExtensions.DoesNotEndWithCaseInsensitive
  isSpec: "True"
  fullName: Benday.Common.Testing.NullableStringAssertionExtensions.DoesNotEndWithCaseInsensitive
  nameWithType: NullableStringAssertionExtensions.DoesNotEndWithCaseInsensitive
- uid: Benday.Common.Testing.NullableStringAssertionExtensions.DoesNotStartWith(Benday.Common.Testing.ICheckAssertionForNullableType{System.String},System.String,System.String)
  name: DoesNotStartWith(ICheckAssertionForNullableType<string?>, string, string?)
  href: api/Benday.Common.Testing.NullableStringAssertionExtensions.html#Benday_Common_Testing_NullableStringAssertionExtensions_DoesNotStartWith_Benday_Common_Testing_ICheckAssertionForNullableType_System_String__System_String_System_String_
  commentId: M:Benday.Common.Testing.NullableStringAssertionExtensions.DoesNotStartWith(Benday.Common.Testing.ICheckAssertionForNullableType{System.String},System.String,System.String)
  name.vb: DoesNotStartWith(ICheckAssertionForNullableType(Of String), String, String)
  fullName: Benday.Common.Testing.NullableStringAssertionExtensions.DoesNotStartWith(Benday.Common.Testing.ICheckAssertionForNullableType<string?>, string, string?)
  fullName.vb: Benday.Common.Testing.NullableStringAssertionExtensions.DoesNotStartWith(Benday.Common.Testing.ICheckAssertionForNullableType(Of String), String, String)
  nameWithType: NullableStringAssertionExtensions.DoesNotStartWith(ICheckAssertionForNullableType<string?>, string, string?)
  nameWithType.vb: NullableStringAssertionExtensions.DoesNotStartWith(ICheckAssertionForNullableType(Of String), String, String)
- uid: Benday.Common.Testing.NullableStringAssertionExtensions.DoesNotStartWith*
  name: DoesNotStartWith
  href: api/Benday.Common.Testing.NullableStringAssertionExtensions.html#Benday_Common_Testing_NullableStringAssertionExtensions_DoesNotStartWith_
  commentId: Overload:Benday.Common.Testing.NullableStringAssertionExtensions.DoesNotStartWith
  isSpec: "True"
  fullName: Benday.Common.Testing.NullableStringAssertionExtensions.DoesNotStartWith
  nameWithType: NullableStringAssertionExtensions.DoesNotStartWith
- uid: Benday.Common.Testing.NullableStringAssertionExtensions.DoesNotStartWithCaseInsensitive(Benday.Common.Testing.ICheckAssertionForNullableType{System.String},System.String,System.String)
  name: DoesNotStartWithCaseInsensitive(ICheckAssertionForNullableType<string?>, string, string?)
  href: api/Benday.Common.Testing.NullableStringAssertionExtensions.html#Benday_Common_Testing_NullableStringAssertionExtensions_DoesNotStartWithCaseInsensitive_Benday_Common_Testing_ICheckAssertionForNullableType_System_String__System_String_System_String_
  commentId: M:Benday.Common.Testing.NullableStringAssertionExtensions.DoesNotStartWithCaseInsensitive(Benday.Common.Testing.ICheckAssertionForNullableType{System.String},System.String,System.String)
  name.vb: DoesNotStartWithCaseInsensitive(ICheckAssertionForNullableType(Of String), String, String)
  fullName: Benday.Common.Testing.NullableStringAssertionExtensions.DoesNotStartWithCaseInsensitive(Benday.Common.Testing.ICheckAssertionForNullableType<string?>, string, string?)
  fullName.vb: Benday.Common.Testing.NullableStringAssertionExtensions.DoesNotStartWithCaseInsensitive(Benday.Common.Testing.ICheckAssertionForNullableType(Of String), String, String)
  nameWithType: NullableStringAssertionExtensions.DoesNotStartWithCaseInsensitive(ICheckAssertionForNullableType<string?>, string, string?)
  nameWithType.vb: NullableStringAssertionExtensions.DoesNotStartWithCaseInsensitive(ICheckAssertionForNullableType(Of String), String, String)
- uid: Benday.Common.Testing.NullableStringAssertionExtensions.DoesNotStartWithCaseInsensitive*
  name: DoesNotStartWithCaseInsensitive
  href: api/Benday.Common.Testing.NullableStringAssertionExtensions.html#Benday_Common_Testing_NullableStringAssertionExtensions_DoesNotStartWithCaseInsensitive_
  commentId: Overload:Benday.Common.Testing.NullableStringAssertionExtensions.DoesNotStartWithCaseInsensitive
  isSpec: "True"
  fullName: Benday.Common.Testing.NullableStringAssertionExtensions.DoesNotStartWithCaseInsensitive
  nameWithType: NullableStringAssertionExtensions.DoesNotStartWithCaseInsensitive
- uid: Benday.Common.Testing.NullableStringAssertionExtensions.EndsWith(Benday.Common.Testing.ICheckAssertionForNullableType{System.String},System.String,System.String)
  name: EndsWith(ICheckAssertionForNullableType<string?>, string, string?)
  href: api/Benday.Common.Testing.NullableStringAssertionExtensions.html#Benday_Common_Testing_NullableStringAssertionExtensions_EndsWith_Benday_Common_Testing_ICheckAssertionForNullableType_System_String__System_String_System_String_
  commentId: M:Benday.Common.Testing.NullableStringAssertionExtensions.EndsWith(Benday.Common.Testing.ICheckAssertionForNullableType{System.String},System.String,System.String)
  name.vb: EndsWith(ICheckAssertionForNullableType(Of String), String, String)
  fullName: Benday.Common.Testing.NullableStringAssertionExtensions.EndsWith(Benday.Common.Testing.ICheckAssertionForNullableType<string?>, string, string?)
  fullName.vb: Benday.Common.Testing.NullableStringAssertionExtensions.EndsWith(Benday.Common.Testing.ICheckAssertionForNullableType(Of String), String, String)
  nameWithType: NullableStringAssertionExtensions.EndsWith(ICheckAssertionForNullableType<string?>, string, string?)
  nameWithType.vb: NullableStringAssertionExtensions.EndsWith(ICheckAssertionForNullableType(Of String), String, String)
- uid: Benday.Common.Testing.NullableStringAssertionExtensions.EndsWith*
  name: EndsWith
  href: api/Benday.Common.Testing.NullableStringAssertionExtensions.html#Benday_Common_Testing_NullableStringAssertionExtensions_EndsWith_
  commentId: Overload:Benday.Common.Testing.NullableStringAssertionExtensions.EndsWith
  isSpec: "True"
  fullName: Benday.Common.Testing.NullableStringAssertionExtensions.EndsWith
  nameWithType: NullableStringAssertionExtensions.EndsWith
- uid: Benday.Common.Testing.NullableStringAssertionExtensions.EndsWithCaseInsensitive(Benday.Common.Testing.ICheckAssertionForNullableType{System.String},System.String,System.String)
  name: EndsWithCaseInsensitive(ICheckAssertionForNullableType<string?>, string, string?)
  href: api/Benday.Common.Testing.NullableStringAssertionExtensions.html#Benday_Common_Testing_NullableStringAssertionExtensions_EndsWithCaseInsensitive_Benday_Common_Testing_ICheckAssertionForNullableType_System_String__System_String_System_String_
  commentId: M:Benday.Common.Testing.NullableStringAssertionExtensions.EndsWithCaseInsensitive(Benday.Common.Testing.ICheckAssertionForNullableType{System.String},System.String,System.String)
  name.vb: EndsWithCaseInsensitive(ICheckAssertionForNullableType(Of String), String, String)
  fullName: Benday.Common.Testing.NullableStringAssertionExtensions.EndsWithCaseInsensitive(Benday.Common.Testing.ICheckAssertionForNullableType<string?>, string, string?)
  fullName.vb: Benday.Common.Testing.NullableStringAssertionExtensions.EndsWithCaseInsensitive(Benday.Common.Testing.ICheckAssertionForNullableType(Of String), String, String)
  nameWithType: NullableStringAssertionExtensions.EndsWithCaseInsensitive(ICheckAssertionForNullableType<string?>, string, string?)
  nameWithType.vb: NullableStringAssertionExtensions.EndsWithCaseInsensitive(ICheckAssertionForNullableType(Of String), String, String)
- uid: Benday.Common.Testing.NullableStringAssertionExtensions.EndsWithCaseInsensitive*
  name: EndsWithCaseInsensitive
  href: api/Benday.Common.Testing.NullableStringAssertionExtensions.html#Benday_Common_Testing_NullableStringAssertionExtensions_EndsWithCaseInsensitive_
  commentId: Overload:Benday.Common.Testing.NullableStringAssertionExtensions.EndsWithCaseInsensitive
  isSpec: "True"
  fullName: Benday.Common.Testing.NullableStringAssertionExtensions.EndsWithCaseInsensitive
  nameWithType: NullableStringAssertionExtensions.EndsWithCaseInsensitive
- uid: Benday.Common.Testing.NullableStringAssertionExtensions.IsEqualCaseInsensitiveTo(Benday.Common.Testing.ICheckAssertionForNullableType{System.String},System.String,System.String)
  name: IsEqualCaseInsensitiveTo(ICheckAssertionForNullableType<string?>, string?, string?)
  href: api/Benday.Common.Testing.NullableStringAssertionExtensions.html#Benday_Common_Testing_NullableStringAssertionExtensions_IsEqualCaseInsensitiveTo_Benday_Common_Testing_ICheckAssertionForNullableType_System_String__System_String_System_String_
  commentId: M:Benday.Common.Testing.NullableStringAssertionExtensions.IsEqualCaseInsensitiveTo(Benday.Common.Testing.ICheckAssertionForNullableType{System.String},System.String,System.String)
  name.vb: IsEqualCaseInsensitiveTo(ICheckAssertionForNullableType(Of String), String, String)
  fullName: Benday.Common.Testing.NullableStringAssertionExtensions.IsEqualCaseInsensitiveTo(Benday.Common.Testing.ICheckAssertionForNullableType<string?>, string?, string?)
  fullName.vb: Benday.Common.Testing.NullableStringAssertionExtensions.IsEqualCaseInsensitiveTo(Benday.Common.Testing.ICheckAssertionForNullableType(Of String), String, String)
  nameWithType: NullableStringAssertionExtensions.IsEqualCaseInsensitiveTo(ICheckAssertionForNullableType<string?>, string?, string?)
  nameWithType.vb: NullableStringAssertionExtensions.IsEqualCaseInsensitiveTo(ICheckAssertionForNullableType(Of String), String, String)
- uid: Benday.Common.Testing.NullableStringAssertionExtensions.IsEqualCaseInsensitiveTo*
  name: IsEqualCaseInsensitiveTo
  href: api/Benday.Common.Testing.NullableStringAssertionExtensions.html#Benday_Common_Testing_NullableStringAssertionExtensions_IsEqualCaseInsensitiveTo_
  commentId: Overload:Benday.Common.Testing.NullableStringAssertionExtensions.IsEqualCaseInsensitiveTo
  isSpec: "True"
  fullName: Benday.Common.Testing.NullableStringAssertionExtensions.IsEqualCaseInsensitiveTo
  nameWithType: NullableStringAssertionExtensions.IsEqualCaseInsensitiveTo
- uid: Benday.Common.Testing.NullableStringAssertionExtensions.IsEqualTo(Benday.Common.Testing.ICheckAssertionForNullableType{System.String},System.String,System.String)
  name: IsEqualTo(ICheckAssertionForNullableType<string?>, string?, string?)
  href: api/Benday.Common.Testing.NullableStringAssertionExtensions.html#Benday_Common_Testing_NullableStringAssertionExtensions_IsEqualTo_Benday_Common_Testing_ICheckAssertionForNullableType_System_String__System_String_System_String_
  commentId: M:Benday.Common.Testing.NullableStringAssertionExtensions.IsEqualTo(Benday.Common.Testing.ICheckAssertionForNullableType{System.String},System.String,System.String)
  name.vb: IsEqualTo(ICheckAssertionForNullableType(Of String), String, String)
  fullName: Benday.Common.Testing.NullableStringAssertionExtensions.IsEqualTo(Benday.Common.Testing.ICheckAssertionForNullableType<string?>, string?, string?)
  fullName.vb: Benday.Common.Testing.NullableStringAssertionExtensions.IsEqualTo(Benday.Common.Testing.ICheckAssertionForNullableType(Of String), String, String)
  nameWithType: NullableStringAssertionExtensions.IsEqualTo(ICheckAssertionForNullableType<string?>, string?, string?)
  nameWithType.vb: NullableStringAssertionExtensions.IsEqualTo(ICheckAssertionForNullableType(Of String), String, String)
- uid: Benday.Common.Testing.NullableStringAssertionExtensions.IsEqualTo*
  name: IsEqualTo
  href: api/Benday.Common.Testing.NullableStringAssertionExtensions.html#Benday_Common_Testing_NullableStringAssertionExtensions_IsEqualTo_
  commentId: Overload:Benday.Common.Testing.NullableStringAssertionExtensions.IsEqualTo
  isSpec: "True"
  fullName: Benday.Common.Testing.NullableStringAssertionExtensions.IsEqualTo
  nameWithType: NullableStringAssertionExtensions.IsEqualTo
- uid: Benday.Common.Testing.NullableStringAssertionExtensions.IsNotEqualTo(Benday.Common.Testing.ICheckAssertionForNullableType{System.String},System.String,System.String)
  name: IsNotEqualTo(ICheckAssertionForNullableType<string?>, string?, string?)
  href: api/Benday.Common.Testing.NullableStringAssertionExtensions.html#Benday_Common_Testing_NullableStringAssertionExtensions_IsNotEqualTo_Benday_Common_Testing_ICheckAssertionForNullableType_System_String__System_String_System_String_
  commentId: M:Benday.Common.Testing.NullableStringAssertionExtensions.IsNotEqualTo(Benday.Common.Testing.ICheckAssertionForNullableType{System.String},System.String,System.String)
  name.vb: IsNotEqualTo(ICheckAssertionForNullableType(Of String), String, String)
  fullName: Benday.Common.Testing.NullableStringAssertionExtensions.IsNotEqualTo(Benday.Common.Testing.ICheckAssertionForNullableType<string?>, string?, string?)
  fullName.vb: Benday.Common.Testing.NullableStringAssertionExtensions.IsNotEqualTo(Benday.Common.Testing.ICheckAssertionForNullableType(Of String), String, String)
  nameWithType: NullableStringAssertionExtensions.IsNotEqualTo(ICheckAssertionForNullableType<string?>, string?, string?)
  nameWithType.vb: NullableStringAssertionExtensions.IsNotEqualTo(ICheckAssertionForNullableType(Of String), String, String)
- uid: Benday.Common.Testing.NullableStringAssertionExtensions.IsNotEqualTo*
  name: IsNotEqualTo
  href: api/Benday.Common.Testing.NullableStringAssertionExtensions.html#Benday_Common_Testing_NullableStringAssertionExtensions_IsNotEqualTo_
  commentId: Overload:Benday.Common.Testing.NullableStringAssertionExtensions.IsNotEqualTo
  isSpec: "True"
  fullName: Benday.Common.Testing.NullableStringAssertionExtensions.IsNotEqualTo
  nameWithType: NullableStringAssertionExtensions.IsNotEqualTo
- uid: Benday.Common.Testing.NullableStringAssertionExtensions.IsNotNullOrEmpty(Benday.Common.Testing.ICheckAssertionForNullableType{System.String},System.String)
  name: IsNotNullOrEmpty(ICheckAssertionForNullableType<string?>, string?)
  href: api/Benday.Common.Testing.NullableStringAssertionExtensions.html#Benday_Common_Testing_NullableStringAssertionExtensions_IsNotNullOrEmpty_Benday_Common_Testing_ICheckAssertionForNullableType_System_String__System_String_
  commentId: M:Benday.Common.Testing.NullableStringAssertionExtensions.IsNotNullOrEmpty(Benday.Common.Testing.ICheckAssertionForNullableType{System.String},System.String)
  name.vb: IsNotNullOrEmpty(ICheckAssertionForNullableType(Of String), String)
  fullName: Benday.Common.Testing.NullableStringAssertionExtensions.IsNotNullOrEmpty(Benday.Common.Testing.ICheckAssertionForNullableType<string?>, string?)
  fullName.vb: Benday.Common.Testing.NullableStringAssertionExtensions.IsNotNullOrEmpty(Benday.Common.Testing.ICheckAssertionForNullableType(Of String), String)
  nameWithType: NullableStringAssertionExtensions.IsNotNullOrEmpty(ICheckAssertionForNullableType<string?>, string?)
  nameWithType.vb: NullableStringAssertionExtensions.IsNotNullOrEmpty(ICheckAssertionForNullableType(Of String), String)
- uid: Benday.Common.Testing.NullableStringAssertionExtensions.IsNotNullOrEmpty*
  name: IsNotNullOrEmpty
  href: api/Benday.Common.Testing.NullableStringAssertionExtensions.html#Benday_Common_Testing_NullableStringAssertionExtensions_IsNotNullOrEmpty_
  commentId: Overload:Benday.Common.Testing.NullableStringAssertionExtensions.IsNotNullOrEmpty
  isSpec: "True"
  fullName: Benday.Common.Testing.NullableStringAssertionExtensions.IsNotNullOrEmpty
  nameWithType: NullableStringAssertionExtensions.IsNotNullOrEmpty
- uid: Benday.Common.Testing.NullableStringAssertionExtensions.IsNotNullOrWhitespace(Benday.Common.Testing.ICheckAssertionForNullableType{System.String},System.String)
  name: IsNotNullOrWhitespace(ICheckAssertionForNullableType<string?>, string?)
  href: api/Benday.Common.Testing.NullableStringAssertionExtensions.html#Benday_Common_Testing_NullableStringAssertionExtensions_IsNotNullOrWhitespace_Benday_Common_Testing_ICheckAssertionForNullableType_System_String__System_String_
  commentId: M:Benday.Common.Testing.NullableStringAssertionExtensions.IsNotNullOrWhitespace(Benday.Common.Testing.ICheckAssertionForNullableType{System.String},System.String)
  name.vb: IsNotNullOrWhitespace(ICheckAssertionForNullableType(Of String), String)
  fullName: Benday.Common.Testing.NullableStringAssertionExtensions.IsNotNullOrWhitespace(Benday.Common.Testing.ICheckAssertionForNullableType<string?>, string?)
  fullName.vb: Benday.Common.Testing.NullableStringAssertionExtensions.IsNotNullOrWhitespace(Benday.Common.Testing.ICheckAssertionForNullableType(Of String), String)
  nameWithType: NullableStringAssertionExtensions.IsNotNullOrWhitespace(ICheckAssertionForNullableType<string?>, string?)
  nameWithType.vb: NullableStringAssertionExtensions.IsNotNullOrWhitespace(ICheckAssertionForNullableType(Of String), String)
- uid: Benday.Common.Testing.NullableStringAssertionExtensions.IsNotNullOrWhitespace*
  name: IsNotNullOrWhitespace
  href: api/Benday.Common.Testing.NullableStringAssertionExtensions.html#Benday_Common_Testing_NullableStringAssertionExtensions_IsNotNullOrWhitespace_
  commentId: Overload:Benday.Common.Testing.NullableStringAssertionExtensions.IsNotNullOrWhitespace
  isSpec: "True"
  fullName: Benday.Common.Testing.NullableStringAssertionExtensions.IsNotNullOrWhitespace
  nameWithType: NullableStringAssertionExtensions.IsNotNullOrWhitespace
- uid: Benday.Common.Testing.NullableStringAssertionExtensions.StartsWith(Benday.Common.Testing.ICheckAssertionForNullableType{System.String},System.String,System.String)
  name: StartsWith(ICheckAssertionForNullableType<string?>, string, string?)
  href: api/Benday.Common.Testing.NullableStringAssertionExtensions.html#Benday_Common_Testing_NullableStringAssertionExtensions_StartsWith_Benday_Common_Testing_ICheckAssertionForNullableType_System_String__System_String_System_String_
  commentId: M:Benday.Common.Testing.NullableStringAssertionExtensions.StartsWith(Benday.Common.Testing.ICheckAssertionForNullableType{System.String},System.String,System.String)
  name.vb: StartsWith(ICheckAssertionForNullableType(Of String), String, String)
  fullName: Benday.Common.Testing.NullableStringAssertionExtensions.StartsWith(Benday.Common.Testing.ICheckAssertionForNullableType<string?>, string, string?)
  fullName.vb: Benday.Common.Testing.NullableStringAssertionExtensions.StartsWith(Benday.Common.Testing.ICheckAssertionForNullableType(Of String), String, String)
  nameWithType: NullableStringAssertionExtensions.StartsWith(ICheckAssertionForNullableType<string?>, string, string?)
  nameWithType.vb: NullableStringAssertionExtensions.StartsWith(ICheckAssertionForNullableType(Of String), String, String)
- uid: Benday.Common.Testing.NullableStringAssertionExtensions.StartsWith*
  name: StartsWith
  href: api/Benday.Common.Testing.NullableStringAssertionExtensions.html#Benday_Common_Testing_NullableStringAssertionExtensions_StartsWith_
  commentId: Overload:Benday.Common.Testing.NullableStringAssertionExtensions.StartsWith
  isSpec: "True"
  fullName: Benday.Common.Testing.NullableStringAssertionExtensions.StartsWith
  nameWithType: NullableStringAssertionExtensions.StartsWith
- uid: Benday.Common.Testing.NullableStringAssertionExtensions.StartsWithCaseInsensitive(Benday.Common.Testing.ICheckAssertionForNullableType{System.String},System.String,System.String)
  name: StartsWithCaseInsensitive(ICheckAssertionForNullableType<string?>, string, string?)
  href: api/Benday.Common.Testing.NullableStringAssertionExtensions.html#Benday_Common_Testing_NullableStringAssertionExtensions_StartsWithCaseInsensitive_Benday_Common_Testing_ICheckAssertionForNullableType_System_String__System_String_System_String_
  commentId: M:Benday.Common.Testing.NullableStringAssertionExtensions.StartsWithCaseInsensitive(Benday.Common.Testing.ICheckAssertionForNullableType{System.String},System.String,System.String)
  name.vb: StartsWithCaseInsensitive(ICheckAssertionForNullableType(Of String), String, String)
  fullName: Benday.Common.Testing.NullableStringAssertionExtensions.StartsWithCaseInsensitive(Benday.Common.Testing.ICheckAssertionForNullableType<string?>, string, string?)
  fullName.vb: Benday.Common.Testing.NullableStringAssertionExtensions.StartsWithCaseInsensitive(Benday.Common.Testing.ICheckAssertionForNullableType(Of String), String, String)
  nameWithType: NullableStringAssertionExtensions.StartsWithCaseInsensitive(ICheckAssertionForNullableType<string?>, string, string?)
  nameWithType.vb: NullableStringAssertionExtensions.StartsWithCaseInsensitive(ICheckAssertionForNullableType(Of String), String, String)
- uid: Benday.Common.Testing.NullableStringAssertionExtensions.StartsWithCaseInsensitive*
  name: StartsWithCaseInsensitive
  href: api/Benday.Common.Testing.NullableStringAssertionExtensions.html#Benday_Common_Testing_NullableStringAssertionExtensions_StartsWithCaseInsensitive_
  commentId: Overload:Benday.Common.Testing.NullableStringAssertionExtensions.StartsWithCaseInsensitive
  isSpec: "True"
  fullName: Benday.Common.Testing.NullableStringAssertionExtensions.StartsWithCaseInsensitive
  nameWithType: NullableStringAssertionExtensions.StartsWithCaseInsensitive
- uid: Benday.Common.Testing.NumericAssert
  name: NumericAssert
  href: api/Benday.Common.Testing.NumericAssert.html
  commentId: T:Benday.Common.Testing.NumericAssert
  fullName: Benday.Common.Testing.NumericAssert
  nameWithType: NumericAssert
- uid: Benday.Common.Testing.NumericAssert.AreApproximatelyEqual(System.Decimal,System.Decimal,System.Decimal,System.String)
  name: AreApproximatelyEqual(decimal, decimal, decimal, string)
  href: api/Benday.Common.Testing.NumericAssert.html#Benday_Common_Testing_NumericAssert_AreApproximatelyEqual_System_Decimal_System_Decimal_System_Decimal_System_String_
  commentId: M:Benday.Common.Testing.NumericAssert.AreApproximatelyEqual(System.Decimal,System.Decimal,System.Decimal,System.String)
  name.vb: AreApproximatelyEqual(Decimal, Decimal, Decimal, String)
  fullName: Benday.Common.Testing.NumericAssert.AreApproximatelyEqual(decimal, decimal, decimal, string)
  fullName.vb: Benday.Common.Testing.NumericAssert.AreApproximatelyEqual(Decimal, Decimal, Decimal, String)
  nameWithType: NumericAssert.AreApproximatelyEqual(decimal, decimal, decimal, string)
  nameWithType.vb: NumericAssert.AreApproximatelyEqual(Decimal, Decimal, Decimal, String)
- uid: Benday.Common.Testing.NumericAssert.AreApproximatelyEqual(System.Double,System.Double,System.Double,System.String)
  name: AreApproximatelyEqual(double, double, double, string)
  href: api/Benday.Common.Testing.NumericAssert.html#Benday_Common_Testing_NumericAssert_AreApproximatelyEqual_System_Double_System_Double_System_Double_System_String_
  commentId: M:Benday.Common.Testing.NumericAssert.AreApproximatelyEqual(System.Double,System.Double,System.Double,System.String)
  name.vb: AreApproximatelyEqual(Double, Double, Double, String)
  fullName: Benday.Common.Testing.NumericAssert.AreApproximatelyEqual(double, double, double, string)
  fullName.vb: Benday.Common.Testing.NumericAssert.AreApproximatelyEqual(Double, Double, Double, String)
  nameWithType: NumericAssert.AreApproximatelyEqual(double, double, double, string)
  nameWithType.vb: NumericAssert.AreApproximatelyEqual(Double, Double, Double, String)
- uid: Benday.Common.Testing.NumericAssert.AreApproximatelyEqual(System.Single,System.Single,System.Single,System.String)
  name: AreApproximatelyEqual(float, float, float, string)
  href: api/Benday.Common.Testing.NumericAssert.html#Benday_Common_Testing_NumericAssert_AreApproximatelyEqual_System_Single_System_Single_System_Single_System_String_
  commentId: M:Benday.Common.Testing.NumericAssert.AreApproximatelyEqual(System.Single,System.Single,System.Single,System.String)
  name.vb: AreApproximatelyEqual(Single, Single, Single, String)
  fullName: Benday.Common.Testing.NumericAssert.AreApproximatelyEqual(float, float, float, string)
  fullName.vb: Benday.Common.Testing.NumericAssert.AreApproximatelyEqual(Single, Single, Single, String)
  nameWithType: NumericAssert.AreApproximatelyEqual(float, float, float, string)
  nameWithType.vb: NumericAssert.AreApproximatelyEqual(Single, Single, Single, String)
- uid: Benday.Common.Testing.NumericAssert.AreApproximatelyEqual*
  name: AreApproximatelyEqual
  href: api/Benday.Common.Testing.NumericAssert.html#Benday_Common_Testing_NumericAssert_AreApproximatelyEqual_
  commentId: Overload:Benday.Common.Testing.NumericAssert.AreApproximatelyEqual
  isSpec: "True"
  fullName: Benday.Common.Testing.NumericAssert.AreApproximatelyEqual
  nameWithType: NumericAssert.AreApproximatelyEqual
- uid: Benday.Common.Testing.NumericAssert.IsFinite(System.Double,System.String)
  name: IsFinite(double, string)
  href: api/Benday.Common.Testing.NumericAssert.html#Benday_Common_Testing_NumericAssert_IsFinite_System_Double_System_String_
  commentId: M:Benday.Common.Testing.NumericAssert.IsFinite(System.Double,System.String)
  name.vb: IsFinite(Double, String)
  fullName: Benday.Common.Testing.NumericAssert.IsFinite(double, string)
  fullName.vb: Benday.Common.Testing.NumericAssert.IsFinite(Double, String)
  nameWithType: NumericAssert.IsFinite(double, string)
  nameWithType.vb: NumericAssert.IsFinite(Double, String)
- uid: Benday.Common.Testing.NumericAssert.IsFinite(System.Single,System.String)
  name: IsFinite(float, string)
  href: api/Benday.Common.Testing.NumericAssert.html#Benday_Common_Testing_NumericAssert_IsFinite_System_Single_System_String_
  commentId: M:Benday.Common.Testing.NumericAssert.IsFinite(System.Single,System.String)
  name.vb: IsFinite(Single, String)
  fullName: Benday.Common.Testing.NumericAssert.IsFinite(float, string)
  fullName.vb: Benday.Common.Testing.NumericAssert.IsFinite(Single, String)
  nameWithType: NumericAssert.IsFinite(float, string)
  nameWithType.vb: NumericAssert.IsFinite(Single, String)
- uid: Benday.Common.Testing.NumericAssert.IsFinite*
  name: IsFinite
  href: api/Benday.Common.Testing.NumericAssert.html#Benday_Common_Testing_NumericAssert_IsFinite_
  commentId: Overload:Benday.Common.Testing.NumericAssert.IsFinite
  isSpec: "True"
  fullName: Benday.Common.Testing.NumericAssert.IsFinite
  nameWithType: NumericAssert.IsFinite
- uid: Benday.Common.Testing.NumericAssert.IsGreaterThan*
  name: IsGreaterThan
  href: api/Benday.Common.Testing.NumericAssert.html#Benday_Common_Testing_NumericAssert_IsGreaterThan_
  commentId: Overload:Benday.Common.Testing.NumericAssert.IsGreaterThan
  isSpec: "True"
  fullName: Benday.Common.Testing.NumericAssert.IsGreaterThan
  nameWithType: NumericAssert.IsGreaterThan
- uid: Benday.Common.Testing.NumericAssert.IsGreaterThanOrEqualTo*
  name: IsGreaterThanOrEqualTo
  href: api/Benday.Common.Testing.NumericAssert.html#Benday_Common_Testing_NumericAssert_IsGreaterThanOrEqualTo_
  commentId: Overload:Benday.Common.Testing.NumericAssert.IsGreaterThanOrEqualTo
  isSpec: "True"
  fullName: Benday.Common.Testing.NumericAssert.IsGreaterThanOrEqualTo
  nameWithType: NumericAssert.IsGreaterThanOrEqualTo
- uid: Benday.Common.Testing.NumericAssert.IsGreaterThanOrEqualTo``1(``0,``0,System.String)
  name: IsGreaterThanOrEqualTo<T>(T, T, string)
  href: api/Benday.Common.Testing.NumericAssert.html#Benday_Common_Testing_NumericAssert_IsGreaterThanOrEqualTo__1___0___0_System_String_
  commentId: M:Benday.Common.Testing.NumericAssert.IsGreaterThanOrEqualTo``1(``0,``0,System.String)
  name.vb: IsGreaterThanOrEqualTo(Of T)(T, T, String)
  fullName: Benday.Common.Testing.NumericAssert.IsGreaterThanOrEqualTo<T>(T, T, string)
  fullName.vb: Benday.Common.Testing.NumericAssert.IsGreaterThanOrEqualTo(Of T)(T, T, String)
  nameWithType: NumericAssert.IsGreaterThanOrEqualTo<T>(T, T, string)
  nameWithType.vb: NumericAssert.IsGreaterThanOrEqualTo(Of T)(T, T, String)
- uid: Benday.Common.Testing.NumericAssert.IsGreaterThan``1(``0,``0,System.String)
  name: IsGreaterThan<T>(T, T, string)
  href: api/Benday.Common.Testing.NumericAssert.html#Benday_Common_Testing_NumericAssert_IsGreaterThan__1___0___0_System_String_
  commentId: M:Benday.Common.Testing.NumericAssert.IsGreaterThan``1(``0,``0,System.String)
  name.vb: IsGreaterThan(Of T)(T, T, String)
  fullName: Benday.Common.Testing.NumericAssert.IsGreaterThan<T>(T, T, string)
  fullName.vb: Benday.Common.Testing.NumericAssert.IsGreaterThan(Of T)(T, T, String)
  nameWithType: NumericAssert.IsGreaterThan<T>(T, T, string)
  nameWithType.vb: NumericAssert.IsGreaterThan(Of T)(T, T, String)
- uid: Benday.Common.Testing.NumericAssert.IsInRange*
  name: IsInRange
  href: api/Benday.Common.Testing.NumericAssert.html#Benday_Common_Testing_NumericAssert_IsInRange_
  commentId: Overload:Benday.Common.Testing.NumericAssert.IsInRange
  isSpec: "True"
  fullName: Benday.Common.Testing.NumericAssert.IsInRange
  nameWithType: NumericAssert.IsInRange
- uid: Benday.Common.Testing.NumericAssert.IsInRange``1(``0,``0,``0,System.String)
  name: IsInRange<T>(T, T, T, string)
  href: api/Benday.Common.Testing.NumericAssert.html#Benday_Common_Testing_NumericAssert_IsInRange__1___0___0___0_System_String_
  commentId: M:Benday.Common.Testing.NumericAssert.IsInRange``1(``0,``0,``0,System.String)
  name.vb: IsInRange(Of T)(T, T, T, String)
  fullName: Benday.Common.Testing.NumericAssert.IsInRange<T>(T, T, T, string)
  fullName.vb: Benday.Common.Testing.NumericAssert.IsInRange(Of T)(T, T, T, String)
  nameWithType: NumericAssert.IsInRange<T>(T, T, T, string)
  nameWithType.vb: NumericAssert.IsInRange(Of T)(T, T, T, String)
- uid: Benday.Common.Testing.NumericAssert.IsLessThan*
  name: IsLessThan
  href: api/Benday.Common.Testing.NumericAssert.html#Benday_Common_Testing_NumericAssert_IsLessThan_
  commentId: Overload:Benday.Common.Testing.NumericAssert.IsLessThan
  isSpec: "True"
  fullName: Benday.Common.Testing.NumericAssert.IsLessThan
  nameWithType: NumericAssert.IsLessThan
- uid: Benday.Common.Testing.NumericAssert.IsLessThanOrEqualTo*
  name: IsLessThanOrEqualTo
  href: api/Benday.Common.Testing.NumericAssert.html#Benday_Common_Testing_NumericAssert_IsLessThanOrEqualTo_
  commentId: Overload:Benday.Common.Testing.NumericAssert.IsLessThanOrEqualTo
  isSpec: "True"
  fullName: Benday.Common.Testing.NumericAssert.IsLessThanOrEqualTo
  nameWithType: NumericAssert.IsLessThanOrEqualTo
- uid: Benday.Common.Testing.NumericAssert.IsLessThanOrEqualTo``1(``0,``0,System.String)
  name: IsLessThanOrEqualTo<T>(T, T, string)
  href: api/Benday.Common.Testing.NumericAssert.html#Benday_Common_Testing_NumericAssert_IsLessThanOrEqualTo__1___0___0_System_String_
  commentId: M:Benday.Common.Testing.NumericAssert.IsLessThanOrEqualTo``1(``0,``0,System.String)
  name.vb: IsLessThanOrEqualTo(Of T)(T, T, String)
  fullName: Benday.Common.Testing.NumericAssert.IsLessThanOrEqualTo<T>(T, T, string)
  fullName.vb: Benday.Common.Testing.NumericAssert.IsLessThanOrEqualTo(Of T)(T, T, String)
  nameWithType: NumericAssert.IsLessThanOrEqualTo<T>(T, T, string)
  nameWithType.vb: NumericAssert.IsLessThanOrEqualTo(Of T)(T, T, String)
- uid: Benday.Common.Testing.NumericAssert.IsLessThan``1(``0,``0,System.String)
  name: IsLessThan<T>(T, T, string)
  href: api/Benday.Common.Testing.NumericAssert.html#Benday_Common_Testing_NumericAssert_IsLessThan__1___0___0_System_String_
  commentId: M:Benday.Common.Testing.NumericAssert.IsLessThan``1(``0,``0,System.String)
  name.vb: IsLessThan(Of T)(T, T, String)
  fullName: Benday.Common.Testing.NumericAssert.IsLessThan<T>(T, T, string)
  fullName.vb: Benday.Common.Testing.NumericAssert.IsLessThan(Of T)(T, T, String)
  nameWithType: NumericAssert.IsLessThan<T>(T, T, string)
  nameWithType.vb: NumericAssert.IsLessThan(Of T)(T, T, String)
- uid: Benday.Common.Testing.NumericAssert.IsNegative*
  name: IsNegative
  href: api/Benday.Common.Testing.NumericAssert.html#Benday_Common_Testing_NumericAssert_IsNegative_
  commentId: Overload:Benday.Common.Testing.NumericAssert.IsNegative
  isSpec: "True"
  fullName: Benday.Common.Testing.NumericAssert.IsNegative
  nameWithType: NumericAssert.IsNegative
- uid: Benday.Common.Testing.NumericAssert.IsNegative``1(``0,System.String)
  name: IsNegative<T>(T, string)
  href: api/Benday.Common.Testing.NumericAssert.html#Benday_Common_Testing_NumericAssert_IsNegative__1___0_System_String_
  commentId: M:Benday.Common.Testing.NumericAssert.IsNegative``1(``0,System.String)
  name.vb: IsNegative(Of T)(T, String)
  fullName: Benday.Common.Testing.NumericAssert.IsNegative<T>(T, string)
  fullName.vb: Benday.Common.Testing.NumericAssert.IsNegative(Of T)(T, String)
  nameWithType: NumericAssert.IsNegative<T>(T, string)
  nameWithType.vb: NumericAssert.IsNegative(Of T)(T, String)
- uid: Benday.Common.Testing.NumericAssert.IsNotInRange*
  name: IsNotInRange
  href: api/Benday.Common.Testing.NumericAssert.html#Benday_Common_Testing_NumericAssert_IsNotInRange_
  commentId: Overload:Benday.Common.Testing.NumericAssert.IsNotInRange
  isSpec: "True"
  fullName: Benday.Common.Testing.NumericAssert.IsNotInRange
  nameWithType: NumericAssert.IsNotInRange
- uid: Benday.Common.Testing.NumericAssert.IsNotInRange``1(``0,``0,``0,System.String)
  name: IsNotInRange<T>(T, T, T, string)
  href: api/Benday.Common.Testing.NumericAssert.html#Benday_Common_Testing_NumericAssert_IsNotInRange__1___0___0___0_System_String_
  commentId: M:Benday.Common.Testing.NumericAssert.IsNotInRange``1(``0,``0,``0,System.String)
  name.vb: IsNotInRange(Of T)(T, T, T, String)
  fullName: Benday.Common.Testing.NumericAssert.IsNotInRange<T>(T, T, T, string)
  fullName.vb: Benday.Common.Testing.NumericAssert.IsNotInRange(Of T)(T, T, T, String)
  nameWithType: NumericAssert.IsNotInRange<T>(T, T, T, string)
  nameWithType.vb: NumericAssert.IsNotInRange(Of T)(T, T, T, String)
- uid: Benday.Common.Testing.NumericAssert.IsNotNaN(System.Double,System.String)
  name: IsNotNaN(double, string)
  href: api/Benday.Common.Testing.NumericAssert.html#Benday_Common_Testing_NumericAssert_IsNotNaN_System_Double_System_String_
  commentId: M:Benday.Common.Testing.NumericAssert.IsNotNaN(System.Double,System.String)
  name.vb: IsNotNaN(Double, String)
  fullName: Benday.Common.Testing.NumericAssert.IsNotNaN(double, string)
  fullName.vb: Benday.Common.Testing.NumericAssert.IsNotNaN(Double, String)
  nameWithType: NumericAssert.IsNotNaN(double, string)
  nameWithType.vb: NumericAssert.IsNotNaN(Double, String)
- uid: Benday.Common.Testing.NumericAssert.IsNotNaN(System.Single,System.String)
  name: IsNotNaN(float, string)
  href: api/Benday.Common.Testing.NumericAssert.html#Benday_Common_Testing_NumericAssert_IsNotNaN_System_Single_System_String_
  commentId: M:Benday.Common.Testing.NumericAssert.IsNotNaN(System.Single,System.String)
  name.vb: IsNotNaN(Single, String)
  fullName: Benday.Common.Testing.NumericAssert.IsNotNaN(float, string)
  fullName.vb: Benday.Common.Testing.NumericAssert.IsNotNaN(Single, String)
  nameWithType: NumericAssert.IsNotNaN(float, string)
  nameWithType.vb: NumericAssert.IsNotNaN(Single, String)
- uid: Benday.Common.Testing.NumericAssert.IsNotNaN*
  name: IsNotNaN
  href: api/Benday.Common.Testing.NumericAssert.html#Benday_Common_Testing_NumericAssert_IsNotNaN_
  commentId: Overload:Benday.Common.Testing.NumericAssert.IsNotNaN
  isSpec: "True"
  fullName: Benday.Common.Testing.NumericAssert.IsNotNaN
  nameWithType: NumericAssert.IsNotNaN
- uid: Benday.Common.Testing.NumericAssert.IsNotZero*
  name: IsNotZero
  href: api/Benday.Common.Testing.NumericAssert.html#Benday_Common_Testing_NumericAssert_IsNotZero_
  commentId: Overload:Benday.Common.Testing.NumericAssert.IsNotZero
  isSpec: "True"
  fullName: Benday.Common.Testing.NumericAssert.IsNotZero
  nameWithType: NumericAssert.IsNotZero
- uid: Benday.Common.Testing.NumericAssert.IsNotZero``1(``0,System.String)
  name: IsNotZero<T>(T, string)
  href: api/Benday.Common.Testing.NumericAssert.html#Benday_Common_Testing_NumericAssert_IsNotZero__1___0_System_String_
  commentId: M:Benday.Common.Testing.NumericAssert.IsNotZero``1(``0,System.String)
  name.vb: IsNotZero(Of T)(T, String)
  fullName: Benday.Common.Testing.NumericAssert.IsNotZero<T>(T, string)
  fullName.vb: Benday.Common.Testing.NumericAssert.IsNotZero(Of T)(T, String)
  nameWithType: NumericAssert.IsNotZero<T>(T, string)
  nameWithType.vb: NumericAssert.IsNotZero(Of T)(T, String)
- uid: Benday.Common.Testing.NumericAssert.IsPositive*
  name: IsPositive
  href: api/Benday.Common.Testing.NumericAssert.html#Benday_Common_Testing_NumericAssert_IsPositive_
  commentId: Overload:Benday.Common.Testing.NumericAssert.IsPositive
  isSpec: "True"
  fullName: Benday.Common.Testing.NumericAssert.IsPositive
  nameWithType: NumericAssert.IsPositive
- uid: Benday.Common.Testing.NumericAssert.IsPositive``1(``0,System.String)
  name: IsPositive<T>(T, string)
  href: api/Benday.Common.Testing.NumericAssert.html#Benday_Common_Testing_NumericAssert_IsPositive__1___0_System_String_
  commentId: M:Benday.Common.Testing.NumericAssert.IsPositive``1(``0,System.String)
  name.vb: IsPositive(Of T)(T, String)
  fullName: Benday.Common.Testing.NumericAssert.IsPositive<T>(T, string)
  fullName.vb: Benday.Common.Testing.NumericAssert.IsPositive(Of T)(T, String)
  nameWithType: NumericAssert.IsPositive<T>(T, string)
  nameWithType.vb: NumericAssert.IsPositive(Of T)(T, String)
- uid: Benday.Common.Testing.NumericAssert.IsZero*
  name: IsZero
  href: api/Benday.Common.Testing.NumericAssert.html#Benday_Common_Testing_NumericAssert_IsZero_
  commentId: Overload:Benday.Common.Testing.NumericAssert.IsZero
  isSpec: "True"
  fullName: Benday.Common.Testing.NumericAssert.IsZero
  nameWithType: NumericAssert.IsZero
- uid: Benday.Common.Testing.NumericAssert.IsZero``1(``0,System.String)
  name: IsZero<T>(T, string)
  href: api/Benday.Common.Testing.NumericAssert.html#Benday_Common_Testing_NumericAssert_IsZero__1___0_System_String_
  commentId: M:Benday.Common.Testing.NumericAssert.IsZero``1(``0,System.String)
  name.vb: IsZero(Of T)(T, String)
  fullName: Benday.Common.Testing.NumericAssert.IsZero<T>(T, string)
  fullName.vb: Benday.Common.Testing.NumericAssert.IsZero(Of T)(T, String)
  nameWithType: NumericAssert.IsZero<T>(T, string)
  nameWithType.vb: NumericAssert.IsZero(Of T)(T, String)
- uid: Benday.Common.Testing.NumericAssertExtensions
  name: NumericAssertExtensions
  href: api/Benday.Common.Testing.NumericAssertExtensions.html
  commentId: T:Benday.Common.Testing.NumericAssertExtensions
  fullName: Benday.Common.Testing.NumericAssertExtensions
  nameWithType: NumericAssertExtensions
- uid: Benday.Common.Testing.NumericAssertExtensions.ShouldBeApproximatelyEqualTo(System.Decimal,System.Decimal,System.Decimal,System.String)
  name: ShouldBeApproximatelyEqualTo(decimal, decimal, decimal, string)
  href: api/Benday.Common.Testing.NumericAssertExtensions.html#Benday_Common_Testing_NumericAssertExtensions_ShouldBeApproximatelyEqualTo_System_Decimal_System_Decimal_System_Decimal_System_String_
  commentId: M:Benday.Common.Testing.NumericAssertExtensions.ShouldBeApproximatelyEqualTo(System.Decimal,System.Decimal,System.Decimal,System.String)
  name.vb: ShouldBeApproximatelyEqualTo(Decimal, Decimal, Decimal, String)
  fullName: Benday.Common.Testing.NumericAssertExtensions.ShouldBeApproximatelyEqualTo(decimal, decimal, decimal, string)
  fullName.vb: Benday.Common.Testing.NumericAssertExtensions.ShouldBeApproximatelyEqualTo(Decimal, Decimal, Decimal, String)
  nameWithType: NumericAssertExtensions.ShouldBeApproximatelyEqualTo(decimal, decimal, decimal, string)
  nameWithType.vb: NumericAssertExtensions.ShouldBeApproximatelyEqualTo(Decimal, Decimal, Decimal, String)
- uid: Benday.Common.Testing.NumericAssertExtensions.ShouldBeApproximatelyEqualTo(System.Double,System.Double,System.Double,System.String)
  name: ShouldBeApproximatelyEqualTo(double, double, double, string)
  href: api/Benday.Common.Testing.NumericAssertExtensions.html#Benday_Common_Testing_NumericAssertExtensions_ShouldBeApproximatelyEqualTo_System_Double_System_Double_System_Double_System_String_
  commentId: M:Benday.Common.Testing.NumericAssertExtensions.ShouldBeApproximatelyEqualTo(System.Double,System.Double,System.Double,System.String)
  name.vb: ShouldBeApproximatelyEqualTo(Double, Double, Double, String)
  fullName: Benday.Common.Testing.NumericAssertExtensions.ShouldBeApproximatelyEqualTo(double, double, double, string)
  fullName.vb: Benday.Common.Testing.NumericAssertExtensions.ShouldBeApproximatelyEqualTo(Double, Double, Double, String)
  nameWithType: NumericAssertExtensions.ShouldBeApproximatelyEqualTo(double, double, double, string)
  nameWithType.vb: NumericAssertExtensions.ShouldBeApproximatelyEqualTo(Double, Double, Double, String)
- uid: Benday.Common.Testing.NumericAssertExtensions.ShouldBeApproximatelyEqualTo(System.Single,System.Single,System.Single,System.String)
  name: ShouldBeApproximatelyEqualTo(float, float, float, string)
  href: api/Benday.Common.Testing.NumericAssertExtensions.html#Benday_Common_Testing_NumericAssertExtensions_ShouldBeApproximatelyEqualTo_System_Single_System_Single_System_Single_System_String_
  commentId: M:Benday.Common.Testing.NumericAssertExtensions.ShouldBeApproximatelyEqualTo(System.Single,System.Single,System.Single,System.String)
  name.vb: ShouldBeApproximatelyEqualTo(Single, Single, Single, String)
  fullName: Benday.Common.Testing.NumericAssertExtensions.ShouldBeApproximatelyEqualTo(float, float, float, string)
  fullName.vb: Benday.Common.Testing.NumericAssertExtensions.ShouldBeApproximatelyEqualTo(Single, Single, Single, String)
  nameWithType: NumericAssertExtensions.ShouldBeApproximatelyEqualTo(float, float, float, string)
  nameWithType.vb: NumericAssertExtensions.ShouldBeApproximatelyEqualTo(Single, Single, Single, String)
- uid: Benday.Common.Testing.NumericAssertExtensions.ShouldBeApproximatelyEqualTo*
  name: ShouldBeApproximatelyEqualTo
  href: api/Benday.Common.Testing.NumericAssertExtensions.html#Benday_Common_Testing_NumericAssertExtensions_ShouldBeApproximatelyEqualTo_
  commentId: Overload:Benday.Common.Testing.NumericAssertExtensions.ShouldBeApproximatelyEqualTo
  isSpec: "True"
  fullName: Benday.Common.Testing.NumericAssertExtensions.ShouldBeApproximatelyEqualTo
  nameWithType: NumericAssertExtensions.ShouldBeApproximatelyEqualTo
- uid: Benday.Common.Testing.NumericAssertExtensions.ShouldBeFinite(System.Double,System.String)
  name: ShouldBeFinite(double, string)
  href: api/Benday.Common.Testing.NumericAssertExtensions.html#Benday_Common_Testing_NumericAssertExtensions_ShouldBeFinite_System_Double_System_String_
  commentId: M:Benday.Common.Testing.NumericAssertExtensions.ShouldBeFinite(System.Double,System.String)
  name.vb: ShouldBeFinite(Double, String)
  fullName: Benday.Common.Testing.NumericAssertExtensions.ShouldBeFinite(double, string)
  fullName.vb: Benday.Common.Testing.NumericAssertExtensions.ShouldBeFinite(Double, String)
  nameWithType: NumericAssertExtensions.ShouldBeFinite(double, string)
  nameWithType.vb: NumericAssertExtensions.ShouldBeFinite(Double, String)
- uid: Benday.Common.Testing.NumericAssertExtensions.ShouldBeFinite(System.Single,System.String)
  name: ShouldBeFinite(float, string)
  href: api/Benday.Common.Testing.NumericAssertExtensions.html#Benday_Common_Testing_NumericAssertExtensions_ShouldBeFinite_System_Single_System_String_
  commentId: M:Benday.Common.Testing.NumericAssertExtensions.ShouldBeFinite(System.Single,System.String)
  name.vb: ShouldBeFinite(Single, String)
  fullName: Benday.Common.Testing.NumericAssertExtensions.ShouldBeFinite(float, string)
  fullName.vb: Benday.Common.Testing.NumericAssertExtensions.ShouldBeFinite(Single, String)
  nameWithType: NumericAssertExtensions.ShouldBeFinite(float, string)
  nameWithType.vb: NumericAssertExtensions.ShouldBeFinite(Single, String)
- uid: Benday.Common.Testing.NumericAssertExtensions.ShouldBeFinite*
  name: ShouldBeFinite
  href: api/Benday.Common.Testing.NumericAssertExtensions.html#Benday_Common_Testing_NumericAssertExtensions_ShouldBeFinite_
  commentId: Overload:Benday.Common.Testing.NumericAssertExtensions.ShouldBeFinite
  isSpec: "True"
  fullName: Benday.Common.Testing.NumericAssertExtensions.ShouldBeFinite
  nameWithType: NumericAssertExtensions.ShouldBeFinite
- uid: Benday.Common.Testing.NumericAssertExtensions.ShouldBeGreaterThan*
  name: ShouldBeGreaterThan
  href: api/Benday.Common.Testing.NumericAssertExtensions.html#Benday_Common_Testing_NumericAssertExtensions_ShouldBeGreaterThan_
  commentId: Overload:Benday.Common.Testing.NumericAssertExtensions.ShouldBeGreaterThan
  isSpec: "True"
  fullName: Benday.Common.Testing.NumericAssertExtensions.ShouldBeGreaterThan
  nameWithType: NumericAssertExtensions.ShouldBeGreaterThan
- uid: Benday.Common.Testing.NumericAssertExtensions.ShouldBeGreaterThanOrEqualTo*
  name: ShouldBeGreaterThanOrEqualTo
  href: api/Benday.Common.Testing.NumericAssertExtensions.html#Benday_Common_Testing_NumericAssertExtensions_ShouldBeGreaterThanOrEqualTo_
  commentId: Overload:Benday.Common.Testing.NumericAssertExtensions.ShouldBeGreaterThanOrEqualTo
  isSpec: "True"
  fullName: Benday.Common.Testing.NumericAssertExtensions.ShouldBeGreaterThanOrEqualTo
  nameWithType: NumericAssertExtensions.ShouldBeGreaterThanOrEqualTo
- uid: Benday.Common.Testing.NumericAssertExtensions.ShouldBeGreaterThanOrEqualTo``1(``0,``0,System.String)
  name: ShouldBeGreaterThanOrEqualTo<T>(T, T, string)
  href: api/Benday.Common.Testing.NumericAssertExtensions.html#Benday_Common_Testing_NumericAssertExtensions_ShouldBeGreaterThanOrEqualTo__1___0___0_System_String_
  commentId: M:Benday.Common.Testing.NumericAssertExtensions.ShouldBeGreaterThanOrEqualTo``1(``0,``0,System.String)
  name.vb: ShouldBeGreaterThanOrEqualTo(Of T)(T, T, String)
  fullName: Benday.Common.Testing.NumericAssertExtensions.ShouldBeGreaterThanOrEqualTo<T>(T, T, string)
  fullName.vb: Benday.Common.Testing.NumericAssertExtensions.ShouldBeGreaterThanOrEqualTo(Of T)(T, T, String)
  nameWithType: NumericAssertExtensions.ShouldBeGreaterThanOrEqualTo<T>(T, T, string)
  nameWithType.vb: NumericAssertExtensions.ShouldBeGreaterThanOrEqualTo(Of T)(T, T, String)
- uid: Benday.Common.Testing.NumericAssertExtensions.ShouldBeGreaterThan``1(``0,``0,System.String)
  name: ShouldBeGreaterThan<T>(T, T, string)
  href: api/Benday.Common.Testing.NumericAssertExtensions.html#Benday_Common_Testing_NumericAssertExtensions_ShouldBeGreaterThan__1___0___0_System_String_
  commentId: M:Benday.Common.Testing.NumericAssertExtensions.ShouldBeGreaterThan``1(``0,``0,System.String)
  name.vb: ShouldBeGreaterThan(Of T)(T, T, String)
  fullName: Benday.Common.Testing.NumericAssertExtensions.ShouldBeGreaterThan<T>(T, T, string)
  fullName.vb: Benday.Common.Testing.NumericAssertExtensions.ShouldBeGreaterThan(Of T)(T, T, String)
  nameWithType: NumericAssertExtensions.ShouldBeGreaterThan<T>(T, T, string)
  nameWithType.vb: NumericAssertExtensions.ShouldBeGreaterThan(Of T)(T, T, String)
- uid: Benday.Common.Testing.NumericAssertExtensions.ShouldBeInRange*
  name: ShouldBeInRange
  href: api/Benday.Common.Testing.NumericAssertExtensions.html#Benday_Common_Testing_NumericAssertExtensions_ShouldBeInRange_
  commentId: Overload:Benday.Common.Testing.NumericAssertExtensions.ShouldBeInRange
  isSpec: "True"
  fullName: Benday.Common.Testing.NumericAssertExtensions.ShouldBeInRange
  nameWithType: NumericAssertExtensions.ShouldBeInRange
- uid: Benday.Common.Testing.NumericAssertExtensions.ShouldBeInRange``1(``0,``0,``0,System.String)
  name: ShouldBeInRange<T>(T, T, T, string)
  href: api/Benday.Common.Testing.NumericAssertExtensions.html#Benday_Common_Testing_NumericAssertExtensions_ShouldBeInRange__1___0___0___0_System_String_
  commentId: M:Benday.Common.Testing.NumericAssertExtensions.ShouldBeInRange``1(``0,``0,``0,System.String)
  name.vb: ShouldBeInRange(Of T)(T, T, T, String)
  fullName: Benday.Common.Testing.NumericAssertExtensions.ShouldBeInRange<T>(T, T, T, string)
  fullName.vb: Benday.Common.Testing.NumericAssertExtensions.ShouldBeInRange(Of T)(T, T, T, String)
  nameWithType: NumericAssertExtensions.ShouldBeInRange<T>(T, T, T, string)
  nameWithType.vb: NumericAssertExtensions.ShouldBeInRange(Of T)(T, T, T, String)
- uid: Benday.Common.Testing.NumericAssertExtensions.ShouldBeLessThan*
  name: ShouldBeLessThan
  href: api/Benday.Common.Testing.NumericAssertExtensions.html#Benday_Common_Testing_NumericAssertExtensions_ShouldBeLessThan_
  commentId: Overload:Benday.Common.Testing.NumericAssertExtensions.ShouldBeLessThan
  isSpec: "True"
  fullName: Benday.Common.Testing.NumericAssertExtensions.ShouldBeLessThan
  nameWithType: NumericAssertExtensions.ShouldBeLessThan
- uid: Benday.Common.Testing.NumericAssertExtensions.ShouldBeLessThanOrEqualTo*
  name: ShouldBeLessThanOrEqualTo
  href: api/Benday.Common.Testing.NumericAssertExtensions.html#Benday_Common_Testing_NumericAssertExtensions_ShouldBeLessThanOrEqualTo_
  commentId: Overload:Benday.Common.Testing.NumericAssertExtensions.ShouldBeLessThanOrEqualTo
  isSpec: "True"
  fullName: Benday.Common.Testing.NumericAssertExtensions.ShouldBeLessThanOrEqualTo
  nameWithType: NumericAssertExtensions.ShouldBeLessThanOrEqualTo
- uid: Benday.Common.Testing.NumericAssertExtensions.ShouldBeLessThanOrEqualTo``1(``0,``0,System.String)
  name: ShouldBeLessThanOrEqualTo<T>(T, T, string)
  href: api/Benday.Common.Testing.NumericAssertExtensions.html#Benday_Common_Testing_NumericAssertExtensions_ShouldBeLessThanOrEqualTo__1___0___0_System_String_
  commentId: M:Benday.Common.Testing.NumericAssertExtensions.ShouldBeLessThanOrEqualTo``1(``0,``0,System.String)
  name.vb: ShouldBeLessThanOrEqualTo(Of T)(T, T, String)
  fullName: Benday.Common.Testing.NumericAssertExtensions.ShouldBeLessThanOrEqualTo<T>(T, T, string)
  fullName.vb: Benday.Common.Testing.NumericAssertExtensions.ShouldBeLessThanOrEqualTo(Of T)(T, T, String)
  nameWithType: NumericAssertExtensions.ShouldBeLessThanOrEqualTo<T>(T, T, string)
  nameWithType.vb: NumericAssertExtensions.ShouldBeLessThanOrEqualTo(Of T)(T, T, String)
- uid: Benday.Common.Testing.NumericAssertExtensions.ShouldBeLessThan``1(``0,``0,System.String)
  name: ShouldBeLessThan<T>(T, T, string)
  href: api/Benday.Common.Testing.NumericAssertExtensions.html#Benday_Common_Testing_NumericAssertExtensions_ShouldBeLessThan__1___0___0_System_String_
  commentId: M:Benday.Common.Testing.NumericAssertExtensions.ShouldBeLessThan``1(``0,``0,System.String)
  name.vb: ShouldBeLessThan(Of T)(T, T, String)
  fullName: Benday.Common.Testing.NumericAssertExtensions.ShouldBeLessThan<T>(T, T, string)
  fullName.vb: Benday.Common.Testing.NumericAssertExtensions.ShouldBeLessThan(Of T)(T, T, String)
  nameWithType: NumericAssertExtensions.ShouldBeLessThan<T>(T, T, string)
  nameWithType.vb: NumericAssertExtensions.ShouldBeLessThan(Of T)(T, T, String)
- uid: Benday.Common.Testing.NumericAssertExtensions.ShouldBeNegative*
  name: ShouldBeNegative
  href: api/Benday.Common.Testing.NumericAssertExtensions.html#Benday_Common_Testing_NumericAssertExtensions_ShouldBeNegative_
  commentId: Overload:Benday.Common.Testing.NumericAssertExtensions.ShouldBeNegative
  isSpec: "True"
  fullName: Benday.Common.Testing.NumericAssertExtensions.ShouldBeNegative
  nameWithType: NumericAssertExtensions.ShouldBeNegative
- uid: Benday.Common.Testing.NumericAssertExtensions.ShouldBeNegative``1(``0,System.String)
  name: ShouldBeNegative<T>(T, string)
  href: api/Benday.Common.Testing.NumericAssertExtensions.html#Benday_Common_Testing_NumericAssertExtensions_ShouldBeNegative__1___0_System_String_
  commentId: M:Benday.Common.Testing.NumericAssertExtensions.ShouldBeNegative``1(``0,System.String)
  name.vb: ShouldBeNegative(Of T)(T, String)
  fullName: Benday.Common.Testing.NumericAssertExtensions.ShouldBeNegative<T>(T, string)
  fullName.vb: Benday.Common.Testing.NumericAssertExtensions.ShouldBeNegative(Of T)(T, String)
  nameWithType: NumericAssertExtensions.ShouldBeNegative<T>(T, string)
  nameWithType.vb: NumericAssertExtensions.ShouldBeNegative(Of T)(T, String)
- uid: Benday.Common.Testing.NumericAssertExtensions.ShouldBePositive*
  name: ShouldBePositive
  href: api/Benday.Common.Testing.NumericAssertExtensions.html#Benday_Common_Testing_NumericAssertExtensions_ShouldBePositive_
  commentId: Overload:Benday.Common.Testing.NumericAssertExtensions.ShouldBePositive
  isSpec: "True"
  fullName: Benday.Common.Testing.NumericAssertExtensions.ShouldBePositive
  nameWithType: NumericAssertExtensions.ShouldBePositive
- uid: Benday.Common.Testing.NumericAssertExtensions.ShouldBePositive``1(``0,System.String)
  name: ShouldBePositive<T>(T, string)
  href: api/Benday.Common.Testing.NumericAssertExtensions.html#Benday_Common_Testing_NumericAssertExtensions_ShouldBePositive__1___0_System_String_
  commentId: M:Benday.Common.Testing.NumericAssertExtensions.ShouldBePositive``1(``0,System.String)
  name.vb: ShouldBePositive(Of T)(T, String)
  fullName: Benday.Common.Testing.NumericAssertExtensions.ShouldBePositive<T>(T, string)
  fullName.vb: Benday.Common.Testing.NumericAssertExtensions.ShouldBePositive(Of T)(T, String)
  nameWithType: NumericAssertExtensions.ShouldBePositive<T>(T, string)
  nameWithType.vb: NumericAssertExtensions.ShouldBePositive(Of T)(T, String)
- uid: Benday.Common.Testing.NumericAssertExtensions.ShouldBeZero*
  name: ShouldBeZero
  href: api/Benday.Common.Testing.NumericAssertExtensions.html#Benday_Common_Testing_NumericAssertExtensions_ShouldBeZero_
  commentId: Overload:Benday.Common.Testing.NumericAssertExtensions.ShouldBeZero
  isSpec: "True"
  fullName: Benday.Common.Testing.NumericAssertExtensions.ShouldBeZero
  nameWithType: NumericAssertExtensions.ShouldBeZero
- uid: Benday.Common.Testing.NumericAssertExtensions.ShouldBeZero``1(``0,System.String)
  name: ShouldBeZero<T>(T, string)
  href: api/Benday.Common.Testing.NumericAssertExtensions.html#Benday_Common_Testing_NumericAssertExtensions_ShouldBeZero__1___0_System_String_
  commentId: M:Benday.Common.Testing.NumericAssertExtensions.ShouldBeZero``1(``0,System.String)
  name.vb: ShouldBeZero(Of T)(T, String)
  fullName: Benday.Common.Testing.NumericAssertExtensions.ShouldBeZero<T>(T, string)
  fullName.vb: Benday.Common.Testing.NumericAssertExtensions.ShouldBeZero(Of T)(T, String)
  nameWithType: NumericAssertExtensions.ShouldBeZero<T>(T, string)
  nameWithType.vb: NumericAssertExtensions.ShouldBeZero(Of T)(T, String)
- uid: Benday.Common.Testing.NumericAssertExtensions.ShouldNotBeInRange*
  name: ShouldNotBeInRange
  href: api/Benday.Common.Testing.NumericAssertExtensions.html#Benday_Common_Testing_NumericAssertExtensions_ShouldNotBeInRange_
  commentId: Overload:Benday.Common.Testing.NumericAssertExtensions.ShouldNotBeInRange
  isSpec: "True"
  fullName: Benday.Common.Testing.NumericAssertExtensions.ShouldNotBeInRange
  nameWithType: NumericAssertExtensions.ShouldNotBeInRange
- uid: Benday.Common.Testing.NumericAssertExtensions.ShouldNotBeInRange``1(``0,``0,``0,System.String)
  name: ShouldNotBeInRange<T>(T, T, T, string)
  href: api/Benday.Common.Testing.NumericAssertExtensions.html#Benday_Common_Testing_NumericAssertExtensions_ShouldNotBeInRange__1___0___0___0_System_String_
  commentId: M:Benday.Common.Testing.NumericAssertExtensions.ShouldNotBeInRange``1(``0,``0,``0,System.String)
  name.vb: ShouldNotBeInRange(Of T)(T, T, T, String)
  fullName: Benday.Common.Testing.NumericAssertExtensions.ShouldNotBeInRange<T>(T, T, T, string)
  fullName.vb: Benday.Common.Testing.NumericAssertExtensions.ShouldNotBeInRange(Of T)(T, T, T, String)
  nameWithType: NumericAssertExtensions.ShouldNotBeInRange<T>(T, T, T, string)
  nameWithType.vb: NumericAssertExtensions.ShouldNotBeInRange(Of T)(T, T, T, String)
- uid: Benday.Common.Testing.NumericAssertExtensions.ShouldNotBeNaN(System.Double,System.String)
  name: ShouldNotBeNaN(double, string)
  href: api/Benday.Common.Testing.NumericAssertExtensions.html#Benday_Common_Testing_NumericAssertExtensions_ShouldNotBeNaN_System_Double_System_String_
  commentId: M:Benday.Common.Testing.NumericAssertExtensions.ShouldNotBeNaN(System.Double,System.String)
  name.vb: ShouldNotBeNaN(Double, String)
  fullName: Benday.Common.Testing.NumericAssertExtensions.ShouldNotBeNaN(double, string)
  fullName.vb: Benday.Common.Testing.NumericAssertExtensions.ShouldNotBeNaN(Double, String)
  nameWithType: NumericAssertExtensions.ShouldNotBeNaN(double, string)
  nameWithType.vb: NumericAssertExtensions.ShouldNotBeNaN(Double, String)
- uid: Benday.Common.Testing.NumericAssertExtensions.ShouldNotBeNaN(System.Single,System.String)
  name: ShouldNotBeNaN(float, string)
  href: api/Benday.Common.Testing.NumericAssertExtensions.html#Benday_Common_Testing_NumericAssertExtensions_ShouldNotBeNaN_System_Single_System_String_
  commentId: M:Benday.Common.Testing.NumericAssertExtensions.ShouldNotBeNaN(System.Single,System.String)
  name.vb: ShouldNotBeNaN(Single, String)
  fullName: Benday.Common.Testing.NumericAssertExtensions.ShouldNotBeNaN(float, string)
  fullName.vb: Benday.Common.Testing.NumericAssertExtensions.ShouldNotBeNaN(Single, String)
  nameWithType: NumericAssertExtensions.ShouldNotBeNaN(float, string)
  nameWithType.vb: NumericAssertExtensions.ShouldNotBeNaN(Single, String)
- uid: Benday.Common.Testing.NumericAssertExtensions.ShouldNotBeNaN*
  name: ShouldNotBeNaN
  href: api/Benday.Common.Testing.NumericAssertExtensions.html#Benday_Common_Testing_NumericAssertExtensions_ShouldNotBeNaN_
  commentId: Overload:Benday.Common.Testing.NumericAssertExtensions.ShouldNotBeNaN
  isSpec: "True"
  fullName: Benday.Common.Testing.NumericAssertExtensions.ShouldNotBeNaN
  nameWithType: NumericAssertExtensions.ShouldNotBeNaN
- uid: Benday.Common.Testing.NumericAssertExtensions.ShouldNotBeZero*
  name: ShouldNotBeZero
  href: api/Benday.Common.Testing.NumericAssertExtensions.html#Benday_Common_Testing_NumericAssertExtensions_ShouldNotBeZero_
  commentId: Overload:Benday.Common.Testing.NumericAssertExtensions.ShouldNotBeZero
  isSpec: "True"
  fullName: Benday.Common.Testing.NumericAssertExtensions.ShouldNotBeZero
  nameWithType: NumericAssertExtensions.ShouldNotBeZero
- uid: Benday.Common.Testing.NumericAssertExtensions.ShouldNotBeZero``1(``0,System.String)
  name: ShouldNotBeZero<T>(T, string)
  href: api/Benday.Common.Testing.NumericAssertExtensions.html#Benday_Common_Testing_NumericAssertExtensions_ShouldNotBeZero__1___0_System_String_
  commentId: M:Benday.Common.Testing.NumericAssertExtensions.ShouldNotBeZero``1(``0,System.String)
  name.vb: ShouldNotBeZero(Of T)(T, String)
  fullName: Benday.Common.Testing.NumericAssertExtensions.ShouldNotBeZero<T>(T, string)
  fullName.vb: Benday.Common.Testing.NumericAssertExtensions.ShouldNotBeZero(Of T)(T, String)
  nameWithType: NumericAssertExtensions.ShouldNotBeZero<T>(T, string)
  nameWithType.vb: NumericAssertExtensions.ShouldNotBeZero(Of T)(T, String)
- uid: Benday.Common.Testing.ObjectAssertExtensions
  name: ObjectAssertExtensions
  href: api/Benday.Common.Testing.ObjectAssertExtensions.html
  commentId: T:Benday.Common.Testing.ObjectAssertExtensions
  fullName: Benday.Common.Testing.ObjectAssertExtensions
  nameWithType: ObjectAssertExtensions
- uid: Benday.Common.Testing.ObjectAssertExtensions.ShouldBeFalse(System.Boolean,System.String)
  name: ShouldBeFalse(bool, string)
  href: api/Benday.Common.Testing.ObjectAssertExtensions.html#Benday_Common_Testing_ObjectAssertExtensions_ShouldBeFalse_System_Boolean_System_String_
  commentId: M:Benday.Common.Testing.ObjectAssertExtensions.ShouldBeFalse(System.Boolean,System.String)
  name.vb: ShouldBeFalse(Boolean, String)
  fullName: Benday.Common.Testing.ObjectAssertExtensions.ShouldBeFalse(bool, string)
  fullName.vb: Benday.Common.Testing.ObjectAssertExtensions.ShouldBeFalse(Boolean, String)
  nameWithType: ObjectAssertExtensions.ShouldBeFalse(bool, string)
  nameWithType.vb: ObjectAssertExtensions.ShouldBeFalse(Boolean, String)
- uid: Benday.Common.Testing.ObjectAssertExtensions.ShouldBeFalse*
  name: ShouldBeFalse
  href: api/Benday.Common.Testing.ObjectAssertExtensions.html#Benday_Common_Testing_ObjectAssertExtensions_ShouldBeFalse_
  commentId: Overload:Benday.Common.Testing.ObjectAssertExtensions.ShouldBeFalse
  isSpec: "True"
  fullName: Benday.Common.Testing.ObjectAssertExtensions.ShouldBeFalse
  nameWithType: ObjectAssertExtensions.ShouldBeFalse
- uid: Benday.Common.Testing.ObjectAssertExtensions.ShouldBeNull*
  name: ShouldBeNull
  href: api/Benday.Common.Testing.ObjectAssertExtensions.html#Benday_Common_Testing_ObjectAssertExtensions_ShouldBeNull_
  commentId: Overload:Benday.Common.Testing.ObjectAssertExtensions.ShouldBeNull
  isSpec: "True"
  fullName: Benday.Common.Testing.ObjectAssertExtensions.ShouldBeNull
  nameWithType: ObjectAssertExtensions.ShouldBeNull
- uid: Benday.Common.Testing.ObjectAssertExtensions.ShouldBeNull``1(``0,System.String)
  name: ShouldBeNull<T>(T?, string)
  href: api/Benday.Common.Testing.ObjectAssertExtensions.html#Benday_Common_Testing_ObjectAssertExtensions_ShouldBeNull__1___0_System_String_
  commentId: M:Benday.Common.Testing.ObjectAssertExtensions.ShouldBeNull``1(``0,System.String)
  name.vb: ShouldBeNull(Of T)(T, String)
  fullName: Benday.Common.Testing.ObjectAssertExtensions.ShouldBeNull<T>(T?, string)
  fullName.vb: Benday.Common.Testing.ObjectAssertExtensions.ShouldBeNull(Of T)(T, String)
  nameWithType: ObjectAssertExtensions.ShouldBeNull<T>(T?, string)
  nameWithType.vb: ObjectAssertExtensions.ShouldBeNull(Of T)(T, String)
- uid: Benday.Common.Testing.ObjectAssertExtensions.ShouldBeOfType*
  name: ShouldBeOfType
  href: api/Benday.Common.Testing.ObjectAssertExtensions.html#Benday_Common_Testing_ObjectAssertExtensions_ShouldBeOfType_
  commentId: Overload:Benday.Common.Testing.ObjectAssertExtensions.ShouldBeOfType
  isSpec: "True"
  fullName: Benday.Common.Testing.ObjectAssertExtensions.ShouldBeOfType
  nameWithType: ObjectAssertExtensions.ShouldBeOfType
- uid: Benday.Common.Testing.ObjectAssertExtensions.ShouldBeOfType``1(System.Object,System.String)
  name: ShouldBeOfType<T>(object?, string)
  href: api/Benday.Common.Testing.ObjectAssertExtensions.html#Benday_Common_Testing_ObjectAssertExtensions_ShouldBeOfType__1_System_Object_System_String_
  commentId: M:Benday.Common.Testing.ObjectAssertExtensions.ShouldBeOfType``1(System.Object,System.String)
  name.vb: ShouldBeOfType(Of T)(Object, String)
  fullName: Benday.Common.Testing.ObjectAssertExtensions.ShouldBeOfType<T>(object?, string)
  fullName.vb: Benday.Common.Testing.ObjectAssertExtensions.ShouldBeOfType(Of T)(Object, String)
  nameWithType: ObjectAssertExtensions.ShouldBeOfType<T>(object?, string)
  nameWithType.vb: ObjectAssertExtensions.ShouldBeOfType(Of T)(Object, String)
- uid: Benday.Common.Testing.ObjectAssertExtensions.ShouldBeSameAs*
  name: ShouldBeSameAs
  href: api/Benday.Common.Testing.ObjectAssertExtensions.html#Benday_Common_Testing_ObjectAssertExtensions_ShouldBeSameAs_
  commentId: Overload:Benday.Common.Testing.ObjectAssertExtensions.ShouldBeSameAs
  isSpec: "True"
  fullName: Benday.Common.Testing.ObjectAssertExtensions.ShouldBeSameAs
  nameWithType: ObjectAssertExtensions.ShouldBeSameAs
- uid: Benday.Common.Testing.ObjectAssertExtensions.ShouldBeSameAs``1(``0,``0,System.String)
  name: ShouldBeSameAs<T>(T, T, string)
  href: api/Benday.Common.Testing.ObjectAssertExtensions.html#Benday_Common_Testing_ObjectAssertExtensions_ShouldBeSameAs__1___0___0_System_String_
  commentId: M:Benday.Common.Testing.ObjectAssertExtensions.ShouldBeSameAs``1(``0,``0,System.String)
  name.vb: ShouldBeSameAs(Of T)(T, T, String)
  fullName: Benday.Common.Testing.ObjectAssertExtensions.ShouldBeSameAs<T>(T, T, string)
  fullName.vb: Benday.Common.Testing.ObjectAssertExtensions.ShouldBeSameAs(Of T)(T, T, String)
  nameWithType: ObjectAssertExtensions.ShouldBeSameAs<T>(T, T, string)
  nameWithType.vb: ObjectAssertExtensions.ShouldBeSameAs(Of T)(T, T, String)
- uid: Benday.Common.Testing.ObjectAssertExtensions.ShouldBeTrue(System.Boolean,System.String)
  name: ShouldBeTrue(bool, string)
  href: api/Benday.Common.Testing.ObjectAssertExtensions.html#Benday_Common_Testing_ObjectAssertExtensions_ShouldBeTrue_System_Boolean_System_String_
  commentId: M:Benday.Common.Testing.ObjectAssertExtensions.ShouldBeTrue(System.Boolean,System.String)
  name.vb: ShouldBeTrue(Boolean, String)
  fullName: Benday.Common.Testing.ObjectAssertExtensions.ShouldBeTrue(bool, string)
  fullName.vb: Benday.Common.Testing.ObjectAssertExtensions.ShouldBeTrue(Boolean, String)
  nameWithType: ObjectAssertExtensions.ShouldBeTrue(bool, string)
  nameWithType.vb: ObjectAssertExtensions.ShouldBeTrue(Boolean, String)
- uid: Benday.Common.Testing.ObjectAssertExtensions.ShouldBeTrue*
  name: ShouldBeTrue
  href: api/Benday.Common.Testing.ObjectAssertExtensions.html#Benday_Common_Testing_ObjectAssertExtensions_ShouldBeTrue_
  commentId: Overload:Benday.Common.Testing.ObjectAssertExtensions.ShouldBeTrue
  isSpec: "True"
  fullName: Benday.Common.Testing.ObjectAssertExtensions.ShouldBeTrue
  nameWithType: ObjectAssertExtensions.ShouldBeTrue
- uid: Benday.Common.Testing.ObjectAssertExtensions.ShouldEqual*
  name: ShouldEqual
  href: api/Benday.Common.Testing.ObjectAssertExtensions.html#Benday_Common_Testing_ObjectAssertExtensions_ShouldEqual_
  commentId: Overload:Benday.Common.Testing.ObjectAssertExtensions.ShouldEqual
  isSpec: "True"
  fullName: Benday.Common.Testing.ObjectAssertExtensions.ShouldEqual
  nameWithType: ObjectAssertExtensions.ShouldEqual
- uid: Benday.Common.Testing.ObjectAssertExtensions.ShouldEqual``1(``0,``0,System.String)
  name: ShouldEqual<T>(T, T, string)
  href: api/Benday.Common.Testing.ObjectAssertExtensions.html#Benday_Common_Testing_ObjectAssertExtensions_ShouldEqual__1___0___0_System_String_
  commentId: M:Benday.Common.Testing.ObjectAssertExtensions.ShouldEqual``1(``0,``0,System.String)
  name.vb: ShouldEqual(Of T)(T, T, String)
  fullName: Benday.Common.Testing.ObjectAssertExtensions.ShouldEqual<T>(T, T, string)
  fullName.vb: Benday.Common.Testing.ObjectAssertExtensions.ShouldEqual(Of T)(T, T, String)
  nameWithType: ObjectAssertExtensions.ShouldEqual<T>(T, T, string)
  nameWithType.vb: ObjectAssertExtensions.ShouldEqual(Of T)(T, T, String)
- uid: Benday.Common.Testing.ObjectAssertExtensions.ShouldNotBeNull*
  name: ShouldNotBeNull
  href: api/Benday.Common.Testing.ObjectAssertExtensions.html#Benday_Common_Testing_ObjectAssertExtensions_ShouldNotBeNull_
  commentId: Overload:Benday.Common.Testing.ObjectAssertExtensions.ShouldNotBeNull
  isSpec: "True"
  fullName: Benday.Common.Testing.ObjectAssertExtensions.ShouldNotBeNull
  nameWithType: ObjectAssertExtensions.ShouldNotBeNull
- uid: Benday.Common.Testing.ObjectAssertExtensions.ShouldNotBeNull``1(``0,System.String)
  name: ShouldNotBeNull<T>(T?, string)
  href: api/Benday.Common.Testing.ObjectAssertExtensions.html#Benday_Common_Testing_ObjectAssertExtensions_ShouldNotBeNull__1___0_System_String_
  commentId: M:Benday.Common.Testing.ObjectAssertExtensions.ShouldNotBeNull``1(``0,System.String)
  name.vb: ShouldNotBeNull(Of T)(T, String)
  fullName: Benday.Common.Testing.ObjectAssertExtensions.ShouldNotBeNull<T>(T?, string)
  fullName.vb: Benday.Common.Testing.ObjectAssertExtensions.ShouldNotBeNull(Of T)(T, String)
  nameWithType: ObjectAssertExtensions.ShouldNotBeNull<T>(T?, string)
  nameWithType.vb: ObjectAssertExtensions.ShouldNotBeNull(Of T)(T, String)
- uid: Benday.Common.Testing.ObjectAssertExtensions.ShouldNotBeOfType*
  name: ShouldNotBeOfType
  href: api/Benday.Common.Testing.ObjectAssertExtensions.html#Benday_Common_Testing_ObjectAssertExtensions_ShouldNotBeOfType_
  commentId: Overload:Benday.Common.Testing.ObjectAssertExtensions.ShouldNotBeOfType
  isSpec: "True"
  fullName: Benday.Common.Testing.ObjectAssertExtensions.ShouldNotBeOfType
  nameWithType: ObjectAssertExtensions.ShouldNotBeOfType
- uid: Benday.Common.Testing.ObjectAssertExtensions.ShouldNotBeOfType``1(System.Object,System.String)
  name: ShouldNotBeOfType<T>(object?, string)
  href: api/Benday.Common.Testing.ObjectAssertExtensions.html#Benday_Common_Testing_ObjectAssertExtensions_ShouldNotBeOfType__1_System_Object_System_String_
  commentId: M:Benday.Common.Testing.ObjectAssertExtensions.ShouldNotBeOfType``1(System.Object,System.String)
  name.vb: ShouldNotBeOfType(Of T)(Object, String)
  fullName: Benday.Common.Testing.ObjectAssertExtensions.ShouldNotBeOfType<T>(object?, string)
  fullName.vb: Benday.Common.Testing.ObjectAssertExtensions.ShouldNotBeOfType(Of T)(Object, String)
  nameWithType: ObjectAssertExtensions.ShouldNotBeOfType<T>(object?, string)
  nameWithType.vb: ObjectAssertExtensions.ShouldNotBeOfType(Of T)(Object, String)
- uid: Benday.Common.Testing.ObjectAssertExtensions.ShouldNotBeSameAs*
  name: ShouldNotBeSameAs
  href: api/Benday.Common.Testing.ObjectAssertExtensions.html#Benday_Common_Testing_ObjectAssertExtensions_ShouldNotBeSameAs_
  commentId: Overload:Benday.Common.Testing.ObjectAssertExtensions.ShouldNotBeSameAs
  isSpec: "True"
  fullName: Benday.Common.Testing.ObjectAssertExtensions.ShouldNotBeSameAs
  nameWithType: ObjectAssertExtensions.ShouldNotBeSameAs
- uid: Benday.Common.Testing.ObjectAssertExtensions.ShouldNotBeSameAs``1(``0,``0,System.String)
  name: ShouldNotBeSameAs<T>(T, T, string)
  href: api/Benday.Common.Testing.ObjectAssertExtensions.html#Benday_Common_Testing_ObjectAssertExtensions_ShouldNotBeSameAs__1___0___0_System_String_
  commentId: M:Benday.Common.Testing.ObjectAssertExtensions.ShouldNotBeSameAs``1(``0,``0,System.String)
  name.vb: ShouldNotBeSameAs(Of T)(T, T, String)
  fullName: Benday.Common.Testing.ObjectAssertExtensions.ShouldNotBeSameAs<T>(T, T, string)
  fullName.vb: Benday.Common.Testing.ObjectAssertExtensions.ShouldNotBeSameAs(Of T)(T, T, String)
  nameWithType: ObjectAssertExtensions.ShouldNotBeSameAs<T>(T, T, string)
  nameWithType.vb: ObjectAssertExtensions.ShouldNotBeSameAs(Of T)(T, T, String)
- uid: Benday.Common.Testing.ObjectAssertExtensions.ShouldNotEqual*
  name: ShouldNotEqual
  href: api/Benday.Common.Testing.ObjectAssertExtensions.html#Benday_Common_Testing_ObjectAssertExtensions_ShouldNotEqual_
  commentId: Overload:Benday.Common.Testing.ObjectAssertExtensions.ShouldNotEqual
  isSpec: "True"
  fullName: Benday.Common.Testing.ObjectAssertExtensions.ShouldNotEqual
  nameWithType: ObjectAssertExtensions.ShouldNotEqual
- uid: Benday.Common.Testing.ObjectAssertExtensions.ShouldNotEqual``1(``0,``0,System.String)
  name: ShouldNotEqual<T>(T, T, string)
  href: api/Benday.Common.Testing.ObjectAssertExtensions.html#Benday_Common_Testing_ObjectAssertExtensions_ShouldNotEqual__1___0___0_System_String_
  commentId: M:Benday.Common.Testing.ObjectAssertExtensions.ShouldNotEqual``1(``0,``0,System.String)
  name.vb: ShouldNotEqual(Of T)(T, T, String)
  fullName: Benday.Common.Testing.ObjectAssertExtensions.ShouldNotEqual<T>(T, T, string)
  fullName.vb: Benday.Common.Testing.ObjectAssertExtensions.ShouldNotEqual(Of T)(T, T, String)
  nameWithType: ObjectAssertExtensions.ShouldNotEqual<T>(T, T, string)
  nameWithType.vb: ObjectAssertExtensions.ShouldNotEqual(Of T)(T, T, String)
- uid: Benday.Common.Testing.ObjectAssertExtensions.ShouldNotThrow(System.Action,System.String)
  name: ShouldNotThrow(Action, string)
  href: api/Benday.Common.Testing.ObjectAssertExtensions.html#Benday_Common_Testing_ObjectAssertExtensions_ShouldNotThrow_System_Action_System_String_
  commentId: M:Benday.Common.Testing.ObjectAssertExtensions.ShouldNotThrow(System.Action,System.String)
  name.vb: ShouldNotThrow(Action, String)
  fullName: Benday.Common.Testing.ObjectAssertExtensions.ShouldNotThrow(System.Action, string)
  fullName.vb: Benday.Common.Testing.ObjectAssertExtensions.ShouldNotThrow(System.Action, String)
  nameWithType: ObjectAssertExtensions.ShouldNotThrow(Action, string)
  nameWithType.vb: ObjectAssertExtensions.ShouldNotThrow(Action, String)
- uid: Benday.Common.Testing.ObjectAssertExtensions.ShouldNotThrow*
  name: ShouldNotThrow
  href: api/Benday.Common.Testing.ObjectAssertExtensions.html#Benday_Common_Testing_ObjectAssertExtensions_ShouldNotThrow_
  commentId: Overload:Benday.Common.Testing.ObjectAssertExtensions.ShouldNotThrow
  isSpec: "True"
  fullName: Benday.Common.Testing.ObjectAssertExtensions.ShouldNotThrow
  nameWithType: ObjectAssertExtensions.ShouldNotThrow
- uid: Benday.Common.Testing.ObjectAssertExtensions.ShouldThrow*
  name: ShouldThrow
  href: api/Benday.Common.Testing.ObjectAssertExtensions.html#Benday_Common_Testing_ObjectAssertExtensions_ShouldThrow_
  commentId: Overload:Benday.Common.Testing.ObjectAssertExtensions.ShouldThrow
  isSpec: "True"
  fullName: Benday.Common.Testing.ObjectAssertExtensions.ShouldThrow
  nameWithType: ObjectAssertExtensions.ShouldThrow
- uid: Benday.Common.Testing.ObjectAssertExtensions.ShouldThrow``1(System.Action,System.String)
  name: ShouldThrow<T>(Action, string)
  href: api/Benday.Common.Testing.ObjectAssertExtensions.html#Benday_Common_Testing_ObjectAssertExtensions_ShouldThrow__1_System_Action_System_String_
  commentId: M:Benday.Common.Testing.ObjectAssertExtensions.ShouldThrow``1(System.Action,System.String)
  name.vb: ShouldThrow(Of T)(Action, String)
  fullName: Benday.Common.Testing.ObjectAssertExtensions.ShouldThrow<T>(System.Action, string)
  fullName.vb: Benday.Common.Testing.ObjectAssertExtensions.ShouldThrow(Of T)(System.Action, String)
  nameWithType: ObjectAssertExtensions.ShouldThrow<T>(Action, string)
  nameWithType.vb: ObjectAssertExtensions.ShouldThrow(Of T)(Action, String)
- uid: Benday.Common.Testing.StringAssert
  name: StringAssert
  href: api/Benday.Common.Testing.StringAssert.html
  commentId: T:Benday.Common.Testing.StringAssert
  fullName: Benday.Common.Testing.StringAssert
  nameWithType: StringAssert
- uid: Benday.Common.Testing.StringAssert.AreEqualIgnoreCase(System.String,System.String,System.String)
  name: AreEqualIgnoreCase(string, string, string)
  href: api/Benday.Common.Testing.StringAssert.html#Benday_Common_Testing_StringAssert_AreEqualIgnoreCase_System_String_System_String_System_String_
  commentId: M:Benday.Common.Testing.StringAssert.AreEqualIgnoreCase(System.String,System.String,System.String)
  name.vb: AreEqualIgnoreCase(String, String, String)
  fullName: Benday.Common.Testing.StringAssert.AreEqualIgnoreCase(string, string, string)
  fullName.vb: Benday.Common.Testing.StringAssert.AreEqualIgnoreCase(String, String, String)
  nameWithType: StringAssert.AreEqualIgnoreCase(string, string, string)
  nameWithType.vb: StringAssert.AreEqualIgnoreCase(String, String, String)
- uid: Benday.Common.Testing.StringAssert.AreEqualIgnoreCase*
  name: AreEqualIgnoreCase
  href: api/Benday.Common.Testing.StringAssert.html#Benday_Common_Testing_StringAssert_AreEqualIgnoreCase_
  commentId: Overload:Benday.Common.Testing.StringAssert.AreEqualIgnoreCase
  isSpec: "True"
  fullName: Benday.Common.Testing.StringAssert.AreEqualIgnoreCase
  nameWithType: StringAssert.AreEqualIgnoreCase
- uid: Benday.Common.Testing.StringAssert.AreNotEqualIgnoreCase(System.String,System.String,System.String)
  name: AreNotEqualIgnoreCase(string, string, string)
  href: api/Benday.Common.Testing.StringAssert.html#Benday_Common_Testing_StringAssert_AreNotEqualIgnoreCase_System_String_System_String_System_String_
  commentId: M:Benday.Common.Testing.StringAssert.AreNotEqualIgnoreCase(System.String,System.String,System.String)
  name.vb: AreNotEqualIgnoreCase(String, String, String)
  fullName: Benday.Common.Testing.StringAssert.AreNotEqualIgnoreCase(string, string, string)
  fullName.vb: Benday.Common.Testing.StringAssert.AreNotEqualIgnoreCase(String, String, String)
  nameWithType: StringAssert.AreNotEqualIgnoreCase(string, string, string)
  nameWithType.vb: StringAssert.AreNotEqualIgnoreCase(String, String, String)
- uid: Benday.Common.Testing.StringAssert.AreNotEqualIgnoreCase*
  name: AreNotEqualIgnoreCase
  href: api/Benday.Common.Testing.StringAssert.html#Benday_Common_Testing_StringAssert_AreNotEqualIgnoreCase_
  commentId: Overload:Benday.Common.Testing.StringAssert.AreNotEqualIgnoreCase
  isSpec: "True"
  fullName: Benday.Common.Testing.StringAssert.AreNotEqualIgnoreCase
  nameWithType: StringAssert.AreNotEqualIgnoreCase
- uid: Benday.Common.Testing.StringAssert.Contains(System.String,System.String,System.String)
  name: Contains(string, string, string)
  href: api/Benday.Common.Testing.StringAssert.html#Benday_Common_Testing_StringAssert_Contains_System_String_System_String_System_String_
  commentId: M:Benday.Common.Testing.StringAssert.Contains(System.String,System.String,System.String)
  name.vb: Contains(String, String, String)
  fullName: Benday.Common.Testing.StringAssert.Contains(string, string, string)
  fullName.vb: Benday.Common.Testing.StringAssert.Contains(String, String, String)
  nameWithType: StringAssert.Contains(string, string, string)
  nameWithType.vb: StringAssert.Contains(String, String, String)
- uid: Benday.Common.Testing.StringAssert.Contains(System.String,System.String,System.StringComparison,System.String)
  name: Contains(string, string, StringComparison, string)
  href: api/Benday.Common.Testing.StringAssert.html#Benday_Common_Testing_StringAssert_Contains_System_String_System_String_System_StringComparison_System_String_
  commentId: M:Benday.Common.Testing.StringAssert.Contains(System.String,System.String,System.StringComparison,System.String)
  name.vb: Contains(String, String, StringComparison, String)
  fullName: Benday.Common.Testing.StringAssert.Contains(string, string, System.StringComparison, string)
  fullName.vb: Benday.Common.Testing.StringAssert.Contains(String, String, System.StringComparison, String)
  nameWithType: StringAssert.Contains(string, string, StringComparison, string)
  nameWithType.vb: StringAssert.Contains(String, String, StringComparison, String)
- uid: Benday.Common.Testing.StringAssert.Contains*
  name: Contains
  href: api/Benday.Common.Testing.StringAssert.html#Benday_Common_Testing_StringAssert_Contains_
  commentId: Overload:Benday.Common.Testing.StringAssert.Contains
  isSpec: "True"
  fullName: Benday.Common.Testing.StringAssert.Contains
  nameWithType: StringAssert.Contains
- uid: Benday.Common.Testing.StringAssert.DoesNotContain(System.String,System.String,System.String)
  name: DoesNotContain(string, string, string)
  href: api/Benday.Common.Testing.StringAssert.html#Benday_Common_Testing_StringAssert_DoesNotContain_System_String_System_String_System_String_
  commentId: M:Benday.Common.Testing.StringAssert.DoesNotContain(System.String,System.String,System.String)
  name.vb: DoesNotContain(String, String, String)
  fullName: Benday.Common.Testing.StringAssert.DoesNotContain(string, string, string)
  fullName.vb: Benday.Common.Testing.StringAssert.DoesNotContain(String, String, String)
  nameWithType: StringAssert.DoesNotContain(string, string, string)
  nameWithType.vb: StringAssert.DoesNotContain(String, String, String)
- uid: Benday.Common.Testing.StringAssert.DoesNotContain(System.String,System.String,System.StringComparison,System.String)
  name: DoesNotContain(string, string, StringComparison, string)
  href: api/Benday.Common.Testing.StringAssert.html#Benday_Common_Testing_StringAssert_DoesNotContain_System_String_System_String_System_StringComparison_System_String_
  commentId: M:Benday.Common.Testing.StringAssert.DoesNotContain(System.String,System.String,System.StringComparison,System.String)
  name.vb: DoesNotContain(String, String, StringComparison, String)
  fullName: Benday.Common.Testing.StringAssert.DoesNotContain(string, string, System.StringComparison, string)
  fullName.vb: Benday.Common.Testing.StringAssert.DoesNotContain(String, String, System.StringComparison, String)
  nameWithType: StringAssert.DoesNotContain(string, string, StringComparison, string)
  nameWithType.vb: StringAssert.DoesNotContain(String, String, StringComparison, String)
- uid: Benday.Common.Testing.StringAssert.DoesNotContain*
  name: DoesNotContain
  href: api/Benday.Common.Testing.StringAssert.html#Benday_Common_Testing_StringAssert_DoesNotContain_
  commentId: Overload:Benday.Common.Testing.StringAssert.DoesNotContain
  isSpec: "True"
  fullName: Benday.Common.Testing.StringAssert.DoesNotContain
  nameWithType: StringAssert.DoesNotContain
- uid: Benday.Common.Testing.StringAssert.DoesNotMatch(System.String,System.String,System.String)
  name: DoesNotMatch(string, string, string)
  href: api/Benday.Common.Testing.StringAssert.html#Benday_Common_Testing_StringAssert_DoesNotMatch_System_String_System_String_System_String_
  commentId: M:Benday.Common.Testing.StringAssert.DoesNotMatch(System.String,System.String,System.String)
  name.vb: DoesNotMatch(String, String, String)
  fullName: Benday.Common.Testing.StringAssert.DoesNotMatch(string, string, string)
  fullName.vb: Benday.Common.Testing.StringAssert.DoesNotMatch(String, String, String)
  nameWithType: StringAssert.DoesNotMatch(string, string, string)
  nameWithType.vb: StringAssert.DoesNotMatch(String, String, String)
- uid: Benday.Common.Testing.StringAssert.DoesNotMatch(System.String,System.String,System.Text.RegularExpressions.RegexOptions,System.String)
  name: DoesNotMatch(string, string, RegexOptions, string)
  href: api/Benday.Common.Testing.StringAssert.html#Benday_Common_Testing_StringAssert_DoesNotMatch_System_String_System_String_System_Text_RegularExpressions_RegexOptions_System_String_
  commentId: M:Benday.Common.Testing.StringAssert.DoesNotMatch(System.String,System.String,System.Text.RegularExpressions.RegexOptions,System.String)
  name.vb: DoesNotMatch(String, String, RegexOptions, String)
  fullName: Benday.Common.Testing.StringAssert.DoesNotMatch(string, string, System.Text.RegularExpressions.RegexOptions, string)
  fullName.vb: Benday.Common.Testing.StringAssert.DoesNotMatch(String, String, System.Text.RegularExpressions.RegexOptions, String)
  nameWithType: StringAssert.DoesNotMatch(string, string, RegexOptions, string)
  nameWithType.vb: StringAssert.DoesNotMatch(String, String, RegexOptions, String)
- uid: Benday.Common.Testing.StringAssert.DoesNotMatch*
  name: DoesNotMatch
  href: api/Benday.Common.Testing.StringAssert.html#Benday_Common_Testing_StringAssert_DoesNotMatch_
  commentId: Overload:Benday.Common.Testing.StringAssert.DoesNotMatch
  isSpec: "True"
  fullName: Benday.Common.Testing.StringAssert.DoesNotMatch
  nameWithType: StringAssert.DoesNotMatch
- uid: Benday.Common.Testing.StringAssert.EndsWith(System.String,System.String,System.String)
  name: EndsWith(string, string, string)
  href: api/Benday.Common.Testing.StringAssert.html#Benday_Common_Testing_StringAssert_EndsWith_System_String_System_String_System_String_
  commentId: M:Benday.Common.Testing.StringAssert.EndsWith(System.String,System.String,System.String)
  name.vb: EndsWith(String, String, String)
  fullName: Benday.Common.Testing.StringAssert.EndsWith(string, string, string)
  fullName.vb: Benday.Common.Testing.StringAssert.EndsWith(String, String, String)
  nameWithType: StringAssert.EndsWith(string, string, string)
  nameWithType.vb: StringAssert.EndsWith(String, String, String)
- uid: Benday.Common.Testing.StringAssert.EndsWith(System.String,System.String,System.StringComparison,System.String)
  name: EndsWith(string, string, StringComparison, string)
  href: api/Benday.Common.Testing.StringAssert.html#Benday_Common_Testing_StringAssert_EndsWith_System_String_System_String_System_StringComparison_System_String_
  commentId: M:Benday.Common.Testing.StringAssert.EndsWith(System.String,System.String,System.StringComparison,System.String)
  name.vb: EndsWith(String, String, StringComparison, String)
  fullName: Benday.Common.Testing.StringAssert.EndsWith(string, string, System.StringComparison, string)
  fullName.vb: Benday.Common.Testing.StringAssert.EndsWith(String, String, System.StringComparison, String)
  nameWithType: StringAssert.EndsWith(string, string, StringComparison, string)
  nameWithType.vb: StringAssert.EndsWith(String, String, StringComparison, String)
- uid: Benday.Common.Testing.StringAssert.EndsWith*
  name: EndsWith
  href: api/Benday.Common.Testing.StringAssert.html#Benday_Common_Testing_StringAssert_EndsWith_
  commentId: Overload:Benday.Common.Testing.StringAssert.EndsWith
  isSpec: "True"
  fullName: Benday.Common.Testing.StringAssert.EndsWith
  nameWithType: StringAssert.EndsWith
- uid: Benday.Common.Testing.StringAssert.HasLength(System.String,System.Int32,System.String)
  name: HasLength(string, int, string)
  href: api/Benday.Common.Testing.StringAssert.html#Benday_Common_Testing_StringAssert_HasLength_System_String_System_Int32_System_String_
  commentId: M:Benday.Common.Testing.StringAssert.HasLength(System.String,System.Int32,System.String)
  name.vb: HasLength(String, Integer, String)
  fullName: Benday.Common.Testing.StringAssert.HasLength(string, int, string)
  fullName.vb: Benday.Common.Testing.StringAssert.HasLength(String, Integer, String)
  nameWithType: StringAssert.HasLength(string, int, string)
  nameWithType.vb: StringAssert.HasLength(String, Integer, String)
- uid: Benday.Common.Testing.StringAssert.HasLength*
  name: HasLength
  href: api/Benday.Common.Testing.StringAssert.html#Benday_Common_Testing_StringAssert_HasLength_
  commentId: Overload:Benday.Common.Testing.StringAssert.HasLength
  isSpec: "True"
  fullName: Benday.Common.Testing.StringAssert.HasLength
  nameWithType: StringAssert.HasLength
- uid: Benday.Common.Testing.StringAssert.IsNotNullOrEmpty(System.String,System.String)
  name: IsNotNullOrEmpty(string?, string)
  href: api/Benday.Common.Testing.StringAssert.html#Benday_Common_Testing_StringAssert_IsNotNullOrEmpty_System_String_System_String_
  commentId: M:Benday.Common.Testing.StringAssert.IsNotNullOrEmpty(System.String,System.String)
  name.vb: IsNotNullOrEmpty(String, String)
  fullName: Benday.Common.Testing.StringAssert.IsNotNullOrEmpty(string?, string)
  fullName.vb: Benday.Common.Testing.StringAssert.IsNotNullOrEmpty(String, String)
  nameWithType: StringAssert.IsNotNullOrEmpty(string?, string)
  nameWithType.vb: StringAssert.IsNotNullOrEmpty(String, String)
- uid: Benday.Common.Testing.StringAssert.IsNotNullOrEmpty*
  name: IsNotNullOrEmpty
  href: api/Benday.Common.Testing.StringAssert.html#Benday_Common_Testing_StringAssert_IsNotNullOrEmpty_
  commentId: Overload:Benday.Common.Testing.StringAssert.IsNotNullOrEmpty
  isSpec: "True"
  fullName: Benday.Common.Testing.StringAssert.IsNotNullOrEmpty
  nameWithType: StringAssert.IsNotNullOrEmpty
- uid: Benday.Common.Testing.StringAssert.IsNotNullOrWhiteSpace(System.String,System.String)
  name: IsNotNullOrWhiteSpace(string?, string)
  href: api/Benday.Common.Testing.StringAssert.html#Benday_Common_Testing_StringAssert_IsNotNullOrWhiteSpace_System_String_System_String_
  commentId: M:Benday.Common.Testing.StringAssert.IsNotNullOrWhiteSpace(System.String,System.String)
  name.vb: IsNotNullOrWhiteSpace(String, String)
  fullName: Benday.Common.Testing.StringAssert.IsNotNullOrWhiteSpace(string?, string)
  fullName.vb: Benday.Common.Testing.StringAssert.IsNotNullOrWhiteSpace(String, String)
  nameWithType: StringAssert.IsNotNullOrWhiteSpace(string?, string)
  nameWithType.vb: StringAssert.IsNotNullOrWhiteSpace(String, String)
- uid: Benday.Common.Testing.StringAssert.IsNotNullOrWhiteSpace*
  name: IsNotNullOrWhiteSpace
  href: api/Benday.Common.Testing.StringAssert.html#Benday_Common_Testing_StringAssert_IsNotNullOrWhiteSpace_
  commentId: Overload:Benday.Common.Testing.StringAssert.IsNotNullOrWhiteSpace
  isSpec: "True"
  fullName: Benday.Common.Testing.StringAssert.IsNotNullOrWhiteSpace
  nameWithType: StringAssert.IsNotNullOrWhiteSpace
- uid: Benday.Common.Testing.StringAssert.IsNullOrEmpty(System.String,System.String)
  name: IsNullOrEmpty(string?, string)
  href: api/Benday.Common.Testing.StringAssert.html#Benday_Common_Testing_StringAssert_IsNullOrEmpty_System_String_System_String_
  commentId: M:Benday.Common.Testing.StringAssert.IsNullOrEmpty(System.String,System.String)
  name.vb: IsNullOrEmpty(String, String)
  fullName: Benday.Common.Testing.StringAssert.IsNullOrEmpty(string?, string)
  fullName.vb: Benday.Common.Testing.StringAssert.IsNullOrEmpty(String, String)
  nameWithType: StringAssert.IsNullOrEmpty(string?, string)
  nameWithType.vb: StringAssert.IsNullOrEmpty(String, String)
- uid: Benday.Common.Testing.StringAssert.IsNullOrEmpty*
  name: IsNullOrEmpty
  href: api/Benday.Common.Testing.StringAssert.html#Benday_Common_Testing_StringAssert_IsNullOrEmpty_
  commentId: Overload:Benday.Common.Testing.StringAssert.IsNullOrEmpty
  isSpec: "True"
  fullName: Benday.Common.Testing.StringAssert.IsNullOrEmpty
  nameWithType: StringAssert.IsNullOrEmpty
- uid: Benday.Common.Testing.StringAssert.IsNullOrWhiteSpace(System.String,System.String)
  name: IsNullOrWhiteSpace(string?, string)
  href: api/Benday.Common.Testing.StringAssert.html#Benday_Common_Testing_StringAssert_IsNullOrWhiteSpace_System_String_System_String_
  commentId: M:Benday.Common.Testing.StringAssert.IsNullOrWhiteSpace(System.String,System.String)
  name.vb: IsNullOrWhiteSpace(String, String)
  fullName: Benday.Common.Testing.StringAssert.IsNullOrWhiteSpace(string?, string)
  fullName.vb: Benday.Common.Testing.StringAssert.IsNullOrWhiteSpace(String, String)
  nameWithType: StringAssert.IsNullOrWhiteSpace(string?, string)
  nameWithType.vb: StringAssert.IsNullOrWhiteSpace(String, String)
- uid: Benday.Common.Testing.StringAssert.IsNullOrWhiteSpace*
  name: IsNullOrWhiteSpace
  href: api/Benday.Common.Testing.StringAssert.html#Benday_Common_Testing_StringAssert_IsNullOrWhiteSpace_
  commentId: Overload:Benday.Common.Testing.StringAssert.IsNullOrWhiteSpace
  isSpec: "True"
  fullName: Benday.Common.Testing.StringAssert.IsNullOrWhiteSpace
  nameWithType: StringAssert.IsNullOrWhiteSpace
- uid: Benday.Common.Testing.StringAssert.Matches(System.String,System.String,System.String)
  name: Matches(string, string, string)
  href: api/Benday.Common.Testing.StringAssert.html#Benday_Common_Testing_StringAssert_Matches_System_String_System_String_System_String_
  commentId: M:Benday.Common.Testing.StringAssert.Matches(System.String,System.String,System.String)
  name.vb: Matches(String, String, String)
  fullName: Benday.Common.Testing.StringAssert.Matches(string, string, string)
  fullName.vb: Benday.Common.Testing.StringAssert.Matches(String, String, String)
  nameWithType: StringAssert.Matches(string, string, string)
  nameWithType.vb: StringAssert.Matches(String, String, String)
- uid: Benday.Common.Testing.StringAssert.Matches(System.String,System.String,System.Text.RegularExpressions.RegexOptions,System.String)
  name: Matches(string, string, RegexOptions, string)
  href: api/Benday.Common.Testing.StringAssert.html#Benday_Common_Testing_StringAssert_Matches_System_String_System_String_System_Text_RegularExpressions_RegexOptions_System_String_
  commentId: M:Benday.Common.Testing.StringAssert.Matches(System.String,System.String,System.Text.RegularExpressions.RegexOptions,System.String)
  name.vb: Matches(String, String, RegexOptions, String)
  fullName: Benday.Common.Testing.StringAssert.Matches(string, string, System.Text.RegularExpressions.RegexOptions, string)
  fullName.vb: Benday.Common.Testing.StringAssert.Matches(String, String, System.Text.RegularExpressions.RegexOptions, String)
  nameWithType: StringAssert.Matches(string, string, RegexOptions, string)
  nameWithType.vb: StringAssert.Matches(String, String, RegexOptions, String)
- uid: Benday.Common.Testing.StringAssert.Matches*
  name: Matches
  href: api/Benday.Common.Testing.StringAssert.html#Benday_Common_Testing_StringAssert_Matches_
  commentId: Overload:Benday.Common.Testing.StringAssert.Matches
  isSpec: "True"
  fullName: Benday.Common.Testing.StringAssert.Matches
  nameWithType: StringAssert.Matches
- uid: Benday.Common.Testing.StringAssert.StartsWith(System.String,System.String,System.String)
  name: StartsWith(string, string, string)
  href: api/Benday.Common.Testing.StringAssert.html#Benday_Common_Testing_StringAssert_StartsWith_System_String_System_String_System_String_
  commentId: M:Benday.Common.Testing.StringAssert.StartsWith(System.String,System.String,System.String)
  name.vb: StartsWith(String, String, String)
  fullName: Benday.Common.Testing.StringAssert.StartsWith(string, string, string)
  fullName.vb: Benday.Common.Testing.StringAssert.StartsWith(String, String, String)
  nameWithType: StringAssert.StartsWith(string, string, string)
  nameWithType.vb: StringAssert.StartsWith(String, String, String)
- uid: Benday.Common.Testing.StringAssert.StartsWith(System.String,System.String,System.StringComparison,System.String)
  name: StartsWith(string, string, StringComparison, string)
  href: api/Benday.Common.Testing.StringAssert.html#Benday_Common_Testing_StringAssert_StartsWith_System_String_System_String_System_StringComparison_System_String_
  commentId: M:Benday.Common.Testing.StringAssert.StartsWith(System.String,System.String,System.StringComparison,System.String)
  name.vb: StartsWith(String, String, StringComparison, String)
  fullName: Benday.Common.Testing.StringAssert.StartsWith(string, string, System.StringComparison, string)
  fullName.vb: Benday.Common.Testing.StringAssert.StartsWith(String, String, System.StringComparison, String)
  nameWithType: StringAssert.StartsWith(string, string, StringComparison, string)
  nameWithType.vb: StringAssert.StartsWith(String, String, StringComparison, String)
- uid: Benday.Common.Testing.StringAssert.StartsWith*
  name: StartsWith
  href: api/Benday.Common.Testing.StringAssert.html#Benday_Common_Testing_StringAssert_StartsWith_
  commentId: Overload:Benday.Common.Testing.StringAssert.StartsWith
  isSpec: "True"
  fullName: Benday.Common.Testing.StringAssert.StartsWith
  nameWithType: StringAssert.StartsWith
- uid: Benday.Common.Testing.StringAssertExtensions
  name: StringAssertExtensions
  href: api/Benday.Common.Testing.StringAssertExtensions.html
  commentId: T:Benday.Common.Testing.StringAssertExtensions
  fullName: Benday.Common.Testing.StringAssertExtensions
  nameWithType: StringAssertExtensions
- uid: Benday.Common.Testing.StringAssertExtensions.ShouldBeNullOrEmpty(System.String,System.String)
  name: ShouldBeNullOrEmpty(string?, string)
  href: api/Benday.Common.Testing.StringAssertExtensions.html#Benday_Common_Testing_StringAssertExtensions_ShouldBeNullOrEmpty_System_String_System_String_
  commentId: M:Benday.Common.Testing.StringAssertExtensions.ShouldBeNullOrEmpty(System.String,System.String)
  name.vb: ShouldBeNullOrEmpty(String, String)
  fullName: Benday.Common.Testing.StringAssertExtensions.ShouldBeNullOrEmpty(string?, string)
  fullName.vb: Benday.Common.Testing.StringAssertExtensions.ShouldBeNullOrEmpty(String, String)
  nameWithType: StringAssertExtensions.ShouldBeNullOrEmpty(string?, string)
  nameWithType.vb: StringAssertExtensions.ShouldBeNullOrEmpty(String, String)
- uid: Benday.Common.Testing.StringAssertExtensions.ShouldBeNullOrEmpty*
  name: ShouldBeNullOrEmpty
  href: api/Benday.Common.Testing.StringAssertExtensions.html#Benday_Common_Testing_StringAssertExtensions_ShouldBeNullOrEmpty_
  commentId: Overload:Benday.Common.Testing.StringAssertExtensions.ShouldBeNullOrEmpty
  isSpec: "True"
  fullName: Benday.Common.Testing.StringAssertExtensions.ShouldBeNullOrEmpty
  nameWithType: StringAssertExtensions.ShouldBeNullOrEmpty
- uid: Benday.Common.Testing.StringAssertExtensions.ShouldBeNullOrWhiteSpace(System.String,System.String)
  name: ShouldBeNullOrWhiteSpace(string?, string)
  href: api/Benday.Common.Testing.StringAssertExtensions.html#Benday_Common_Testing_StringAssertExtensions_ShouldBeNullOrWhiteSpace_System_String_System_String_
  commentId: M:Benday.Common.Testing.StringAssertExtensions.ShouldBeNullOrWhiteSpace(System.String,System.String)
  name.vb: ShouldBeNullOrWhiteSpace(String, String)
  fullName: Benday.Common.Testing.StringAssertExtensions.ShouldBeNullOrWhiteSpace(string?, string)
  fullName.vb: Benday.Common.Testing.StringAssertExtensions.ShouldBeNullOrWhiteSpace(String, String)
  nameWithType: StringAssertExtensions.ShouldBeNullOrWhiteSpace(string?, string)
  nameWithType.vb: StringAssertExtensions.ShouldBeNullOrWhiteSpace(String, String)
- uid: Benday.Common.Testing.StringAssertExtensions.ShouldBeNullOrWhiteSpace*
  name: ShouldBeNullOrWhiteSpace
  href: api/Benday.Common.Testing.StringAssertExtensions.html#Benday_Common_Testing_StringAssertExtensions_ShouldBeNullOrWhiteSpace_
  commentId: Overload:Benday.Common.Testing.StringAssertExtensions.ShouldBeNullOrWhiteSpace
  isSpec: "True"
  fullName: Benday.Common.Testing.StringAssertExtensions.ShouldBeNullOrWhiteSpace
  nameWithType: StringAssertExtensions.ShouldBeNullOrWhiteSpace
- uid: Benday.Common.Testing.StringAssertExtensions.ShouldContain(System.String,System.String,System.String)
  name: ShouldContain(string, string, string)
  href: api/Benday.Common.Testing.StringAssertExtensions.html#Benday_Common_Testing_StringAssertExtensions_ShouldContain_System_String_System_String_System_String_
  commentId: M:Benday.Common.Testing.StringAssertExtensions.ShouldContain(System.String,System.String,System.String)
  name.vb: ShouldContain(String, String, String)
  fullName: Benday.Common.Testing.StringAssertExtensions.ShouldContain(string, string, string)
  fullName.vb: Benday.Common.Testing.StringAssertExtensions.ShouldContain(String, String, String)
  nameWithType: StringAssertExtensions.ShouldContain(string, string, string)
  nameWithType.vb: StringAssertExtensions.ShouldContain(String, String, String)
- uid: Benday.Common.Testing.StringAssertExtensions.ShouldContain(System.String,System.String,System.StringComparison,System.String)
  name: ShouldContain(string, string, StringComparison, string)
  href: api/Benday.Common.Testing.StringAssertExtensions.html#Benday_Common_Testing_StringAssertExtensions_ShouldContain_System_String_System_String_System_StringComparison_System_String_
  commentId: M:Benday.Common.Testing.StringAssertExtensions.ShouldContain(System.String,System.String,System.StringComparison,System.String)
  name.vb: ShouldContain(String, String, StringComparison, String)
  fullName: Benday.Common.Testing.StringAssertExtensions.ShouldContain(string, string, System.StringComparison, string)
  fullName.vb: Benday.Common.Testing.StringAssertExtensions.ShouldContain(String, String, System.StringComparison, String)
  nameWithType: StringAssertExtensions.ShouldContain(string, string, StringComparison, string)
  nameWithType.vb: StringAssertExtensions.ShouldContain(String, String, StringComparison, String)
- uid: Benday.Common.Testing.StringAssertExtensions.ShouldContain*
  name: ShouldContain
  href: api/Benday.Common.Testing.StringAssertExtensions.html#Benday_Common_Testing_StringAssertExtensions_ShouldContain_
  commentId: Overload:Benday.Common.Testing.StringAssertExtensions.ShouldContain
  isSpec: "True"
  fullName: Benday.Common.Testing.StringAssertExtensions.ShouldContain
  nameWithType: StringAssertExtensions.ShouldContain
- uid: Benday.Common.Testing.StringAssertExtensions.ShouldEndWith(System.String,System.String,System.String)
  name: ShouldEndWith(string, string, string)
  href: api/Benday.Common.Testing.StringAssertExtensions.html#Benday_Common_Testing_StringAssertExtensions_ShouldEndWith_System_String_System_String_System_String_
  commentId: M:Benday.Common.Testing.StringAssertExtensions.ShouldEndWith(System.String,System.String,System.String)
  name.vb: ShouldEndWith(String, String, String)
  fullName: Benday.Common.Testing.StringAssertExtensions.ShouldEndWith(string, string, string)
  fullName.vb: Benday.Common.Testing.StringAssertExtensions.ShouldEndWith(String, String, String)
  nameWithType: StringAssertExtensions.ShouldEndWith(string, string, string)
  nameWithType.vb: StringAssertExtensions.ShouldEndWith(String, String, String)
- uid: Benday.Common.Testing.StringAssertExtensions.ShouldEndWith(System.String,System.String,System.StringComparison,System.String)
  name: ShouldEndWith(string, string, StringComparison, string)
  href: api/Benday.Common.Testing.StringAssertExtensions.html#Benday_Common_Testing_StringAssertExtensions_ShouldEndWith_System_String_System_String_System_StringComparison_System_String_
  commentId: M:Benday.Common.Testing.StringAssertExtensions.ShouldEndWith(System.String,System.String,System.StringComparison,System.String)
  name.vb: ShouldEndWith(String, String, StringComparison, String)
  fullName: Benday.Common.Testing.StringAssertExtensions.ShouldEndWith(string, string, System.StringComparison, string)
  fullName.vb: Benday.Common.Testing.StringAssertExtensions.ShouldEndWith(String, String, System.StringComparison, String)
  nameWithType: StringAssertExtensions.ShouldEndWith(string, string, StringComparison, string)
  nameWithType.vb: StringAssertExtensions.ShouldEndWith(String, String, StringComparison, String)
- uid: Benday.Common.Testing.StringAssertExtensions.ShouldEndWith*
  name: ShouldEndWith
  href: api/Benday.Common.Testing.StringAssertExtensions.html#Benday_Common_Testing_StringAssertExtensions_ShouldEndWith_
  commentId: Overload:Benday.Common.Testing.StringAssertExtensions.ShouldEndWith
  isSpec: "True"
  fullName: Benday.Common.Testing.StringAssertExtensions.ShouldEndWith
  nameWithType: StringAssertExtensions.ShouldEndWith
- uid: Benday.Common.Testing.StringAssertExtensions.ShouldEqualIgnoreCase(System.String,System.String,System.String)
  name: ShouldEqualIgnoreCase(string, string, string)
  href: api/Benday.Common.Testing.StringAssertExtensions.html#Benday_Common_Testing_StringAssertExtensions_ShouldEqualIgnoreCase_System_String_System_String_System_String_
  commentId: M:Benday.Common.Testing.StringAssertExtensions.ShouldEqualIgnoreCase(System.String,System.String,System.String)
  name.vb: ShouldEqualIgnoreCase(String, String, String)
  fullName: Benday.Common.Testing.StringAssertExtensions.ShouldEqualIgnoreCase(string, string, string)
  fullName.vb: Benday.Common.Testing.StringAssertExtensions.ShouldEqualIgnoreCase(String, String, String)
  nameWithType: StringAssertExtensions.ShouldEqualIgnoreCase(string, string, string)
  nameWithType.vb: StringAssertExtensions.ShouldEqualIgnoreCase(String, String, String)
- uid: Benday.Common.Testing.StringAssertExtensions.ShouldEqualIgnoreCase*
  name: ShouldEqualIgnoreCase
  href: api/Benday.Common.Testing.StringAssertExtensions.html#Benday_Common_Testing_StringAssertExtensions_ShouldEqualIgnoreCase_
  commentId: Overload:Benday.Common.Testing.StringAssertExtensions.ShouldEqualIgnoreCase
  isSpec: "True"
  fullName: Benday.Common.Testing.StringAssertExtensions.ShouldEqualIgnoreCase
  nameWithType: StringAssertExtensions.ShouldEqualIgnoreCase
- uid: Benday.Common.Testing.StringAssertExtensions.ShouldHaveLength(System.String,System.Int32,System.String)
  name: ShouldHaveLength(string, int, string)
  href: api/Benday.Common.Testing.StringAssertExtensions.html#Benday_Common_Testing_StringAssertExtensions_ShouldHaveLength_System_String_System_Int32_System_String_
  commentId: M:Benday.Common.Testing.StringAssertExtensions.ShouldHaveLength(System.String,System.Int32,System.String)
  name.vb: ShouldHaveLength(String, Integer, String)
  fullName: Benday.Common.Testing.StringAssertExtensions.ShouldHaveLength(string, int, string)
  fullName.vb: Benday.Common.Testing.StringAssertExtensions.ShouldHaveLength(String, Integer, String)
  nameWithType: StringAssertExtensions.ShouldHaveLength(string, int, string)
  nameWithType.vb: StringAssertExtensions.ShouldHaveLength(String, Integer, String)
- uid: Benday.Common.Testing.StringAssertExtensions.ShouldHaveLength*
  name: ShouldHaveLength
  href: api/Benday.Common.Testing.StringAssertExtensions.html#Benday_Common_Testing_StringAssertExtensions_ShouldHaveLength_
  commentId: Overload:Benday.Common.Testing.StringAssertExtensions.ShouldHaveLength
  isSpec: "True"
  fullName: Benday.Common.Testing.StringAssertExtensions.ShouldHaveLength
  nameWithType: StringAssertExtensions.ShouldHaveLength
- uid: Benday.Common.Testing.StringAssertExtensions.ShouldMatch(System.String,System.String,System.String)
  name: ShouldMatch(string, string, string)
  href: api/Benday.Common.Testing.StringAssertExtensions.html#Benday_Common_Testing_StringAssertExtensions_ShouldMatch_System_String_System_String_System_String_
  commentId: M:Benday.Common.Testing.StringAssertExtensions.ShouldMatch(System.String,System.String,System.String)
  name.vb: ShouldMatch(String, String, String)
  fullName: Benday.Common.Testing.StringAssertExtensions.ShouldMatch(string, string, string)
  fullName.vb: Benday.Common.Testing.StringAssertExtensions.ShouldMatch(String, String, String)
  nameWithType: StringAssertExtensions.ShouldMatch(string, string, string)
  nameWithType.vb: StringAssertExtensions.ShouldMatch(String, String, String)
- uid: Benday.Common.Testing.StringAssertExtensions.ShouldMatch(System.String,System.String,System.Text.RegularExpressions.RegexOptions,System.String)
  name: ShouldMatch(string, string, RegexOptions, string)
  href: api/Benday.Common.Testing.StringAssertExtensions.html#Benday_Common_Testing_StringAssertExtensions_ShouldMatch_System_String_System_String_System_Text_RegularExpressions_RegexOptions_System_String_
  commentId: M:Benday.Common.Testing.StringAssertExtensions.ShouldMatch(System.String,System.String,System.Text.RegularExpressions.RegexOptions,System.String)
  name.vb: ShouldMatch(String, String, RegexOptions, String)
  fullName: Benday.Common.Testing.StringAssertExtensions.ShouldMatch(string, string, System.Text.RegularExpressions.RegexOptions, string)
  fullName.vb: Benday.Common.Testing.StringAssertExtensions.ShouldMatch(String, String, System.Text.RegularExpressions.RegexOptions, String)
  nameWithType: StringAssertExtensions.ShouldMatch(string, string, RegexOptions, string)
  nameWithType.vb: StringAssertExtensions.ShouldMatch(String, String, RegexOptions, String)
- uid: Benday.Common.Testing.StringAssertExtensions.ShouldMatch*
  name: ShouldMatch
  href: api/Benday.Common.Testing.StringAssertExtensions.html#Benday_Common_Testing_StringAssertExtensions_ShouldMatch_
  commentId: Overload:Benday.Common.Testing.StringAssertExtensions.ShouldMatch
  isSpec: "True"
  fullName: Benday.Common.Testing.StringAssertExtensions.ShouldMatch
  nameWithType: StringAssertExtensions.ShouldMatch
- uid: Benday.Common.Testing.StringAssertExtensions.ShouldNotBeNullOrEmpty(System.String,System.String)
  name: ShouldNotBeNullOrEmpty(string?, string)
  href: api/Benday.Common.Testing.StringAssertExtensions.html#Benday_Common_Testing_StringAssertExtensions_ShouldNotBeNullOrEmpty_System_String_System_String_
  commentId: M:Benday.Common.Testing.StringAssertExtensions.ShouldNotBeNullOrEmpty(System.String,System.String)
  name.vb: ShouldNotBeNullOrEmpty(String, String)
  fullName: Benday.Common.Testing.StringAssertExtensions.ShouldNotBeNullOrEmpty(string?, string)
  fullName.vb: Benday.Common.Testing.StringAssertExtensions.ShouldNotBeNullOrEmpty(String, String)
  nameWithType: StringAssertExtensions.ShouldNotBeNullOrEmpty(string?, string)
  nameWithType.vb: StringAssertExtensions.ShouldNotBeNullOrEmpty(String, String)
- uid: Benday.Common.Testing.StringAssertExtensions.ShouldNotBeNullOrEmpty*
  name: ShouldNotBeNullOrEmpty
  href: api/Benday.Common.Testing.StringAssertExtensions.html#Benday_Common_Testing_StringAssertExtensions_ShouldNotBeNullOrEmpty_
  commentId: Overload:Benday.Common.Testing.StringAssertExtensions.ShouldNotBeNullOrEmpty
  isSpec: "True"
  fullName: Benday.Common.Testing.StringAssertExtensions.ShouldNotBeNullOrEmpty
  nameWithType: StringAssertExtensions.ShouldNotBeNullOrEmpty
- uid: Benday.Common.Testing.StringAssertExtensions.ShouldNotBeNullOrWhiteSpace(System.String,System.String)
  name: ShouldNotBeNullOrWhiteSpace(string?, string)
  href: api/Benday.Common.Testing.StringAssertExtensions.html#Benday_Common_Testing_StringAssertExtensions_ShouldNotBeNullOrWhiteSpace_System_String_System_String_
  commentId: M:Benday.Common.Testing.StringAssertExtensions.ShouldNotBeNullOrWhiteSpace(System.String,System.String)
  name.vb: ShouldNotBeNullOrWhiteSpace(String, String)
  fullName: Benday.Common.Testing.StringAssertExtensions.ShouldNotBeNullOrWhiteSpace(string?, string)
  fullName.vb: Benday.Common.Testing.StringAssertExtensions.ShouldNotBeNullOrWhiteSpace(String, String)
  nameWithType: StringAssertExtensions.ShouldNotBeNullOrWhiteSpace(string?, string)
  nameWithType.vb: StringAssertExtensions.ShouldNotBeNullOrWhiteSpace(String, String)
- uid: Benday.Common.Testing.StringAssertExtensions.ShouldNotBeNullOrWhiteSpace*
  name: ShouldNotBeNullOrWhiteSpace
  href: api/Benday.Common.Testing.StringAssertExtensions.html#Benday_Common_Testing_StringAssertExtensions_ShouldNotBeNullOrWhiteSpace_
  commentId: Overload:Benday.Common.Testing.StringAssertExtensions.ShouldNotBeNullOrWhiteSpace
  isSpec: "True"
  fullName: Benday.Common.Testing.StringAssertExtensions.ShouldNotBeNullOrWhiteSpace
  nameWithType: StringAssertExtensions.ShouldNotBeNullOrWhiteSpace
- uid: Benday.Common.Testing.StringAssertExtensions.ShouldNotContain(System.String,System.String,System.String)
  name: ShouldNotContain(string, string, string)
  href: api/Benday.Common.Testing.StringAssertExtensions.html#Benday_Common_Testing_StringAssertExtensions_ShouldNotContain_System_String_System_String_System_String_
  commentId: M:Benday.Common.Testing.StringAssertExtensions.ShouldNotContain(System.String,System.String,System.String)
  name.vb: ShouldNotContain(String, String, String)
  fullName: Benday.Common.Testing.StringAssertExtensions.ShouldNotContain(string, string, string)
  fullName.vb: Benday.Common.Testing.StringAssertExtensions.ShouldNotContain(String, String, String)
  nameWithType: StringAssertExtensions.ShouldNotContain(string, string, string)
  nameWithType.vb: StringAssertExtensions.ShouldNotContain(String, String, String)
- uid: Benday.Common.Testing.StringAssertExtensions.ShouldNotContain(System.String,System.String,System.StringComparison,System.String)
  name: ShouldNotContain(string, string, StringComparison, string)
  href: api/Benday.Common.Testing.StringAssertExtensions.html#Benday_Common_Testing_StringAssertExtensions_ShouldNotContain_System_String_System_String_System_StringComparison_System_String_
  commentId: M:Benday.Common.Testing.StringAssertExtensions.ShouldNotContain(System.String,System.String,System.StringComparison,System.String)
  name.vb: ShouldNotContain(String, String, StringComparison, String)
  fullName: Benday.Common.Testing.StringAssertExtensions.ShouldNotContain(string, string, System.StringComparison, string)
  fullName.vb: Benday.Common.Testing.StringAssertExtensions.ShouldNotContain(String, String, System.StringComparison, String)
  nameWithType: StringAssertExtensions.ShouldNotContain(string, string, StringComparison, string)
  nameWithType.vb: StringAssertExtensions.ShouldNotContain(String, String, StringComparison, String)
- uid: Benday.Common.Testing.StringAssertExtensions.ShouldNotContain*
  name: ShouldNotContain
  href: api/Benday.Common.Testing.StringAssertExtensions.html#Benday_Common_Testing_StringAssertExtensions_ShouldNotContain_
  commentId: Overload:Benday.Common.Testing.StringAssertExtensions.ShouldNotContain
  isSpec: "True"
  fullName: Benday.Common.Testing.StringAssertExtensions.ShouldNotContain
  nameWithType: StringAssertExtensions.ShouldNotContain
- uid: Benday.Common.Testing.StringAssertExtensions.ShouldNotEqualIgnoreCase(System.String,System.String,System.String)
  name: ShouldNotEqualIgnoreCase(string, string, string)
  href: api/Benday.Common.Testing.StringAssertExtensions.html#Benday_Common_Testing_StringAssertExtensions_ShouldNotEqualIgnoreCase_System_String_System_String_System_String_
  commentId: M:Benday.Common.Testing.StringAssertExtensions.ShouldNotEqualIgnoreCase(System.String,System.String,System.String)
  name.vb: ShouldNotEqualIgnoreCase(String, String, String)
  fullName: Benday.Common.Testing.StringAssertExtensions.ShouldNotEqualIgnoreCase(string, string, string)
  fullName.vb: Benday.Common.Testing.StringAssertExtensions.ShouldNotEqualIgnoreCase(String, String, String)
  nameWithType: StringAssertExtensions.ShouldNotEqualIgnoreCase(string, string, string)
  nameWithType.vb: StringAssertExtensions.ShouldNotEqualIgnoreCase(String, String, String)
- uid: Benday.Common.Testing.StringAssertExtensions.ShouldNotEqualIgnoreCase*
  name: ShouldNotEqualIgnoreCase
  href: api/Benday.Common.Testing.StringAssertExtensions.html#Benday_Common_Testing_StringAssertExtensions_ShouldNotEqualIgnoreCase_
  commentId: Overload:Benday.Common.Testing.StringAssertExtensions.ShouldNotEqualIgnoreCase
  isSpec: "True"
  fullName: Benday.Common.Testing.StringAssertExtensions.ShouldNotEqualIgnoreCase
  nameWithType: StringAssertExtensions.ShouldNotEqualIgnoreCase
- uid: Benday.Common.Testing.StringAssertExtensions.ShouldNotMatch(System.String,System.String,System.String)
  name: ShouldNotMatch(string, string, string)
  href: api/Benday.Common.Testing.StringAssertExtensions.html#Benday_Common_Testing_StringAssertExtensions_ShouldNotMatch_System_String_System_String_System_String_
  commentId: M:Benday.Common.Testing.StringAssertExtensions.ShouldNotMatch(System.String,System.String,System.String)
  name.vb: ShouldNotMatch(String, String, String)
  fullName: Benday.Common.Testing.StringAssertExtensions.ShouldNotMatch(string, string, string)
  fullName.vb: Benday.Common.Testing.StringAssertExtensions.ShouldNotMatch(String, String, String)
  nameWithType: StringAssertExtensions.ShouldNotMatch(string, string, string)
  nameWithType.vb: StringAssertExtensions.ShouldNotMatch(String, String, String)
- uid: Benday.Common.Testing.StringAssertExtensions.ShouldNotMatch(System.String,System.String,System.Text.RegularExpressions.RegexOptions,System.String)
  name: ShouldNotMatch(string, string, RegexOptions, string)
  href: api/Benday.Common.Testing.StringAssertExtensions.html#Benday_Common_Testing_StringAssertExtensions_ShouldNotMatch_System_String_System_String_System_Text_RegularExpressions_RegexOptions_System_String_
  commentId: M:Benday.Common.Testing.StringAssertExtensions.ShouldNotMatch(System.String,System.String,System.Text.RegularExpressions.RegexOptions,System.String)
  name.vb: ShouldNotMatch(String, String, RegexOptions, String)
  fullName: Benday.Common.Testing.StringAssertExtensions.ShouldNotMatch(string, string, System.Text.RegularExpressions.RegexOptions, string)
  fullName.vb: Benday.Common.Testing.StringAssertExtensions.ShouldNotMatch(String, String, System.Text.RegularExpressions.RegexOptions, String)
  nameWithType: StringAssertExtensions.ShouldNotMatch(string, string, RegexOptions, string)
  nameWithType.vb: StringAssertExtensions.ShouldNotMatch(String, String, RegexOptions, String)
- uid: Benday.Common.Testing.StringAssertExtensions.ShouldNotMatch*
  name: ShouldNotMatch
  href: api/Benday.Common.Testing.StringAssertExtensions.html#Benday_Common_Testing_StringAssertExtensions_ShouldNotMatch_
  commentId: Overload:Benday.Common.Testing.StringAssertExtensions.ShouldNotMatch
  isSpec: "True"
  fullName: Benday.Common.Testing.StringAssertExtensions.ShouldNotMatch
  nameWithType: StringAssertExtensions.ShouldNotMatch
- uid: Benday.Common.Testing.StringAssertExtensions.ShouldStartWith(System.String,System.String,System.String)
  name: ShouldStartWith(string, string, string)
  href: api/Benday.Common.Testing.StringAssertExtensions.html#Benday_Common_Testing_StringAssertExtensions_ShouldStartWith_System_String_System_String_System_String_
  commentId: M:Benday.Common.Testing.StringAssertExtensions.ShouldStartWith(System.String,System.String,System.String)
  name.vb: ShouldStartWith(String, String, String)
  fullName: Benday.Common.Testing.StringAssertExtensions.ShouldStartWith(string, string, string)
  fullName.vb: Benday.Common.Testing.StringAssertExtensions.ShouldStartWith(String, String, String)
  nameWithType: StringAssertExtensions.ShouldStartWith(string, string, string)
  nameWithType.vb: StringAssertExtensions.ShouldStartWith(String, String, String)
- uid: Benday.Common.Testing.StringAssertExtensions.ShouldStartWith(System.String,System.String,System.StringComparison,System.String)
  name: ShouldStartWith(string, string, StringComparison, string)
  href: api/Benday.Common.Testing.StringAssertExtensions.html#Benday_Common_Testing_StringAssertExtensions_ShouldStartWith_System_String_System_String_System_StringComparison_System_String_
  commentId: M:Benday.Common.Testing.StringAssertExtensions.ShouldStartWith(System.String,System.String,System.StringComparison,System.String)
  name.vb: ShouldStartWith(String, String, StringComparison, String)
  fullName: Benday.Common.Testing.StringAssertExtensions.ShouldStartWith(string, string, System.StringComparison, string)
  fullName.vb: Benday.Common.Testing.StringAssertExtensions.ShouldStartWith(String, String, System.StringComparison, String)
  nameWithType: StringAssertExtensions.ShouldStartWith(string, string, StringComparison, string)
  nameWithType.vb: StringAssertExtensions.ShouldStartWith(String, String, StringComparison, String)
- uid: Benday.Common.Testing.StringAssertExtensions.ShouldStartWith*
  name: ShouldStartWith
  href: api/Benday.Common.Testing.StringAssertExtensions.html#Benday_Common_Testing_StringAssertExtensions_ShouldStartWith_
  commentId: Overload:Benday.Common.Testing.StringAssertExtensions.ShouldStartWith
  isSpec: "True"
  fullName: Benday.Common.Testing.StringAssertExtensions.ShouldStartWith
  nameWithType: StringAssertExtensions.ShouldStartWith
- uid: Benday.Common.Testing.StringAssertionExtensions
  name: StringAssertionExtensions
  href: api/Benday.Common.Testing.StringAssertionExtensions.html
  commentId: T:Benday.Common.Testing.StringAssertionExtensions
  fullName: Benday.Common.Testing.StringAssertionExtensions
  nameWithType: StringAssertionExtensions
- uid: Benday.Common.Testing.StringAssertionExtensions.AllItemsAreNotNull(Benday.Common.Testing.ICheckAssertionForNullableType{System.String[]})
  name: AllItemsAreNotNull(ICheckAssertionForNullableType<string?[]>)
  href: api/Benday.Common.Testing.StringAssertionExtensions.html#Benday_Common_Testing_StringAssertionExtensions_AllItemsAreNotNull_Benday_Common_Testing_ICheckAssertionForNullableType_System_String____
  commentId: M:Benday.Common.Testing.StringAssertionExtensions.AllItemsAreNotNull(Benday.Common.Testing.ICheckAssertionForNullableType{System.String[]})
  name.vb: AllItemsAreNotNull(ICheckAssertionForNullableType(Of String()))
  fullName: Benday.Common.Testing.StringAssertionExtensions.AllItemsAreNotNull(Benday.Common.Testing.ICheckAssertionForNullableType<string?[]>)
  fullName.vb: Benday.Common.Testing.StringAssertionExtensions.AllItemsAreNotNull(Benday.Common.Testing.ICheckAssertionForNullableType(Of String()))
  nameWithType: StringAssertionExtensions.AllItemsAreNotNull(ICheckAssertionForNullableType<string?[]>)
  nameWithType.vb: StringAssertionExtensions.AllItemsAreNotNull(ICheckAssertionForNullableType(Of String()))
- uid: Benday.Common.Testing.StringAssertionExtensions.AllItemsAreNotNull*
  name: AllItemsAreNotNull
  href: api/Benday.Common.Testing.StringAssertionExtensions.html#Benday_Common_Testing_StringAssertionExtensions_AllItemsAreNotNull_
  commentId: Overload:Benday.Common.Testing.StringAssertionExtensions.AllItemsAreNotNull
  isSpec: "True"
  fullName: Benday.Common.Testing.StringAssertionExtensions.AllItemsAreNotNull
  nameWithType: StringAssertionExtensions.AllItemsAreNotNull
- uid: Benday.Common.Testing.StringAssertionExtensions.Contains(Benday.Common.Testing.ICheckAssertion{System.String},System.String,System.String)
  name: Contains(ICheckAssertion<string>, string, string?)
  href: api/Benday.Common.Testing.StringAssertionExtensions.html#Benday_Common_Testing_StringAssertionExtensions_Contains_Benday_Common_Testing_ICheckAssertion_System_String__System_String_System_String_
  commentId: M:Benday.Common.Testing.StringAssertionExtensions.Contains(Benday.Common.Testing.ICheckAssertion{System.String},System.String,System.String)
  name.vb: Contains(ICheckAssertion(Of String), String, String)
  fullName: Benday.Common.Testing.StringAssertionExtensions.Contains(Benday.Common.Testing.ICheckAssertion<string>, string, string?)
  fullName.vb: Benday.Common.Testing.StringAssertionExtensions.Contains(Benday.Common.Testing.ICheckAssertion(Of String), String, String)
  nameWithType: StringAssertionExtensions.Contains(ICheckAssertion<string>, string, string?)
  nameWithType.vb: StringAssertionExtensions.Contains(ICheckAssertion(Of String), String, String)
- uid: Benday.Common.Testing.StringAssertionExtensions.Contains*
  name: Contains
  href: api/Benday.Common.Testing.StringAssertionExtensions.html#Benday_Common_Testing_StringAssertionExtensions_Contains_
  commentId: Overload:Benday.Common.Testing.StringAssertionExtensions.Contains
  isSpec: "True"
  fullName: Benday.Common.Testing.StringAssertionExtensions.Contains
  nameWithType: StringAssertionExtensions.Contains
- uid: Benday.Common.Testing.StringAssertionExtensions.ContainsCaseInsensitive(Benday.Common.Testing.ICheckAssertion{System.String},System.String,System.String)
  name: ContainsCaseInsensitive(ICheckAssertion<string>, string, string?)
  href: api/Benday.Common.Testing.StringAssertionExtensions.html#Benday_Common_Testing_StringAssertionExtensions_ContainsCaseInsensitive_Benday_Common_Testing_ICheckAssertion_System_String__System_String_System_String_
  commentId: M:Benday.Common.Testing.StringAssertionExtensions.ContainsCaseInsensitive(Benday.Common.Testing.ICheckAssertion{System.String},System.String,System.String)
  name.vb: ContainsCaseInsensitive(ICheckAssertion(Of String), String, String)
  fullName: Benday.Common.Testing.StringAssertionExtensions.ContainsCaseInsensitive(Benday.Common.Testing.ICheckAssertion<string>, string, string?)
  fullName.vb: Benday.Common.Testing.StringAssertionExtensions.ContainsCaseInsensitive(Benday.Common.Testing.ICheckAssertion(Of String), String, String)
  nameWithType: StringAssertionExtensions.ContainsCaseInsensitive(ICheckAssertion<string>, string, string?)
  nameWithType.vb: StringAssertionExtensions.ContainsCaseInsensitive(ICheckAssertion(Of String), String, String)
- uid: Benday.Common.Testing.StringAssertionExtensions.ContainsCaseInsensitive*
  name: ContainsCaseInsensitive
  href: api/Benday.Common.Testing.StringAssertionExtensions.html#Benday_Common_Testing_StringAssertionExtensions_ContainsCaseInsensitive_
  commentId: Overload:Benday.Common.Testing.StringAssertionExtensions.ContainsCaseInsensitive
  isSpec: "True"
  fullName: Benday.Common.Testing.StringAssertionExtensions.ContainsCaseInsensitive
  nameWithType: StringAssertionExtensions.ContainsCaseInsensitive
- uid: Benday.Common.Testing.StringAssertionExtensions.DoesNotContain(Benday.Common.Testing.ICheckAssertion{System.String},System.String,System.String)
  name: DoesNotContain(ICheckAssertion<string>, string, string?)
  href: api/Benday.Common.Testing.StringAssertionExtensions.html#Benday_Common_Testing_StringAssertionExtensions_DoesNotContain_Benday_Common_Testing_ICheckAssertion_System_String__System_String_System_String_
  commentId: M:Benday.Common.Testing.StringAssertionExtensions.DoesNotContain(Benday.Common.Testing.ICheckAssertion{System.String},System.String,System.String)
  name.vb: DoesNotContain(ICheckAssertion(Of String), String, String)
  fullName: Benday.Common.Testing.StringAssertionExtensions.DoesNotContain(Benday.Common.Testing.ICheckAssertion<string>, string, string?)
  fullName.vb: Benday.Common.Testing.StringAssertionExtensions.DoesNotContain(Benday.Common.Testing.ICheckAssertion(Of String), String, String)
  nameWithType: StringAssertionExtensions.DoesNotContain(ICheckAssertion<string>, string, string?)
  nameWithType.vb: StringAssertionExtensions.DoesNotContain(ICheckAssertion(Of String), String, String)
- uid: Benday.Common.Testing.StringAssertionExtensions.DoesNotContain*
  name: DoesNotContain
  href: api/Benday.Common.Testing.StringAssertionExtensions.html#Benday_Common_Testing_StringAssertionExtensions_DoesNotContain_
  commentId: Overload:Benday.Common.Testing.StringAssertionExtensions.DoesNotContain
  isSpec: "True"
  fullName: Benday.Common.Testing.StringAssertionExtensions.DoesNotContain
  nameWithType: StringAssertionExtensions.DoesNotContain
- uid: Benday.Common.Testing.StringAssertionExtensions.DoesNotContainCaseInsensitive(Benday.Common.Testing.ICheckAssertion{System.String},System.String,System.String)
  name: DoesNotContainCaseInsensitive(ICheckAssertion<string>, string, string?)
  href: api/Benday.Common.Testing.StringAssertionExtensions.html#Benday_Common_Testing_StringAssertionExtensions_DoesNotContainCaseInsensitive_Benday_Common_Testing_ICheckAssertion_System_String__System_String_System_String_
  commentId: M:Benday.Common.Testing.StringAssertionExtensions.DoesNotContainCaseInsensitive(Benday.Common.Testing.ICheckAssertion{System.String},System.String,System.String)
  name.vb: DoesNotContainCaseInsensitive(ICheckAssertion(Of String), String, String)
  fullName: Benday.Common.Testing.StringAssertionExtensions.DoesNotContainCaseInsensitive(Benday.Common.Testing.ICheckAssertion<string>, string, string?)
  fullName.vb: Benday.Common.Testing.StringAssertionExtensions.DoesNotContainCaseInsensitive(Benday.Common.Testing.ICheckAssertion(Of String), String, String)
  nameWithType: StringAssertionExtensions.DoesNotContainCaseInsensitive(ICheckAssertion<string>, string, string?)
  nameWithType.vb: StringAssertionExtensions.DoesNotContainCaseInsensitive(ICheckAssertion(Of String), String, String)
- uid: Benday.Common.Testing.StringAssertionExtensions.DoesNotContainCaseInsensitive*
  name: DoesNotContainCaseInsensitive
  href: api/Benday.Common.Testing.StringAssertionExtensions.html#Benday_Common_Testing_StringAssertionExtensions_DoesNotContainCaseInsensitive_
  commentId: Overload:Benday.Common.Testing.StringAssertionExtensions.DoesNotContainCaseInsensitive
  isSpec: "True"
  fullName: Benday.Common.Testing.StringAssertionExtensions.DoesNotContainCaseInsensitive
  nameWithType: StringAssertionExtensions.DoesNotContainCaseInsensitive
- uid: Benday.Common.Testing.StringAssertionExtensions.DoesNotEndWith(Benday.Common.Testing.ICheckAssertion{System.String},System.String,System.String)
  name: DoesNotEndWith(ICheckAssertion<string>, string, string?)
  href: api/Benday.Common.Testing.StringAssertionExtensions.html#Benday_Common_Testing_StringAssertionExtensions_DoesNotEndWith_Benday_Common_Testing_ICheckAssertion_System_String__System_String_System_String_
  commentId: M:Benday.Common.Testing.StringAssertionExtensions.DoesNotEndWith(Benday.Common.Testing.ICheckAssertion{System.String},System.String,System.String)
  name.vb: DoesNotEndWith(ICheckAssertion(Of String), String, String)
  fullName: Benday.Common.Testing.StringAssertionExtensions.DoesNotEndWith(Benday.Common.Testing.ICheckAssertion<string>, string, string?)
  fullName.vb: Benday.Common.Testing.StringAssertionExtensions.DoesNotEndWith(Benday.Common.Testing.ICheckAssertion(Of String), String, String)
  nameWithType: StringAssertionExtensions.DoesNotEndWith(ICheckAssertion<string>, string, string?)
  nameWithType.vb: StringAssertionExtensions.DoesNotEndWith(ICheckAssertion(Of String), String, String)
- uid: Benday.Common.Testing.StringAssertionExtensions.DoesNotEndWith*
  name: DoesNotEndWith
  href: api/Benday.Common.Testing.StringAssertionExtensions.html#Benday_Common_Testing_StringAssertionExtensions_DoesNotEndWith_
  commentId: Overload:Benday.Common.Testing.StringAssertionExtensions.DoesNotEndWith
  isSpec: "True"
  fullName: Benday.Common.Testing.StringAssertionExtensions.DoesNotEndWith
  nameWithType: StringAssertionExtensions.DoesNotEndWith
- uid: Benday.Common.Testing.StringAssertionExtensions.DoesNotEndWithCaseInsensitive(Benday.Common.Testing.ICheckAssertion{System.String},System.String,System.String)
  name: DoesNotEndWithCaseInsensitive(ICheckAssertion<string>, string, string?)
  href: api/Benday.Common.Testing.StringAssertionExtensions.html#Benday_Common_Testing_StringAssertionExtensions_DoesNotEndWithCaseInsensitive_Benday_Common_Testing_ICheckAssertion_System_String__System_String_System_String_
  commentId: M:Benday.Common.Testing.StringAssertionExtensions.DoesNotEndWithCaseInsensitive(Benday.Common.Testing.ICheckAssertion{System.String},System.String,System.String)
  name.vb: DoesNotEndWithCaseInsensitive(ICheckAssertion(Of String), String, String)
  fullName: Benday.Common.Testing.StringAssertionExtensions.DoesNotEndWithCaseInsensitive(Benday.Common.Testing.ICheckAssertion<string>, string, string?)
  fullName.vb: Benday.Common.Testing.StringAssertionExtensions.DoesNotEndWithCaseInsensitive(Benday.Common.Testing.ICheckAssertion(Of String), String, String)
  nameWithType: StringAssertionExtensions.DoesNotEndWithCaseInsensitive(ICheckAssertion<string>, string, string?)
  nameWithType.vb: StringAssertionExtensions.DoesNotEndWithCaseInsensitive(ICheckAssertion(Of String), String, String)
- uid: Benday.Common.Testing.StringAssertionExtensions.DoesNotEndWithCaseInsensitive*
  name: DoesNotEndWithCaseInsensitive
  href: api/Benday.Common.Testing.StringAssertionExtensions.html#Benday_Common_Testing_StringAssertionExtensions_DoesNotEndWithCaseInsensitive_
  commentId: Overload:Benday.Common.Testing.StringAssertionExtensions.DoesNotEndWithCaseInsensitive
  isSpec: "True"
  fullName: Benday.Common.Testing.StringAssertionExtensions.DoesNotEndWithCaseInsensitive
  nameWithType: StringAssertionExtensions.DoesNotEndWithCaseInsensitive
- uid: Benday.Common.Testing.StringAssertionExtensions.DoesNotStartWith(Benday.Common.Testing.ICheckAssertion{System.String},System.String,System.String)
  name: DoesNotStartWith(ICheckAssertion<string>, string, string?)
  href: api/Benday.Common.Testing.StringAssertionExtensions.html#Benday_Common_Testing_StringAssertionExtensions_DoesNotStartWith_Benday_Common_Testing_ICheckAssertion_System_String__System_String_System_String_
  commentId: M:Benday.Common.Testing.StringAssertionExtensions.DoesNotStartWith(Benday.Common.Testing.ICheckAssertion{System.String},System.String,System.String)
  name.vb: DoesNotStartWith(ICheckAssertion(Of String), String, String)
  fullName: Benday.Common.Testing.StringAssertionExtensions.DoesNotStartWith(Benday.Common.Testing.ICheckAssertion<string>, string, string?)
  fullName.vb: Benday.Common.Testing.StringAssertionExtensions.DoesNotStartWith(Benday.Common.Testing.ICheckAssertion(Of String), String, String)
  nameWithType: StringAssertionExtensions.DoesNotStartWith(ICheckAssertion<string>, string, string?)
  nameWithType.vb: StringAssertionExtensions.DoesNotStartWith(ICheckAssertion(Of String), String, String)
- uid: Benday.Common.Testing.StringAssertionExtensions.DoesNotStartWith*
  name: DoesNotStartWith
  href: api/Benday.Common.Testing.StringAssertionExtensions.html#Benday_Common_Testing_StringAssertionExtensions_DoesNotStartWith_
  commentId: Overload:Benday.Common.Testing.StringAssertionExtensions.DoesNotStartWith
  isSpec: "True"
  fullName: Benday.Common.Testing.StringAssertionExtensions.DoesNotStartWith
  nameWithType: StringAssertionExtensions.DoesNotStartWith
- uid: Benday.Common.Testing.StringAssertionExtensions.DoesNotStartWithCaseInsensitive(Benday.Common.Testing.ICheckAssertion{System.String},System.String,System.String)
  name: DoesNotStartWithCaseInsensitive(ICheckAssertion<string>, string, string?)
  href: api/Benday.Common.Testing.StringAssertionExtensions.html#Benday_Common_Testing_StringAssertionExtensions_DoesNotStartWithCaseInsensitive_Benday_Common_Testing_ICheckAssertion_System_String__System_String_System_String_
  commentId: M:Benday.Common.Testing.StringAssertionExtensions.DoesNotStartWithCaseInsensitive(Benday.Common.Testing.ICheckAssertion{System.String},System.String,System.String)
  name.vb: DoesNotStartWithCaseInsensitive(ICheckAssertion(Of String), String, String)
  fullName: Benday.Common.Testing.StringAssertionExtensions.DoesNotStartWithCaseInsensitive(Benday.Common.Testing.ICheckAssertion<string>, string, string?)
  fullName.vb: Benday.Common.Testing.StringAssertionExtensions.DoesNotStartWithCaseInsensitive(Benday.Common.Testing.ICheckAssertion(Of String), String, String)
  nameWithType: StringAssertionExtensions.DoesNotStartWithCaseInsensitive(ICheckAssertion<string>, string, string?)
  nameWithType.vb: StringAssertionExtensions.DoesNotStartWithCaseInsensitive(ICheckAssertion(Of String), String, String)
- uid: Benday.Common.Testing.StringAssertionExtensions.DoesNotStartWithCaseInsensitive*
  name: DoesNotStartWithCaseInsensitive
  href: api/Benday.Common.Testing.StringAssertionExtensions.html#Benday_Common_Testing_StringAssertionExtensions_DoesNotStartWithCaseInsensitive_
  commentId: Overload:Benday.Common.Testing.StringAssertionExtensions.DoesNotStartWithCaseInsensitive
  isSpec: "True"
  fullName: Benday.Common.Testing.StringAssertionExtensions.DoesNotStartWithCaseInsensitive
  nameWithType: StringAssertionExtensions.DoesNotStartWithCaseInsensitive
- uid: Benday.Common.Testing.StringAssertionExtensions.EndsWith(Benday.Common.Testing.ICheckAssertion{System.String},System.String,System.String)
  name: EndsWith(ICheckAssertion<string>, string, string?)
  href: api/Benday.Common.Testing.StringAssertionExtensions.html#Benday_Common_Testing_StringAssertionExtensions_EndsWith_Benday_Common_Testing_ICheckAssertion_System_String__System_String_System_String_
  commentId: M:Benday.Common.Testing.StringAssertionExtensions.EndsWith(Benday.Common.Testing.ICheckAssertion{System.String},System.String,System.String)
  name.vb: EndsWith(ICheckAssertion(Of String), String, String)
  fullName: Benday.Common.Testing.StringAssertionExtensions.EndsWith(Benday.Common.Testing.ICheckAssertion<string>, string, string?)
  fullName.vb: Benday.Common.Testing.StringAssertionExtensions.EndsWith(Benday.Common.Testing.ICheckAssertion(Of String), String, String)
  nameWithType: StringAssertionExtensions.EndsWith(ICheckAssertion<string>, string, string?)
  nameWithType.vb: StringAssertionExtensions.EndsWith(ICheckAssertion(Of String), String, String)
- uid: Benday.Common.Testing.StringAssertionExtensions.EndsWith*
  name: EndsWith
  href: api/Benday.Common.Testing.StringAssertionExtensions.html#Benday_Common_Testing_StringAssertionExtensions_EndsWith_
  commentId: Overload:Benday.Common.Testing.StringAssertionExtensions.EndsWith
  isSpec: "True"
  fullName: Benday.Common.Testing.StringAssertionExtensions.EndsWith
  nameWithType: StringAssertionExtensions.EndsWith
- uid: Benday.Common.Testing.StringAssertionExtensions.EndsWithCaseInsensitive(Benday.Common.Testing.ICheckAssertion{System.String},System.String,System.String)
  name: EndsWithCaseInsensitive(ICheckAssertion<string>, string, string?)
  href: api/Benday.Common.Testing.StringAssertionExtensions.html#Benday_Common_Testing_StringAssertionExtensions_EndsWithCaseInsensitive_Benday_Common_Testing_ICheckAssertion_System_String__System_String_System_String_
  commentId: M:Benday.Common.Testing.StringAssertionExtensions.EndsWithCaseInsensitive(Benday.Common.Testing.ICheckAssertion{System.String},System.String,System.String)
  name.vb: EndsWithCaseInsensitive(ICheckAssertion(Of String), String, String)
  fullName: Benday.Common.Testing.StringAssertionExtensions.EndsWithCaseInsensitive(Benday.Common.Testing.ICheckAssertion<string>, string, string?)
  fullName.vb: Benday.Common.Testing.StringAssertionExtensions.EndsWithCaseInsensitive(Benday.Common.Testing.ICheckAssertion(Of String), String, String)
  nameWithType: StringAssertionExtensions.EndsWithCaseInsensitive(ICheckAssertion<string>, string, string?)
  nameWithType.vb: StringAssertionExtensions.EndsWithCaseInsensitive(ICheckAssertion(Of String), String, String)
- uid: Benday.Common.Testing.StringAssertionExtensions.EndsWithCaseInsensitive*
  name: EndsWithCaseInsensitive
  href: api/Benday.Common.Testing.StringAssertionExtensions.html#Benday_Common_Testing_StringAssertionExtensions_EndsWithCaseInsensitive_
  commentId: Overload:Benday.Common.Testing.StringAssertionExtensions.EndsWithCaseInsensitive
  isSpec: "True"
  fullName: Benday.Common.Testing.StringAssertionExtensions.EndsWithCaseInsensitive
  nameWithType: StringAssertionExtensions.EndsWithCaseInsensitive
- uid: Benday.Common.Testing.StringAssertionExtensions.IsEqualCaseInsensitiveTo(Benday.Common.Testing.ICheckAssertion{System.String},System.String,System.String)
  name: IsEqualCaseInsensitiveTo(ICheckAssertion<string>, string?, string?)
  href: api/Benday.Common.Testing.StringAssertionExtensions.html#Benday_Common_Testing_StringAssertionExtensions_IsEqualCaseInsensitiveTo_Benday_Common_Testing_ICheckAssertion_System_String__System_String_System_String_
  commentId: M:Benday.Common.Testing.StringAssertionExtensions.IsEqualCaseInsensitiveTo(Benday.Common.Testing.ICheckAssertion{System.String},System.String,System.String)
  name.vb: IsEqualCaseInsensitiveTo(ICheckAssertion(Of String), String, String)
  fullName: Benday.Common.Testing.StringAssertionExtensions.IsEqualCaseInsensitiveTo(Benday.Common.Testing.ICheckAssertion<string>, string?, string?)
  fullName.vb: Benday.Common.Testing.StringAssertionExtensions.IsEqualCaseInsensitiveTo(Benday.Common.Testing.ICheckAssertion(Of String), String, String)
  nameWithType: StringAssertionExtensions.IsEqualCaseInsensitiveTo(ICheckAssertion<string>, string?, string?)
  nameWithType.vb: StringAssertionExtensions.IsEqualCaseInsensitiveTo(ICheckAssertion(Of String), String, String)
- uid: Benday.Common.Testing.StringAssertionExtensions.IsEqualCaseInsensitiveTo*
  name: IsEqualCaseInsensitiveTo
  href: api/Benday.Common.Testing.StringAssertionExtensions.html#Benday_Common_Testing_StringAssertionExtensions_IsEqualCaseInsensitiveTo_
  commentId: Overload:Benday.Common.Testing.StringAssertionExtensions.IsEqualCaseInsensitiveTo
  isSpec: "True"
  fullName: Benday.Common.Testing.StringAssertionExtensions.IsEqualCaseInsensitiveTo
  nameWithType: StringAssertionExtensions.IsEqualCaseInsensitiveTo
- uid: Benday.Common.Testing.StringAssertionExtensions.IsEqualTo(Benday.Common.Testing.ICheckAssertion{System.String},System.String,System.String)
  name: IsEqualTo(ICheckAssertion<string>, string, string?)
  href: api/Benday.Common.Testing.StringAssertionExtensions.html#Benday_Common_Testing_StringAssertionExtensions_IsEqualTo_Benday_Common_Testing_ICheckAssertion_System_String__System_String_System_String_
  commentId: M:Benday.Common.Testing.StringAssertionExtensions.IsEqualTo(Benday.Common.Testing.ICheckAssertion{System.String},System.String,System.String)
  name.vb: IsEqualTo(ICheckAssertion(Of String), String, String)
  fullName: Benday.Common.Testing.StringAssertionExtensions.IsEqualTo(Benday.Common.Testing.ICheckAssertion<string>, string, string?)
  fullName.vb: Benday.Common.Testing.StringAssertionExtensions.IsEqualTo(Benday.Common.Testing.ICheckAssertion(Of String), String, String)
  nameWithType: StringAssertionExtensions.IsEqualTo(ICheckAssertion<string>, string, string?)
  nameWithType.vb: StringAssertionExtensions.IsEqualTo(ICheckAssertion(Of String), String, String)
- uid: Benday.Common.Testing.StringAssertionExtensions.IsEqualTo*
  name: IsEqualTo
  href: api/Benday.Common.Testing.StringAssertionExtensions.html#Benday_Common_Testing_StringAssertionExtensions_IsEqualTo_
  commentId: Overload:Benday.Common.Testing.StringAssertionExtensions.IsEqualTo
  isSpec: "True"
  fullName: Benday.Common.Testing.StringAssertionExtensions.IsEqualTo
  nameWithType: StringAssertionExtensions.IsEqualTo
- uid: Benday.Common.Testing.StringAssertionExtensions.IsNotEqualTo(Benday.Common.Testing.ICheckAssertion{System.String},System.String,System.String)
  name: IsNotEqualTo(ICheckAssertion<string>, string?, string?)
  href: api/Benday.Common.Testing.StringAssertionExtensions.html#Benday_Common_Testing_StringAssertionExtensions_IsNotEqualTo_Benday_Common_Testing_ICheckAssertion_System_String__System_String_System_String_
  commentId: M:Benday.Common.Testing.StringAssertionExtensions.IsNotEqualTo(Benday.Common.Testing.ICheckAssertion{System.String},System.String,System.String)
  name.vb: IsNotEqualTo(ICheckAssertion(Of String), String, String)
  fullName: Benday.Common.Testing.StringAssertionExtensions.IsNotEqualTo(Benday.Common.Testing.ICheckAssertion<string>, string?, string?)
  fullName.vb: Benday.Common.Testing.StringAssertionExtensions.IsNotEqualTo(Benday.Common.Testing.ICheckAssertion(Of String), String, String)
  nameWithType: StringAssertionExtensions.IsNotEqualTo(ICheckAssertion<string>, string?, string?)
  nameWithType.vb: StringAssertionExtensions.IsNotEqualTo(ICheckAssertion(Of String), String, String)
- uid: Benday.Common.Testing.StringAssertionExtensions.IsNotEqualTo*
  name: IsNotEqualTo
  href: api/Benday.Common.Testing.StringAssertionExtensions.html#Benday_Common_Testing_StringAssertionExtensions_IsNotEqualTo_
  commentId: Overload:Benday.Common.Testing.StringAssertionExtensions.IsNotEqualTo
  isSpec: "True"
  fullName: Benday.Common.Testing.StringAssertionExtensions.IsNotEqualTo
  nameWithType: StringAssertionExtensions.IsNotEqualTo
- uid: Benday.Common.Testing.StringAssertionExtensions.IsNotNullOrEmpty(Benday.Common.Testing.ICheckAssertion{System.String},System.String)
  name: IsNotNullOrEmpty(ICheckAssertion<string>, string?)
  href: api/Benday.Common.Testing.StringAssertionExtensions.html#Benday_Common_Testing_StringAssertionExtensions_IsNotNullOrEmpty_Benday_Common_Testing_ICheckAssertion_System_String__System_String_
  commentId: M:Benday.Common.Testing.StringAssertionExtensions.IsNotNullOrEmpty(Benday.Common.Testing.ICheckAssertion{System.String},System.String)
  name.vb: IsNotNullOrEmpty(ICheckAssertion(Of String), String)
  fullName: Benday.Common.Testing.StringAssertionExtensions.IsNotNullOrEmpty(Benday.Common.Testing.ICheckAssertion<string>, string?)
  fullName.vb: Benday.Common.Testing.StringAssertionExtensions.IsNotNullOrEmpty(Benday.Common.Testing.ICheckAssertion(Of String), String)
  nameWithType: StringAssertionExtensions.IsNotNullOrEmpty(ICheckAssertion<string>, string?)
  nameWithType.vb: StringAssertionExtensions.IsNotNullOrEmpty(ICheckAssertion(Of String), String)
- uid: Benday.Common.Testing.StringAssertionExtensions.IsNotNullOrEmpty*
  name: IsNotNullOrEmpty
  href: api/Benday.Common.Testing.StringAssertionExtensions.html#Benday_Common_Testing_StringAssertionExtensions_IsNotNullOrEmpty_
  commentId: Overload:Benday.Common.Testing.StringAssertionExtensions.IsNotNullOrEmpty
  isSpec: "True"
  fullName: Benday.Common.Testing.StringAssertionExtensions.IsNotNullOrEmpty
  nameWithType: StringAssertionExtensions.IsNotNullOrEmpty
- uid: Benday.Common.Testing.StringAssertionExtensions.IsNotNullOrWhitespace(Benday.Common.Testing.ICheckAssertion{System.String},System.String)
  name: IsNotNullOrWhitespace(ICheckAssertion<string>, string?)
  href: api/Benday.Common.Testing.StringAssertionExtensions.html#Benday_Common_Testing_StringAssertionExtensions_IsNotNullOrWhitespace_Benday_Common_Testing_ICheckAssertion_System_String__System_String_
  commentId: M:Benday.Common.Testing.StringAssertionExtensions.IsNotNullOrWhitespace(Benday.Common.Testing.ICheckAssertion{System.String},System.String)
  name.vb: IsNotNullOrWhitespace(ICheckAssertion(Of String), String)
  fullName: Benday.Common.Testing.StringAssertionExtensions.IsNotNullOrWhitespace(Benday.Common.Testing.ICheckAssertion<string>, string?)
  fullName.vb: Benday.Common.Testing.StringAssertionExtensions.IsNotNullOrWhitespace(Benday.Common.Testing.ICheckAssertion(Of String), String)
  nameWithType: StringAssertionExtensions.IsNotNullOrWhitespace(ICheckAssertion<string>, string?)
  nameWithType.vb: StringAssertionExtensions.IsNotNullOrWhitespace(ICheckAssertion(Of String), String)
- uid: Benday.Common.Testing.StringAssertionExtensions.IsNotNullOrWhitespace*
  name: IsNotNullOrWhitespace
  href: api/Benday.Common.Testing.StringAssertionExtensions.html#Benday_Common_Testing_StringAssertionExtensions_IsNotNullOrWhitespace_
  commentId: Overload:Benday.Common.Testing.StringAssertionExtensions.IsNotNullOrWhitespace
  isSpec: "True"
  fullName: Benday.Common.Testing.StringAssertionExtensions.IsNotNullOrWhitespace
  nameWithType: StringAssertionExtensions.IsNotNullOrWhitespace
- uid: Benday.Common.Testing.StringAssertionExtensions.StartsWith(Benday.Common.Testing.ICheckAssertion{System.String},System.String,System.String)
  name: StartsWith(ICheckAssertion<string>, string, string?)
  href: api/Benday.Common.Testing.StringAssertionExtensions.html#Benday_Common_Testing_StringAssertionExtensions_StartsWith_Benday_Common_Testing_ICheckAssertion_System_String__System_String_System_String_
  commentId: M:Benday.Common.Testing.StringAssertionExtensions.StartsWith(Benday.Common.Testing.ICheckAssertion{System.String},System.String,System.String)
  name.vb: StartsWith(ICheckAssertion(Of String), String, String)
  fullName: Benday.Common.Testing.StringAssertionExtensions.StartsWith(Benday.Common.Testing.ICheckAssertion<string>, string, string?)
  fullName.vb: Benday.Common.Testing.StringAssertionExtensions.StartsWith(Benday.Common.Testing.ICheckAssertion(Of String), String, String)
  nameWithType: StringAssertionExtensions.StartsWith(ICheckAssertion<string>, string, string?)
  nameWithType.vb: StringAssertionExtensions.StartsWith(ICheckAssertion(Of String), String, String)
- uid: Benday.Common.Testing.StringAssertionExtensions.StartsWith*
  name: StartsWith
  href: api/Benday.Common.Testing.StringAssertionExtensions.html#Benday_Common_Testing_StringAssertionExtensions_StartsWith_
  commentId: Overload:Benday.Common.Testing.StringAssertionExtensions.StartsWith
  isSpec: "True"
  fullName: Benday.Common.Testing.StringAssertionExtensions.StartsWith
  nameWithType: StringAssertionExtensions.StartsWith
- uid: Benday.Common.Testing.StringAssertionExtensions.StartsWithCaseInsensitive(Benday.Common.Testing.ICheckAssertion{System.String},System.String,System.String)
  name: StartsWithCaseInsensitive(ICheckAssertion<string>, string, string?)
  href: api/Benday.Common.Testing.StringAssertionExtensions.html#Benday_Common_Testing_StringAssertionExtensions_StartsWithCaseInsensitive_Benday_Common_Testing_ICheckAssertion_System_String__System_String_System_String_
  commentId: M:Benday.Common.Testing.StringAssertionExtensions.StartsWithCaseInsensitive(Benday.Common.Testing.ICheckAssertion{System.String},System.String,System.String)
  name.vb: StartsWithCaseInsensitive(ICheckAssertion(Of String), String, String)
  fullName: Benday.Common.Testing.StringAssertionExtensions.StartsWithCaseInsensitive(Benday.Common.Testing.ICheckAssertion<string>, string, string?)
  fullName.vb: Benday.Common.Testing.StringAssertionExtensions.StartsWithCaseInsensitive(Benday.Common.Testing.ICheckAssertion(Of String), String, String)
  nameWithType: StringAssertionExtensions.StartsWithCaseInsensitive(ICheckAssertion<string>, string, string?)
  nameWithType.vb: StringAssertionExtensions.StartsWithCaseInsensitive(ICheckAssertion(Of String), String, String)
- uid: Benday.Common.Testing.StringAssertionExtensions.StartsWithCaseInsensitive*
  name: StartsWithCaseInsensitive
  href: api/Benday.Common.Testing.StringAssertionExtensions.html#Benday_Common_Testing_StringAssertionExtensions_StartsWithCaseInsensitive_
  commentId: Overload:Benday.Common.Testing.StringAssertionExtensions.StartsWithCaseInsensitive
  isSpec: "True"
  fullName: Benday.Common.Testing.StringAssertionExtensions.StartsWithCaseInsensitive
  nameWithType: StringAssertionExtensions.StartsWithCaseInsensitive
- uid: Benday.Common.Testing.TestClassBase
  name: TestClassBase
  href: api/Benday.Common.Testing.TestClassBase.html
  commentId: T:Benday.Common.Testing.TestClassBase
  fullName: Benday.Common.Testing.TestClassBase
  nameWithType: TestClassBase
- uid: Benday.Common.Testing.TestClassBase.#ctor(Xunit.Abstractions.ITestOutputHelper)
  name: TestClassBase(ITestOutputHelper)
  href: api/Benday.Common.Testing.TestClassBase.html#Benday_Common_Testing_TestClassBase__ctor_Xunit_Abstractions_ITestOutputHelper_
  commentId: M:Benday.Common.Testing.TestClassBase.#ctor(Xunit.Abstractions.ITestOutputHelper)
  name.vb: New(ITestOutputHelper)
  fullName: Benday.Common.Testing.TestClassBase.TestClassBase(Xunit.Abstractions.ITestOutputHelper)
  fullName.vb: Benday.Common.Testing.TestClassBase.New(Xunit.Abstractions.ITestOutputHelper)
  nameWithType: TestClassBase.TestClassBase(ITestOutputHelper)
  nameWithType.vb: TestClassBase.New(ITestOutputHelper)
- uid: Benday.Common.Testing.TestClassBase.#ctor*
  name: TestClassBase
  href: api/Benday.Common.Testing.TestClassBase.html#Benday_Common_Testing_TestClassBase__ctor_
  commentId: Overload:Benday.Common.Testing.TestClassBase.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Benday.Common.Testing.TestClassBase.TestClassBase
  fullName.vb: Benday.Common.Testing.TestClassBase.New
  nameWithType: TestClassBase.TestClassBase
  nameWithType.vb: TestClassBase.New
- uid: Benday.Common.Testing.TestClassBase.GetPathToSampleFilesDirectory
  name: GetPathToSampleFilesDirectory()
  href: api/Benday.Common.Testing.TestClassBase.html#Benday_Common_Testing_TestClassBase_GetPathToSampleFilesDirectory
  commentId: M:Benday.Common.Testing.TestClassBase.GetPathToSampleFilesDirectory
  fullName: Benday.Common.Testing.TestClassBase.GetPathToSampleFilesDirectory()
  nameWithType: TestClassBase.GetPathToSampleFilesDirectory()
- uid: Benday.Common.Testing.TestClassBase.GetPathToSampleFilesDirectory(System.String)
  name: GetPathToSampleFilesDirectory(string)
  href: api/Benday.Common.Testing.TestClassBase.html#Benday_Common_Testing_TestClassBase_GetPathToSampleFilesDirectory_System_String_
  commentId: M:Benday.Common.Testing.TestClassBase.GetPathToSampleFilesDirectory(System.String)
  name.vb: GetPathToSampleFilesDirectory(String)
  fullName: Benday.Common.Testing.TestClassBase.GetPathToSampleFilesDirectory(string)
  fullName.vb: Benday.Common.Testing.TestClassBase.GetPathToSampleFilesDirectory(String)
  nameWithType: TestClassBase.GetPathToSampleFilesDirectory(string)
  nameWithType.vb: TestClassBase.GetPathToSampleFilesDirectory(String)
- uid: Benday.Common.Testing.TestClassBase.GetPathToSampleFilesDirectory*
  name: GetPathToSampleFilesDirectory
  href: api/Benday.Common.Testing.TestClassBase.html#Benday_Common_Testing_TestClassBase_GetPathToSampleFilesDirectory_
  commentId: Overload:Benday.Common.Testing.TestClassBase.GetPathToSampleFilesDirectory
  isSpec: "True"
  fullName: Benday.Common.Testing.TestClassBase.GetPathToSampleFilesDirectory
  nameWithType: TestClassBase.GetPathToSampleFilesDirectory
- uid: Benday.Common.Testing.TestClassBase.GetPathToTestFile(System.String)
  name: GetPathToTestFile(string)
  href: api/Benday.Common.Testing.TestClassBase.html#Benday_Common_Testing_TestClassBase_GetPathToTestFile_System_String_
  commentId: M:Benday.Common.Testing.TestClassBase.GetPathToTestFile(System.String)
  name.vb: GetPathToTestFile(String)
  fullName: Benday.Common.Testing.TestClassBase.GetPathToTestFile(string)
  fullName.vb: Benday.Common.Testing.TestClassBase.GetPathToTestFile(String)
  nameWithType: TestClassBase.GetPathToTestFile(string)
  nameWithType.vb: TestClassBase.GetPathToTestFile(String)
- uid: Benday.Common.Testing.TestClassBase.GetPathToTestFile*
  name: GetPathToTestFile
  href: api/Benday.Common.Testing.TestClassBase.html#Benday_Common_Testing_TestClassBase_GetPathToTestFile_
  commentId: Overload:Benday.Common.Testing.TestClassBase.GetPathToTestFile
  isSpec: "True"
  fullName: Benday.Common.Testing.TestClassBase.GetPathToTestFile
  nameWithType: TestClassBase.GetPathToTestFile
- uid: Benday.Common.Testing.TestClassBase.GetSampleFilePath(System.String)
  name: GetSampleFilePath(string)
  href: api/Benday.Common.Testing.TestClassBase.html#Benday_Common_Testing_TestClassBase_GetSampleFilePath_System_String_
  commentId: M:Benday.Common.Testing.TestClassBase.GetSampleFilePath(System.String)
  name.vb: GetSampleFilePath(String)
  fullName: Benday.Common.Testing.TestClassBase.GetSampleFilePath(string)
  fullName.vb: Benday.Common.Testing.TestClassBase.GetSampleFilePath(String)
  nameWithType: TestClassBase.GetSampleFilePath(string)
  nameWithType.vb: TestClassBase.GetSampleFilePath(String)
- uid: Benday.Common.Testing.TestClassBase.GetSampleFilePath*
  name: GetSampleFilePath
  href: api/Benday.Common.Testing.TestClassBase.html#Benday_Common_Testing_TestClassBase_GetSampleFilePath_
  commentId: Overload:Benday.Common.Testing.TestClassBase.GetSampleFilePath
  isSpec: "True"
  fullName: Benday.Common.Testing.TestClassBase.GetSampleFilePath
  nameWithType: TestClassBase.GetSampleFilePath
- uid: Benday.Common.Testing.TestClassBase.GetSampleFileText(System.String)
  name: GetSampleFileText(string)
  href: api/Benday.Common.Testing.TestClassBase.html#Benday_Common_Testing_TestClassBase_GetSampleFileText_System_String_
  commentId: M:Benday.Common.Testing.TestClassBase.GetSampleFileText(System.String)
  name.vb: GetSampleFileText(String)
  fullName: Benday.Common.Testing.TestClassBase.GetSampleFileText(string)
  fullName.vb: Benday.Common.Testing.TestClassBase.GetSampleFileText(String)
  nameWithType: TestClassBase.GetSampleFileText(string)
  nameWithType.vb: TestClassBase.GetSampleFileText(String)
- uid: Benday.Common.Testing.TestClassBase.GetSampleFileText*
  name: GetSampleFileText
  href: api/Benday.Common.Testing.TestClassBase.html#Benday_Common_Testing_TestClassBase_GetSampleFileText_
  commentId: Overload:Benday.Common.Testing.TestClassBase.GetSampleFileText
  isSpec: "True"
  fullName: Benday.Common.Testing.TestClassBase.GetSampleFileText
  nameWithType: TestClassBase.GetSampleFileText
- uid: Benday.Common.Testing.TestClassBase.SampleFilesDirectoryName
  name: SampleFilesDirectoryName
  href: api/Benday.Common.Testing.TestClassBase.html#Benday_Common_Testing_TestClassBase_SampleFilesDirectoryName
  commentId: P:Benday.Common.Testing.TestClassBase.SampleFilesDirectoryName
  fullName: Benday.Common.Testing.TestClassBase.SampleFilesDirectoryName
  nameWithType: TestClassBase.SampleFilesDirectoryName
- uid: Benday.Common.Testing.TestClassBase.SampleFilesDirectoryName*
  name: SampleFilesDirectoryName
  href: api/Benday.Common.Testing.TestClassBase.html#Benday_Common_Testing_TestClassBase_SampleFilesDirectoryName_
  commentId: Overload:Benday.Common.Testing.TestClassBase.SampleFilesDirectoryName
  isSpec: "True"
  fullName: Benday.Common.Testing.TestClassBase.SampleFilesDirectoryName
  nameWithType: TestClassBase.SampleFilesDirectoryName
- uid: Benday.Common.Testing.TestClassBase.WriteLine(System.String)
  name: WriteLine(string)
  href: api/Benday.Common.Testing.TestClassBase.html#Benday_Common_Testing_TestClassBase_WriteLine_System_String_
  commentId: M:Benday.Common.Testing.TestClassBase.WriteLine(System.String)
  name.vb: WriteLine(String)
  fullName: Benday.Common.Testing.TestClassBase.WriteLine(string)
  fullName.vb: Benday.Common.Testing.TestClassBase.WriteLine(String)
  nameWithType: TestClassBase.WriteLine(string)
  nameWithType.vb: TestClassBase.WriteLine(String)
- uid: Benday.Common.Testing.TestClassBase.WriteLine*
  name: WriteLine
  href: api/Benday.Common.Testing.TestClassBase.html#Benday_Common_Testing_TestClassBase_WriteLine_
  commentId: Overload:Benday.Common.Testing.TestClassBase.WriteLine
  isSpec: "True"
  fullName: Benday.Common.Testing.TestClassBase.WriteLine
  nameWithType: TestClassBase.WriteLine
- uid: Benday.Common.TypeRegistrationItem`2
  name: TypeRegistrationItem<TService, TImplementation>
  href: api/Benday.Common.TypeRegistrationItem-2.html
  commentId: T:Benday.Common.TypeRegistrationItem`2
  name.vb: TypeRegistrationItem(Of TService, TImplementation)
  fullName: Benday.Common.TypeRegistrationItem<TService, TImplementation>
  fullName.vb: Benday.Common.TypeRegistrationItem(Of TService, TImplementation)
  nameWithType: TypeRegistrationItem<TService, TImplementation>
  nameWithType.vb: TypeRegistrationItem(Of TService, TImplementation)
- uid: Benday.Common.TypeRegistrationItem`2.#ctor(Microsoft.Extensions.DependencyInjection.ServiceLifetime)
  name: TypeRegistrationItem(ServiceLifetime)
  href: api/Benday.Common.TypeRegistrationItem-2.html#Benday_Common_TypeRegistrationItem_2__ctor_Microsoft_Extensions_DependencyInjection_ServiceLifetime_
  commentId: M:Benday.Common.TypeRegistrationItem`2.#ctor(Microsoft.Extensions.DependencyInjection.ServiceLifetime)
  name.vb: New(ServiceLifetime)
  fullName: Benday.Common.TypeRegistrationItem<TService, TImplementation>.TypeRegistrationItem(Microsoft.Extensions.DependencyInjection.ServiceLifetime)
  fullName.vb: Benday.Common.TypeRegistrationItem(Of TService, TImplementation).New(Microsoft.Extensions.DependencyInjection.ServiceLifetime)
  nameWithType: TypeRegistrationItem<TService, TImplementation>.TypeRegistrationItem(ServiceLifetime)
  nameWithType.vb: TypeRegistrationItem(Of TService, TImplementation).New(ServiceLifetime)
- uid: Benday.Common.TypeRegistrationItem`2.#ctor*
  name: TypeRegistrationItem
  href: api/Benday.Common.TypeRegistrationItem-2.html#Benday_Common_TypeRegistrationItem_2__ctor_
  commentId: Overload:Benday.Common.TypeRegistrationItem`2.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Benday.Common.TypeRegistrationItem<TService, TImplementation>.TypeRegistrationItem
  fullName.vb: Benday.Common.TypeRegistrationItem(Of TService, TImplementation).New
  nameWithType: TypeRegistrationItem<TService, TImplementation>.TypeRegistrationItem
  nameWithType.vb: TypeRegistrationItem(Of TService, TImplementation).New
- uid: Benday.Common.TypeRegistrationItem`2.ImplementationType
  name: ImplementationType
  href: api/Benday.Common.TypeRegistrationItem-2.html#Benday_Common_TypeRegistrationItem_2_ImplementationType
  commentId: P:Benday.Common.TypeRegistrationItem`2.ImplementationType
  fullName: Benday.Common.TypeRegistrationItem<TService, TImplementation>.ImplementationType
  fullName.vb: Benday.Common.TypeRegistrationItem(Of TService, TImplementation).ImplementationType
  nameWithType: TypeRegistrationItem<TService, TImplementation>.ImplementationType
  nameWithType.vb: TypeRegistrationItem(Of TService, TImplementation).ImplementationType
- uid: Benday.Common.TypeRegistrationItem`2.ImplementationType*
  name: ImplementationType
  href: api/Benday.Common.TypeRegistrationItem-2.html#Benday_Common_TypeRegistrationItem_2_ImplementationType_
  commentId: Overload:Benday.Common.TypeRegistrationItem`2.ImplementationType
  isSpec: "True"
  fullName: Benday.Common.TypeRegistrationItem<TService, TImplementation>.ImplementationType
  fullName.vb: Benday.Common.TypeRegistrationItem(Of TService, TImplementation).ImplementationType
  nameWithType: TypeRegistrationItem<TService, TImplementation>.ImplementationType
  nameWithType.vb: TypeRegistrationItem(Of TService, TImplementation).ImplementationType
- uid: Benday.Common.TypeRegistrationItem`2.Lifetime
  name: Lifetime
  href: api/Benday.Common.TypeRegistrationItem-2.html#Benday_Common_TypeRegistrationItem_2_Lifetime
  commentId: P:Benday.Common.TypeRegistrationItem`2.Lifetime
  fullName: Benday.Common.TypeRegistrationItem<TService, TImplementation>.Lifetime
  fullName.vb: Benday.Common.TypeRegistrationItem(Of TService, TImplementation).Lifetime
  nameWithType: TypeRegistrationItem<TService, TImplementation>.Lifetime
  nameWithType.vb: TypeRegistrationItem(Of TService, TImplementation).Lifetime
- uid: Benday.Common.TypeRegistrationItem`2.Lifetime*
  name: Lifetime
  href: api/Benday.Common.TypeRegistrationItem-2.html#Benday_Common_TypeRegistrationItem_2_Lifetime_
  commentId: Overload:Benday.Common.TypeRegistrationItem`2.Lifetime
  isSpec: "True"
  fullName: Benday.Common.TypeRegistrationItem<TService, TImplementation>.Lifetime
  fullName.vb: Benday.Common.TypeRegistrationItem(Of TService, TImplementation).Lifetime
  nameWithType: TypeRegistrationItem<TService, TImplementation>.Lifetime
  nameWithType.vb: TypeRegistrationItem(Of TService, TImplementation).Lifetime
- uid: Benday.Common.TypeRegistrationItem`2.ServiceType
  name: ServiceType
  href: api/Benday.Common.TypeRegistrationItem-2.html#Benday_Common_TypeRegistrationItem_2_ServiceType
  commentId: P:Benday.Common.TypeRegistrationItem`2.ServiceType
  fullName: Benday.Common.TypeRegistrationItem<TService, TImplementation>.ServiceType
  fullName.vb: Benday.Common.TypeRegistrationItem(Of TService, TImplementation).ServiceType
  nameWithType: TypeRegistrationItem<TService, TImplementation>.ServiceType
  nameWithType.vb: TypeRegistrationItem(Of TService, TImplementation).ServiceType
- uid: Benday.Common.TypeRegistrationItem`2.ServiceType*
  name: ServiceType
  href: api/Benday.Common.TypeRegistrationItem-2.html#Benday_Common_TypeRegistrationItem_2_ServiceType_
  commentId: Overload:Benday.Common.TypeRegistrationItem`2.ServiceType
  isSpec: "True"
  fullName: Benday.Common.TypeRegistrationItem<TService, TImplementation>.ServiceType
  fullName.vb: Benday.Common.TypeRegistrationItem(Of TService, TImplementation).ServiceType
  nameWithType: TypeRegistrationItem<TService, TImplementation>.ServiceType
  nameWithType.vb: TypeRegistrationItem(Of TService, TImplementation).ServiceType
