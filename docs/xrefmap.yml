### YamlMime:XRefMap
sorted: true
references:
- uid: Benday.Common
  name: Benday.Common
  href: api/Benday.Common.html
  commentId: N:Benday.Common
  fullName: Benday.Common
  nameWithType: Benday.Common
- uid: Benday.Common.ConfigurationExtensionMethods
  name: ConfigurationExtensionMethods
  href: api/Benday.Common.ConfigurationExtensionMethods.html
  commentId: T:Benday.Common.ConfigurationExtensionMethods
  fullName: Benday.Common.ConfigurationExtensionMethods
  nameWithType: ConfigurationExtensionMethods
- uid: Benday.Common.ConfigurationExtensionMethods.GetStringThrowIfNullOrEmpty(Microsoft.Extensions.Configuration.IConfiguration,System.String)
  name: GetStringThrowIfNullOrEmpty(IConfiguration, string)
  href: api/Benday.Common.ConfigurationExtensionMethods.html#Benday_Common_ConfigurationExtensionMethods_GetStringThrowIfNullOrEmpty_Microsoft_Extensions_Configuration_IConfiguration_System_String_
  commentId: M:Benday.Common.ConfigurationExtensionMethods.GetStringThrowIfNullOrEmpty(Microsoft.Extensions.Configuration.IConfiguration,System.String)
  name.vb: GetStringThrowIfNullOrEmpty(IConfiguration, String)
  fullName: Benday.Common.ConfigurationExtensionMethods.GetStringThrowIfNullOrEmpty(Microsoft.Extensions.Configuration.IConfiguration, string)
  fullName.vb: Benday.Common.ConfigurationExtensionMethods.GetStringThrowIfNullOrEmpty(Microsoft.Extensions.Configuration.IConfiguration, String)
  nameWithType: ConfigurationExtensionMethods.GetStringThrowIfNullOrEmpty(IConfiguration, string)
  nameWithType.vb: ConfigurationExtensionMethods.GetStringThrowIfNullOrEmpty(IConfiguration, String)
- uid: Benday.Common.ConfigurationExtensionMethods.GetStringThrowIfNullOrEmpty*
  name: GetStringThrowIfNullOrEmpty
  href: api/Benday.Common.ConfigurationExtensionMethods.html#Benday_Common_ConfigurationExtensionMethods_GetStringThrowIfNullOrEmpty_
  commentId: Overload:Benday.Common.ConfigurationExtensionMethods.GetStringThrowIfNullOrEmpty
  isSpec: "True"
  fullName: Benday.Common.ConfigurationExtensionMethods.GetStringThrowIfNullOrEmpty
  nameWithType: ConfigurationExtensionMethods.GetStringThrowIfNullOrEmpty
- uid: Benday.Common.ConfigurationExtensionMethods.SafeGetString(Microsoft.Extensions.Configuration.IConfiguration,System.String,System.String)
  name: SafeGetString(IConfiguration, string, string)
  href: api/Benday.Common.ConfigurationExtensionMethods.html#Benday_Common_ConfigurationExtensionMethods_SafeGetString_Microsoft_Extensions_Configuration_IConfiguration_System_String_System_String_
  commentId: M:Benday.Common.ConfigurationExtensionMethods.SafeGetString(Microsoft.Extensions.Configuration.IConfiguration,System.String,System.String)
  name.vb: SafeGetString(IConfiguration, String, String)
  fullName: Benday.Common.ConfigurationExtensionMethods.SafeGetString(Microsoft.Extensions.Configuration.IConfiguration, string, string)
  fullName.vb: Benday.Common.ConfigurationExtensionMethods.SafeGetString(Microsoft.Extensions.Configuration.IConfiguration, String, String)
  nameWithType: ConfigurationExtensionMethods.SafeGetString(IConfiguration, string, string)
  nameWithType.vb: ConfigurationExtensionMethods.SafeGetString(IConfiguration, String, String)
- uid: Benday.Common.ConfigurationExtensionMethods.SafeGetString*
  name: SafeGetString
  href: api/Benday.Common.ConfigurationExtensionMethods.html#Benday_Common_ConfigurationExtensionMethods_SafeGetString_
  commentId: Overload:Benday.Common.ConfigurationExtensionMethods.SafeGetString
  isSpec: "True"
  fullName: Benday.Common.ConfigurationExtensionMethods.SafeGetString
  nameWithType: ConfigurationExtensionMethods.SafeGetString
- uid: Benday.Common.ConfigurationExtensions
  name: ConfigurationExtensions
  href: api/Benday.Common.ConfigurationExtensions.html
  commentId: T:Benday.Common.ConfigurationExtensions
  fullName: Benday.Common.ConfigurationExtensions
  nameWithType: ConfigurationExtensions
- uid: Benday.Common.ConfigurationExtensions.GetStringThrowIfNullOrEmpty(Microsoft.Extensions.Configuration.IConfiguration,System.String)
  name: GetStringThrowIfNullOrEmpty(IConfiguration, string)
  href: api/Benday.Common.ConfigurationExtensions.html#Benday_Common_ConfigurationExtensions_GetStringThrowIfNullOrEmpty_Microsoft_Extensions_Configuration_IConfiguration_System_String_
  commentId: M:Benday.Common.ConfigurationExtensions.GetStringThrowIfNullOrEmpty(Microsoft.Extensions.Configuration.IConfiguration,System.String)
  name.vb: GetStringThrowIfNullOrEmpty(IConfiguration, String)
  fullName: Benday.Common.ConfigurationExtensions.GetStringThrowIfNullOrEmpty(Microsoft.Extensions.Configuration.IConfiguration, string)
  fullName.vb: Benday.Common.ConfigurationExtensions.GetStringThrowIfNullOrEmpty(Microsoft.Extensions.Configuration.IConfiguration, String)
  nameWithType: ConfigurationExtensions.GetStringThrowIfNullOrEmpty(IConfiguration, string)
  nameWithType.vb: ConfigurationExtensions.GetStringThrowIfNullOrEmpty(IConfiguration, String)
- uid: Benday.Common.ConfigurationExtensions.GetStringThrowIfNullOrEmpty*
  name: GetStringThrowIfNullOrEmpty
  href: api/Benday.Common.ConfigurationExtensions.html#Benday_Common_ConfigurationExtensions_GetStringThrowIfNullOrEmpty_
  commentId: Overload:Benday.Common.ConfigurationExtensions.GetStringThrowIfNullOrEmpty
  isSpec: "True"
  fullName: Benday.Common.ConfigurationExtensions.GetStringThrowIfNullOrEmpty
  nameWithType: ConfigurationExtensions.GetStringThrowIfNullOrEmpty
- uid: Benday.Common.ConfigurationExtensions.SafeGetString(Microsoft.Extensions.Configuration.IConfiguration,System.String,System.String)
  name: SafeGetString(IConfiguration, string, string)
  href: api/Benday.Common.ConfigurationExtensions.html#Benday_Common_ConfigurationExtensions_SafeGetString_Microsoft_Extensions_Configuration_IConfiguration_System_String_System_String_
  commentId: M:Benday.Common.ConfigurationExtensions.SafeGetString(Microsoft.Extensions.Configuration.IConfiguration,System.String,System.String)
  name.vb: SafeGetString(IConfiguration, String, String)
  fullName: Benday.Common.ConfigurationExtensions.SafeGetString(Microsoft.Extensions.Configuration.IConfiguration, string, string)
  fullName.vb: Benday.Common.ConfigurationExtensions.SafeGetString(Microsoft.Extensions.Configuration.IConfiguration, String, String)
  nameWithType: ConfigurationExtensions.SafeGetString(IConfiguration, string, string)
  nameWithType.vb: ConfigurationExtensions.SafeGetString(IConfiguration, String, String)
- uid: Benday.Common.ConfigurationExtensions.SafeGetString*
  name: SafeGetString
  href: api/Benday.Common.ConfigurationExtensions.html#Benday_Common_ConfigurationExtensions_SafeGetString_
  commentId: Overload:Benday.Common.ConfigurationExtensions.SafeGetString
  isSpec: "True"
  fullName: Benday.Common.ConfigurationExtensions.SafeGetString
  nameWithType: ConfigurationExtensions.SafeGetString
- uid: Benday.Common.IDeleteable
  name: IDeleteable
  href: api/Benday.Common.IDeleteable.html
  commentId: T:Benday.Common.IDeleteable
  fullName: Benday.Common.IDeleteable
  nameWithType: IDeleteable
- uid: Benday.Common.IDeleteable.IsMarkedForDelete
  name: IsMarkedForDelete
  href: api/Benday.Common.IDeleteable.html#Benday_Common_IDeleteable_IsMarkedForDelete
  commentId: P:Benday.Common.IDeleteable.IsMarkedForDelete
  fullName: Benday.Common.IDeleteable.IsMarkedForDelete
  nameWithType: IDeleteable.IsMarkedForDelete
- uid: Benday.Common.IDeleteable.IsMarkedForDelete*
  name: IsMarkedForDelete
  href: api/Benday.Common.IDeleteable.html#Benday_Common_IDeleteable_IsMarkedForDelete_
  commentId: Overload:Benday.Common.IDeleteable.IsMarkedForDelete
  isSpec: "True"
  fullName: Benday.Common.IDeleteable.IsMarkedForDelete
  nameWithType: IDeleteable.IsMarkedForDelete
- uid: Benday.Common.IInt32Identity
  name: IInt32Identity
  href: api/Benday.Common.IInt32Identity.html
  commentId: T:Benday.Common.IInt32Identity
  fullName: Benday.Common.IInt32Identity
  nameWithType: IInt32Identity
- uid: Benday.Common.IInt32Identity.Id
  name: Id
  href: api/Benday.Common.IInt32Identity.html#Benday_Common_IInt32Identity_Id
  commentId: P:Benday.Common.IInt32Identity.Id
  fullName: Benday.Common.IInt32Identity.Id
  nameWithType: IInt32Identity.Id
- uid: Benday.Common.IInt32Identity.Id*
  name: Id
  href: api/Benday.Common.IInt32Identity.html#Benday_Common_IInt32Identity_Id_
  commentId: Overload:Benday.Common.IInt32Identity.Id
  isSpec: "True"
  fullName: Benday.Common.IInt32Identity.Id
  nameWithType: IInt32Identity.Id
- uid: Benday.Common.IPageableResults
  name: IPageableResults
  href: api/Benday.Common.IPageableResults.html
  commentId: T:Benday.Common.IPageableResults
  fullName: Benday.Common.IPageableResults
  nameWithType: IPageableResults
- uid: Benday.Common.IPageableResults.CurrentPage
  name: CurrentPage
  href: api/Benday.Common.IPageableResults.html#Benday_Common_IPageableResults_CurrentPage
  commentId: P:Benday.Common.IPageableResults.CurrentPage
  fullName: Benday.Common.IPageableResults.CurrentPage
  nameWithType: IPageableResults.CurrentPage
- uid: Benday.Common.IPageableResults.CurrentPage*
  name: CurrentPage
  href: api/Benday.Common.IPageableResults.html#Benday_Common_IPageableResults_CurrentPage_
  commentId: Overload:Benday.Common.IPageableResults.CurrentPage
  isSpec: "True"
  fullName: Benday.Common.IPageableResults.CurrentPage
  nameWithType: IPageableResults.CurrentPage
- uid: Benday.Common.IPageableResults.ItemsPerPage
  name: ItemsPerPage
  href: api/Benday.Common.IPageableResults.html#Benday_Common_IPageableResults_ItemsPerPage
  commentId: P:Benday.Common.IPageableResults.ItemsPerPage
  fullName: Benday.Common.IPageableResults.ItemsPerPage
  nameWithType: IPageableResults.ItemsPerPage
- uid: Benday.Common.IPageableResults.ItemsPerPage*
  name: ItemsPerPage
  href: api/Benday.Common.IPageableResults.html#Benday_Common_IPageableResults_ItemsPerPage_
  commentId: Overload:Benday.Common.IPageableResults.ItemsPerPage
  isSpec: "True"
  fullName: Benday.Common.IPageableResults.ItemsPerPage
  nameWithType: IPageableResults.ItemsPerPage
- uid: Benday.Common.IPageableResults.PageCount
  name: PageCount
  href: api/Benday.Common.IPageableResults.html#Benday_Common_IPageableResults_PageCount
  commentId: P:Benday.Common.IPageableResults.PageCount
  fullName: Benday.Common.IPageableResults.PageCount
  nameWithType: IPageableResults.PageCount
- uid: Benday.Common.IPageableResults.PageCount*
  name: PageCount
  href: api/Benday.Common.IPageableResults.html#Benday_Common_IPageableResults_PageCount_
  commentId: Overload:Benday.Common.IPageableResults.PageCount
  isSpec: "True"
  fullName: Benday.Common.IPageableResults.PageCount
  nameWithType: IPageableResults.PageCount
- uid: Benday.Common.IPageableResults.TotalCount
  name: TotalCount
  href: api/Benday.Common.IPageableResults.html#Benday_Common_IPageableResults_TotalCount
  commentId: P:Benday.Common.IPageableResults.TotalCount
  fullName: Benday.Common.IPageableResults.TotalCount
  nameWithType: IPageableResults.TotalCount
- uid: Benday.Common.IPageableResults.TotalCount*
  name: TotalCount
  href: api/Benday.Common.IPageableResults.html#Benday_Common_IPageableResults_TotalCount_
  commentId: Overload:Benday.Common.IPageableResults.TotalCount
  isSpec: "True"
  fullName: Benday.Common.IPageableResults.TotalCount
  nameWithType: IPageableResults.TotalCount
- uid: Benday.Common.ISelectable
  name: ISelectable
  href: api/Benday.Common.ISelectable.html
  commentId: T:Benday.Common.ISelectable
  fullName: Benday.Common.ISelectable
  nameWithType: ISelectable
- uid: Benday.Common.ISelectable.IsSelected
  name: IsSelected
  href: api/Benday.Common.ISelectable.html#Benday_Common_ISelectable_IsSelected
  commentId: P:Benday.Common.ISelectable.IsSelected
  fullName: Benday.Common.ISelectable.IsSelected
  nameWithType: ISelectable.IsSelected
- uid: Benday.Common.ISelectable.IsSelected*
  name: IsSelected
  href: api/Benday.Common.ISelectable.html#Benday_Common_ISelectable_IsSelected_
  commentId: Overload:Benday.Common.ISelectable.IsSelected
  isSpec: "True"
  fullName: Benday.Common.ISelectable.IsSelected
  nameWithType: ISelectable.IsSelected
- uid: Benday.Common.ISortableResult
  name: ISortableResult
  href: api/Benday.Common.ISortableResult.html
  commentId: T:Benday.Common.ISortableResult
  fullName: Benday.Common.ISortableResult
  nameWithType: ISortableResult
- uid: Benday.Common.ISortableResult.CurrentSortDirection
  name: CurrentSortDirection
  href: api/Benday.Common.ISortableResult.html#Benday_Common_ISortableResult_CurrentSortDirection
  commentId: P:Benday.Common.ISortableResult.CurrentSortDirection
  fullName: Benday.Common.ISortableResult.CurrentSortDirection
  nameWithType: ISortableResult.CurrentSortDirection
- uid: Benday.Common.ISortableResult.CurrentSortDirection*
  name: CurrentSortDirection
  href: api/Benday.Common.ISortableResult.html#Benday_Common_ISortableResult_CurrentSortDirection_
  commentId: Overload:Benday.Common.ISortableResult.CurrentSortDirection
  isSpec: "True"
  fullName: Benday.Common.ISortableResult.CurrentSortDirection
  nameWithType: ISortableResult.CurrentSortDirection
- uid: Benday.Common.ISortableResult.CurrentSortProperty
  name: CurrentSortProperty
  href: api/Benday.Common.ISortableResult.html#Benday_Common_ISortableResult_CurrentSortProperty
  commentId: P:Benday.Common.ISortableResult.CurrentSortProperty
  fullName: Benday.Common.ISortableResult.CurrentSortProperty
  nameWithType: ISortableResult.CurrentSortProperty
- uid: Benday.Common.ISortableResult.CurrentSortProperty*
  name: CurrentSortProperty
  href: api/Benday.Common.ISortableResult.html#Benday_Common_ISortableResult_CurrentSortProperty_
  commentId: Overload:Benday.Common.ISortableResult.CurrentSortProperty
  isSpec: "True"
  fullName: Benday.Common.ISortableResult.CurrentSortProperty
  nameWithType: ISortableResult.CurrentSortProperty
- uid: Benday.Common.IStringIdentity
  name: IStringIdentity
  href: api/Benday.Common.IStringIdentity.html
  commentId: T:Benday.Common.IStringIdentity
  fullName: Benday.Common.IStringIdentity
  nameWithType: IStringIdentity
- uid: Benday.Common.IStringIdentity.Id
  name: Id
  href: api/Benday.Common.IStringIdentity.html#Benday_Common_IStringIdentity_Id
  commentId: P:Benday.Common.IStringIdentity.Id
  fullName: Benday.Common.IStringIdentity.Id
  nameWithType: IStringIdentity.Id
- uid: Benday.Common.IStringIdentity.Id*
  name: Id
  href: api/Benday.Common.IStringIdentity.html#Benday_Common_IStringIdentity_Id_
  commentId: Overload:Benday.Common.IStringIdentity.Id
  isSpec: "True"
  fullName: Benday.Common.IStringIdentity.Id
  nameWithType: IStringIdentity.Id
- uid: Benday.Common.ITypeRegistrationItem
  name: ITypeRegistrationItem
  href: api/Benday.Common.ITypeRegistrationItem.html
  commentId: T:Benday.Common.ITypeRegistrationItem
  fullName: Benday.Common.ITypeRegistrationItem
  nameWithType: ITypeRegistrationItem
- uid: Benday.Common.ITypeRegistrationItem.ImplementationType
  name: ImplementationType
  href: api/Benday.Common.ITypeRegistrationItem.html#Benday_Common_ITypeRegistrationItem_ImplementationType
  commentId: P:Benday.Common.ITypeRegistrationItem.ImplementationType
  fullName: Benday.Common.ITypeRegistrationItem.ImplementationType
  nameWithType: ITypeRegistrationItem.ImplementationType
- uid: Benday.Common.ITypeRegistrationItem.ImplementationType*
  name: ImplementationType
  href: api/Benday.Common.ITypeRegistrationItem.html#Benday_Common_ITypeRegistrationItem_ImplementationType_
  commentId: Overload:Benday.Common.ITypeRegistrationItem.ImplementationType
  isSpec: "True"
  fullName: Benday.Common.ITypeRegistrationItem.ImplementationType
  nameWithType: ITypeRegistrationItem.ImplementationType
- uid: Benday.Common.ITypeRegistrationItem.Lifetime
  name: Lifetime
  href: api/Benday.Common.ITypeRegistrationItem.html#Benday_Common_ITypeRegistrationItem_Lifetime
  commentId: P:Benday.Common.ITypeRegistrationItem.Lifetime
  fullName: Benday.Common.ITypeRegistrationItem.Lifetime
  nameWithType: ITypeRegistrationItem.Lifetime
- uid: Benday.Common.ITypeRegistrationItem.Lifetime*
  name: Lifetime
  href: api/Benday.Common.ITypeRegistrationItem.html#Benday_Common_ITypeRegistrationItem_Lifetime_
  commentId: Overload:Benday.Common.ITypeRegistrationItem.Lifetime
  isSpec: "True"
  fullName: Benday.Common.ITypeRegistrationItem.Lifetime
  nameWithType: ITypeRegistrationItem.Lifetime
- uid: Benday.Common.ITypeRegistrationItem.ServiceType
  name: ServiceType
  href: api/Benday.Common.ITypeRegistrationItem.html#Benday_Common_ITypeRegistrationItem_ServiceType
  commentId: P:Benday.Common.ITypeRegistrationItem.ServiceType
  fullName: Benday.Common.ITypeRegistrationItem.ServiceType
  nameWithType: ITypeRegistrationItem.ServiceType
- uid: Benday.Common.ITypeRegistrationItem.ServiceType*
  name: ServiceType
  href: api/Benday.Common.ITypeRegistrationItem.html#Benday_Common_ITypeRegistrationItem_ServiceType_
  commentId: Overload:Benday.Common.ITypeRegistrationItem.ServiceType
  isSpec: "True"
  fullName: Benday.Common.ITypeRegistrationItem.ServiceType
  nameWithType: ITypeRegistrationItem.ServiceType
- uid: Benday.Common.PageableResults`1
  name: PageableResults<T>
  href: api/Benday.Common.PageableResults-1.html
  commentId: T:Benday.Common.PageableResults`1
  name.vb: PageableResults(Of T)
  fullName: Benday.Common.PageableResults<T>
  fullName.vb: Benday.Common.PageableResults(Of T)
  nameWithType: PageableResults<T>
  nameWithType.vb: PageableResults(Of T)
- uid: Benday.Common.PageableResults`1.#ctor
  name: PageableResults()
  href: api/Benday.Common.PageableResults-1.html#Benday_Common_PageableResults_1__ctor
  commentId: M:Benday.Common.PageableResults`1.#ctor
  name.vb: New()
  fullName: Benday.Common.PageableResults<T>.PageableResults()
  fullName.vb: Benday.Common.PageableResults(Of T).New()
  nameWithType: PageableResults<T>.PageableResults()
  nameWithType.vb: PageableResults(Of T).New()
- uid: Benday.Common.PageableResults`1.#ctor*
  name: PageableResults
  href: api/Benday.Common.PageableResults-1.html#Benday_Common_PageableResults_1__ctor_
  commentId: Overload:Benday.Common.PageableResults`1.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Benday.Common.PageableResults<T>.PageableResults
  fullName.vb: Benday.Common.PageableResults(Of T).New
  nameWithType: PageableResults<T>.PageableResults
  nameWithType.vb: PageableResults(Of T).New
- uid: Benday.Common.PageableResults`1.CurrentPage
  name: CurrentPage
  href: api/Benday.Common.PageableResults-1.html#Benday_Common_PageableResults_1_CurrentPage
  commentId: P:Benday.Common.PageableResults`1.CurrentPage
  fullName: Benday.Common.PageableResults<T>.CurrentPage
  fullName.vb: Benday.Common.PageableResults(Of T).CurrentPage
  nameWithType: PageableResults<T>.CurrentPage
  nameWithType.vb: PageableResults(Of T).CurrentPage
- uid: Benday.Common.PageableResults`1.CurrentPage*
  name: CurrentPage
  href: api/Benday.Common.PageableResults-1.html#Benday_Common_PageableResults_1_CurrentPage_
  commentId: Overload:Benday.Common.PageableResults`1.CurrentPage
  isSpec: "True"
  fullName: Benday.Common.PageableResults<T>.CurrentPage
  fullName.vb: Benday.Common.PageableResults(Of T).CurrentPage
  nameWithType: PageableResults<T>.CurrentPage
  nameWithType.vb: PageableResults(Of T).CurrentPage
- uid: Benday.Common.PageableResults`1.Initialize(System.Collections.Generic.IList{`0})
  name: Initialize(IList<T>)
  href: api/Benday.Common.PageableResults-1.html#Benday_Common_PageableResults_1_Initialize_System_Collections_Generic_IList__0__
  commentId: M:Benday.Common.PageableResults`1.Initialize(System.Collections.Generic.IList{`0})
  name.vb: Initialize(IList(Of T))
  fullName: Benday.Common.PageableResults<T>.Initialize(System.Collections.Generic.IList<T>)
  fullName.vb: Benday.Common.PageableResults(Of T).Initialize(System.Collections.Generic.IList(Of T))
  nameWithType: PageableResults<T>.Initialize(IList<T>)
  nameWithType.vb: PageableResults(Of T).Initialize(IList(Of T))
- uid: Benday.Common.PageableResults`1.Initialize*
  name: Initialize
  href: api/Benday.Common.PageableResults-1.html#Benday_Common_PageableResults_1_Initialize_
  commentId: Overload:Benday.Common.PageableResults`1.Initialize
  isSpec: "True"
  fullName: Benday.Common.PageableResults<T>.Initialize
  fullName.vb: Benday.Common.PageableResults(Of T).Initialize
  nameWithType: PageableResults<T>.Initialize
  nameWithType.vb: PageableResults(Of T).Initialize
- uid: Benday.Common.PageableResults`1.ItemsPerPage
  name: ItemsPerPage
  href: api/Benday.Common.PageableResults-1.html#Benday_Common_PageableResults_1_ItemsPerPage
  commentId: P:Benday.Common.PageableResults`1.ItemsPerPage
  fullName: Benday.Common.PageableResults<T>.ItemsPerPage
  fullName.vb: Benday.Common.PageableResults(Of T).ItemsPerPage
  nameWithType: PageableResults<T>.ItemsPerPage
  nameWithType.vb: PageableResults(Of T).ItemsPerPage
- uid: Benday.Common.PageableResults`1.ItemsPerPage*
  name: ItemsPerPage
  href: api/Benday.Common.PageableResults-1.html#Benday_Common_PageableResults_1_ItemsPerPage_
  commentId: Overload:Benday.Common.PageableResults`1.ItemsPerPage
  isSpec: "True"
  fullName: Benday.Common.PageableResults<T>.ItemsPerPage
  fullName.vb: Benday.Common.PageableResults(Of T).ItemsPerPage
  nameWithType: PageableResults<T>.ItemsPerPage
  nameWithType.vb: PageableResults(Of T).ItemsPerPage
- uid: Benday.Common.PageableResults`1.PageCount
  name: PageCount
  href: api/Benday.Common.PageableResults-1.html#Benday_Common_PageableResults_1_PageCount
  commentId: P:Benday.Common.PageableResults`1.PageCount
  fullName: Benday.Common.PageableResults<T>.PageCount
  fullName.vb: Benday.Common.PageableResults(Of T).PageCount
  nameWithType: PageableResults<T>.PageCount
  nameWithType.vb: PageableResults(Of T).PageCount
- uid: Benday.Common.PageableResults`1.PageCount*
  name: PageCount
  href: api/Benday.Common.PageableResults-1.html#Benday_Common_PageableResults_1_PageCount_
  commentId: Overload:Benday.Common.PageableResults`1.PageCount
  isSpec: "True"
  fullName: Benday.Common.PageableResults<T>.PageCount
  fullName.vb: Benday.Common.PageableResults(Of T).PageCount
  nameWithType: PageableResults<T>.PageCount
  nameWithType.vb: PageableResults(Of T).PageCount
- uid: Benday.Common.PageableResults`1.PageValues
  name: PageValues
  href: api/Benday.Common.PageableResults-1.html#Benday_Common_PageableResults_1_PageValues
  commentId: P:Benday.Common.PageableResults`1.PageValues
  fullName: Benday.Common.PageableResults<T>.PageValues
  fullName.vb: Benday.Common.PageableResults(Of T).PageValues
  nameWithType: PageableResults<T>.PageValues
  nameWithType.vb: PageableResults(Of T).PageValues
- uid: Benday.Common.PageableResults`1.PageValues*
  name: PageValues
  href: api/Benday.Common.PageableResults-1.html#Benday_Common_PageableResults_1_PageValues_
  commentId: Overload:Benday.Common.PageableResults`1.PageValues
  isSpec: "True"
  fullName: Benday.Common.PageableResults<T>.PageValues
  fullName.vb: Benday.Common.PageableResults(Of T).PageValues
  nameWithType: PageableResults<T>.PageValues
  nameWithType.vb: PageableResults(Of T).PageValues
- uid: Benday.Common.PageableResults`1.Results
  name: Results
  href: api/Benday.Common.PageableResults-1.html#Benday_Common_PageableResults_1_Results
  commentId: P:Benday.Common.PageableResults`1.Results
  fullName: Benday.Common.PageableResults<T>.Results
  fullName.vb: Benday.Common.PageableResults(Of T).Results
  nameWithType: PageableResults<T>.Results
  nameWithType.vb: PageableResults(Of T).Results
- uid: Benday.Common.PageableResults`1.Results*
  name: Results
  href: api/Benday.Common.PageableResults-1.html#Benday_Common_PageableResults_1_Results_
  commentId: Overload:Benday.Common.PageableResults`1.Results
  isSpec: "True"
  fullName: Benday.Common.PageableResults<T>.Results
  fullName.vb: Benday.Common.PageableResults(Of T).Results
  nameWithType: PageableResults<T>.Results
  nameWithType.vb: PageableResults(Of T).Results
- uid: Benday.Common.PageableResults`1.TotalCount
  name: TotalCount
  href: api/Benday.Common.PageableResults-1.html#Benday_Common_PageableResults_1_TotalCount
  commentId: P:Benday.Common.PageableResults`1.TotalCount
  fullName: Benday.Common.PageableResults<T>.TotalCount
  fullName.vb: Benday.Common.PageableResults(Of T).TotalCount
  nameWithType: PageableResults<T>.TotalCount
  nameWithType.vb: PageableResults(Of T).TotalCount
- uid: Benday.Common.PageableResults`1.TotalCount*
  name: TotalCount
  href: api/Benday.Common.PageableResults-1.html#Benday_Common_PageableResults_1_TotalCount_
  commentId: Overload:Benday.Common.PageableResults`1.TotalCount
  isSpec: "True"
  fullName: Benday.Common.PageableResults<T>.TotalCount
  fullName.vb: Benday.Common.PageableResults(Of T).TotalCount
  nameWithType: PageableResults<T>.TotalCount
  nameWithType.vb: PageableResults(Of T).TotalCount
- uid: Benday.Common.ProcessRunner
  name: ProcessRunner
  href: api/Benday.Common.ProcessRunner.html
  commentId: T:Benday.Common.ProcessRunner
  fullName: Benday.Common.ProcessRunner
  nameWithType: ProcessRunner
- uid: Benday.Common.ProcessRunner.#ctor(System.Diagnostics.ProcessStartInfo)
  name: ProcessRunner(ProcessStartInfo)
  href: api/Benday.Common.ProcessRunner.html#Benday_Common_ProcessRunner__ctor_System_Diagnostics_ProcessStartInfo_
  commentId: M:Benday.Common.ProcessRunner.#ctor(System.Diagnostics.ProcessStartInfo)
  name.vb: New(ProcessStartInfo)
  fullName: Benday.Common.ProcessRunner.ProcessRunner(System.Diagnostics.ProcessStartInfo)
  fullName.vb: Benday.Common.ProcessRunner.New(System.Diagnostics.ProcessStartInfo)
  nameWithType: ProcessRunner.ProcessRunner(ProcessStartInfo)
  nameWithType.vb: ProcessRunner.New(ProcessStartInfo)
- uid: Benday.Common.ProcessRunner.#ctor*
  name: ProcessRunner
  href: api/Benday.Common.ProcessRunner.html#Benday_Common_ProcessRunner__ctor_
  commentId: Overload:Benday.Common.ProcessRunner.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Benday.Common.ProcessRunner.ProcessRunner
  fullName.vb: Benday.Common.ProcessRunner.New
  nameWithType: ProcessRunner.ProcessRunner
  nameWithType.vb: ProcessRunner.New
- uid: Benday.Common.ProcessRunner.ErrorText
  name: ErrorText
  href: api/Benday.Common.ProcessRunner.html#Benday_Common_ProcessRunner_ErrorText
  commentId: P:Benday.Common.ProcessRunner.ErrorText
  fullName: Benday.Common.ProcessRunner.ErrorText
  nameWithType: ProcessRunner.ErrorText
- uid: Benday.Common.ProcessRunner.ErrorText*
  name: ErrorText
  href: api/Benday.Common.ProcessRunner.html#Benday_Common_ProcessRunner_ErrorText_
  commentId: Overload:Benday.Common.ProcessRunner.ErrorText
  isSpec: "True"
  fullName: Benday.Common.ProcessRunner.ErrorText
  nameWithType: ProcessRunner.ErrorText
- uid: Benday.Common.ProcessRunner.HasCompleted
  name: HasCompleted
  href: api/Benday.Common.ProcessRunner.html#Benday_Common_ProcessRunner_HasCompleted
  commentId: P:Benday.Common.ProcessRunner.HasCompleted
  fullName: Benday.Common.ProcessRunner.HasCompleted
  nameWithType: ProcessRunner.HasCompleted
- uid: Benday.Common.ProcessRunner.HasCompleted*
  name: HasCompleted
  href: api/Benday.Common.ProcessRunner.html#Benday_Common_ProcessRunner_HasCompleted_
  commentId: Overload:Benday.Common.ProcessRunner.HasCompleted
  isSpec: "True"
  fullName: Benday.Common.ProcessRunner.HasCompleted
  nameWithType: ProcessRunner.HasCompleted
- uid: Benday.Common.ProcessRunner.IsError
  name: IsError
  href: api/Benday.Common.ProcessRunner.html#Benday_Common_ProcessRunner_IsError
  commentId: P:Benday.Common.ProcessRunner.IsError
  fullName: Benday.Common.ProcessRunner.IsError
  nameWithType: ProcessRunner.IsError
- uid: Benday.Common.ProcessRunner.IsError*
  name: IsError
  href: api/Benday.Common.ProcessRunner.html#Benday_Common_ProcessRunner_IsError_
  commentId: Overload:Benday.Common.ProcessRunner.IsError
  isSpec: "True"
  fullName: Benday.Common.ProcessRunner.IsError
  nameWithType: ProcessRunner.IsError
- uid: Benday.Common.ProcessRunner.IsSuccess
  name: IsSuccess
  href: api/Benday.Common.ProcessRunner.html#Benday_Common_ProcessRunner_IsSuccess
  commentId: P:Benday.Common.ProcessRunner.IsSuccess
  fullName: Benday.Common.ProcessRunner.IsSuccess
  nameWithType: ProcessRunner.IsSuccess
- uid: Benday.Common.ProcessRunner.IsSuccess*
  name: IsSuccess
  href: api/Benday.Common.ProcessRunner.html#Benday_Common_ProcessRunner_IsSuccess_
  commentId: Overload:Benday.Common.ProcessRunner.IsSuccess
  isSpec: "True"
  fullName: Benday.Common.ProcessRunner.IsSuccess
  nameWithType: ProcessRunner.IsSuccess
- uid: Benday.Common.ProcessRunner.IsTimeout
  name: IsTimeout
  href: api/Benday.Common.ProcessRunner.html#Benday_Common_ProcessRunner_IsTimeout
  commentId: P:Benday.Common.ProcessRunner.IsTimeout
  fullName: Benday.Common.ProcessRunner.IsTimeout
  nameWithType: ProcessRunner.IsTimeout
- uid: Benday.Common.ProcessRunner.IsTimeout*
  name: IsTimeout
  href: api/Benday.Common.ProcessRunner.html#Benday_Common_ProcessRunner_IsTimeout_
  commentId: Overload:Benday.Common.ProcessRunner.IsTimeout
  isSpec: "True"
  fullName: Benday.Common.ProcessRunner.IsTimeout
  nameWithType: ProcessRunner.IsTimeout
- uid: Benday.Common.ProcessRunner.OutputText
  name: OutputText
  href: api/Benday.Common.ProcessRunner.html#Benday_Common_ProcessRunner_OutputText
  commentId: P:Benday.Common.ProcessRunner.OutputText
  fullName: Benday.Common.ProcessRunner.OutputText
  nameWithType: ProcessRunner.OutputText
- uid: Benday.Common.ProcessRunner.OutputText*
  name: OutputText
  href: api/Benday.Common.ProcessRunner.html#Benday_Common_ProcessRunner_OutputText_
  commentId: Overload:Benday.Common.ProcessRunner.OutputText
  isSpec: "True"
  fullName: Benday.Common.ProcessRunner.OutputText
  nameWithType: ProcessRunner.OutputText
- uid: Benday.Common.ProcessRunner.Run
  name: Run()
  href: api/Benday.Common.ProcessRunner.html#Benday_Common_ProcessRunner_Run
  commentId: M:Benday.Common.ProcessRunner.Run
  fullName: Benday.Common.ProcessRunner.Run()
  nameWithType: ProcessRunner.Run()
- uid: Benday.Common.ProcessRunner.Run*
  name: Run
  href: api/Benday.Common.ProcessRunner.html#Benday_Common_ProcessRunner_Run_
  commentId: Overload:Benday.Common.ProcessRunner.Run
  isSpec: "True"
  fullName: Benday.Common.ProcessRunner.Run
  nameWithType: ProcessRunner.Run
- uid: Benday.Common.ProcessRunner.StartInfo
  name: StartInfo
  href: api/Benday.Common.ProcessRunner.html#Benday_Common_ProcessRunner_StartInfo
  commentId: P:Benday.Common.ProcessRunner.StartInfo
  fullName: Benday.Common.ProcessRunner.StartInfo
  nameWithType: ProcessRunner.StartInfo
- uid: Benday.Common.ProcessRunner.StartInfo*
  name: StartInfo
  href: api/Benday.Common.ProcessRunner.html#Benday_Common_ProcessRunner_StartInfo_
  commentId: Overload:Benday.Common.ProcessRunner.StartInfo
  isSpec: "True"
  fullName: Benday.Common.ProcessRunner.StartInfo
  nameWithType: ProcessRunner.StartInfo
- uid: Benday.Common.ProcessRunner.Timeout
  name: Timeout
  href: api/Benday.Common.ProcessRunner.html#Benday_Common_ProcessRunner_Timeout
  commentId: P:Benday.Common.ProcessRunner.Timeout
  fullName: Benday.Common.ProcessRunner.Timeout
  nameWithType: ProcessRunner.Timeout
- uid: Benday.Common.ProcessRunner.Timeout*
  name: Timeout
  href: api/Benday.Common.ProcessRunner.html#Benday_Common_ProcessRunner_Timeout_
  commentId: Overload:Benday.Common.ProcessRunner.Timeout
  isSpec: "True"
  fullName: Benday.Common.ProcessRunner.Timeout
  nameWithType: ProcessRunner.Timeout
- uid: Benday.Common.Search
  name: Search
  href: api/Benday.Common.Search.html
  commentId: T:Benday.Common.Search
  fullName: Benday.Common.Search
  nameWithType: Search
- uid: Benday.Common.Search.#ctor
  name: Search()
  href: api/Benday.Common.Search.html#Benday_Common_Search__ctor
  commentId: M:Benday.Common.Search.#ctor
  name.vb: New()
  fullName: Benday.Common.Search.Search()
  fullName.vb: Benday.Common.Search.New()
  nameWithType: Search.Search()
  nameWithType.vb: Search.New()
- uid: Benday.Common.Search.#ctor*
  name: Search
  href: api/Benday.Common.Search.html#Benday_Common_Search__ctor_
  commentId: Overload:Benday.Common.Search.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Benday.Common.Search.Search
  fullName.vb: Benday.Common.Search.New
  nameWithType: Search.Search
  nameWithType.vb: Search.New
- uid: Benday.Common.Search.AddArgument(System.String,Benday.Common.SearchMethod,System.Int32,Benday.Common.SearchOperator)
  name: AddArgument(string, SearchMethod, int, SearchOperator)
  href: api/Benday.Common.Search.html#Benday_Common_Search_AddArgument_System_String_Benday_Common_SearchMethod_System_Int32_Benday_Common_SearchOperator_
  commentId: M:Benday.Common.Search.AddArgument(System.String,Benday.Common.SearchMethod,System.Int32,Benday.Common.SearchOperator)
  name.vb: AddArgument(String, SearchMethod, Integer, SearchOperator)
  fullName: Benday.Common.Search.AddArgument(string, Benday.Common.SearchMethod, int, Benday.Common.SearchOperator)
  fullName.vb: Benday.Common.Search.AddArgument(String, Benday.Common.SearchMethod, Integer, Benday.Common.SearchOperator)
  nameWithType: Search.AddArgument(string, SearchMethod, int, SearchOperator)
  nameWithType.vb: Search.AddArgument(String, SearchMethod, Integer, SearchOperator)
- uid: Benday.Common.Search.AddArgument(System.String,Benday.Common.SearchMethod,System.String,Benday.Common.SearchOperator)
  name: AddArgument(string, SearchMethod, string, SearchOperator)
  href: api/Benday.Common.Search.html#Benday_Common_Search_AddArgument_System_String_Benday_Common_SearchMethod_System_String_Benday_Common_SearchOperator_
  commentId: M:Benday.Common.Search.AddArgument(System.String,Benday.Common.SearchMethod,System.String,Benday.Common.SearchOperator)
  name.vb: AddArgument(String, SearchMethod, String, SearchOperator)
  fullName: Benday.Common.Search.AddArgument(string, Benday.Common.SearchMethod, string, Benday.Common.SearchOperator)
  fullName.vb: Benday.Common.Search.AddArgument(String, Benday.Common.SearchMethod, String, Benday.Common.SearchOperator)
  nameWithType: Search.AddArgument(string, SearchMethod, string, SearchOperator)
  nameWithType.vb: Search.AddArgument(String, SearchMethod, String, SearchOperator)
- uid: Benday.Common.Search.AddArgument*
  name: AddArgument
  href: api/Benday.Common.Search.html#Benday_Common_Search_AddArgument_
  commentId: Overload:Benday.Common.Search.AddArgument
  isSpec: "True"
  fullName: Benday.Common.Search.AddArgument
  nameWithType: Search.AddArgument
- uid: Benday.Common.Search.AddSort(System.String,System.String)
  name: AddSort(string, string)
  href: api/Benday.Common.Search.html#Benday_Common_Search_AddSort_System_String_System_String_
  commentId: M:Benday.Common.Search.AddSort(System.String,System.String)
  name.vb: AddSort(String, String)
  fullName: Benday.Common.Search.AddSort(string, string)
  fullName.vb: Benday.Common.Search.AddSort(String, String)
  nameWithType: Search.AddSort(string, string)
  nameWithType.vb: Search.AddSort(String, String)
- uid: Benday.Common.Search.AddSort*
  name: AddSort
  href: api/Benday.Common.Search.html#Benday_Common_Search_AddSort_
  commentId: Overload:Benday.Common.Search.AddSort
  isSpec: "True"
  fullName: Benday.Common.Search.AddSort
  nameWithType: Search.AddSort
- uid: Benday.Common.Search.Arguments
  name: Arguments
  href: api/Benday.Common.Search.html#Benday_Common_Search_Arguments
  commentId: P:Benday.Common.Search.Arguments
  fullName: Benday.Common.Search.Arguments
  nameWithType: Search.Arguments
- uid: Benday.Common.Search.Arguments*
  name: Arguments
  href: api/Benday.Common.Search.html#Benday_Common_Search_Arguments_
  commentId: Overload:Benday.Common.Search.Arguments
  isSpec: "True"
  fullName: Benday.Common.Search.Arguments
  nameWithType: Search.Arguments
- uid: Benday.Common.Search.MaxNumberOfResults
  name: MaxNumberOfResults
  href: api/Benday.Common.Search.html#Benday_Common_Search_MaxNumberOfResults
  commentId: P:Benday.Common.Search.MaxNumberOfResults
  fullName: Benday.Common.Search.MaxNumberOfResults
  nameWithType: Search.MaxNumberOfResults
- uid: Benday.Common.Search.MaxNumberOfResults*
  name: MaxNumberOfResults
  href: api/Benday.Common.Search.html#Benday_Common_Search_MaxNumberOfResults_
  commentId: Overload:Benday.Common.Search.MaxNumberOfResults
  isSpec: "True"
  fullName: Benday.Common.Search.MaxNumberOfResults
  nameWithType: Search.MaxNumberOfResults
- uid: Benday.Common.Search.Name
  name: Name
  href: api/Benday.Common.Search.html#Benday_Common_Search_Name
  commentId: P:Benday.Common.Search.Name
  fullName: Benday.Common.Search.Name
  nameWithType: Search.Name
- uid: Benday.Common.Search.Name*
  name: Name
  href: api/Benday.Common.Search.html#Benday_Common_Search_Name_
  commentId: Overload:Benday.Common.Search.Name
  isSpec: "True"
  fullName: Benday.Common.Search.Name
  nameWithType: Search.Name
- uid: Benday.Common.Search.Sorts
  name: Sorts
  href: api/Benday.Common.Search.html#Benday_Common_Search_Sorts
  commentId: P:Benday.Common.Search.Sorts
  fullName: Benday.Common.Search.Sorts
  nameWithType: Search.Sorts
- uid: Benday.Common.Search.Sorts*
  name: Sorts
  href: api/Benday.Common.Search.html#Benday_Common_Search_Sorts_
  commentId: Overload:Benday.Common.Search.Sorts
  isSpec: "True"
  fullName: Benday.Common.Search.Sorts
  nameWithType: Search.Sorts
- uid: Benday.Common.SearchArgument
  name: SearchArgument
  href: api/Benday.Common.SearchArgument.html
  commentId: T:Benday.Common.SearchArgument
  fullName: Benday.Common.SearchArgument
  nameWithType: SearchArgument
- uid: Benday.Common.SearchArgument.#ctor(System.String,Benday.Common.SearchMethod,System.Int32,Benday.Common.SearchOperator)
  name: SearchArgument(string, SearchMethod, int, SearchOperator)
  href: api/Benday.Common.SearchArgument.html#Benday_Common_SearchArgument__ctor_System_String_Benday_Common_SearchMethod_System_Int32_Benday_Common_SearchOperator_
  commentId: M:Benday.Common.SearchArgument.#ctor(System.String,Benday.Common.SearchMethod,System.Int32,Benday.Common.SearchOperator)
  name.vb: New(String, SearchMethod, Integer, SearchOperator)
  fullName: Benday.Common.SearchArgument.SearchArgument(string, Benday.Common.SearchMethod, int, Benday.Common.SearchOperator)
  fullName.vb: Benday.Common.SearchArgument.New(String, Benday.Common.SearchMethod, Integer, Benday.Common.SearchOperator)
  nameWithType: SearchArgument.SearchArgument(string, SearchMethod, int, SearchOperator)
  nameWithType.vb: SearchArgument.New(String, SearchMethod, Integer, SearchOperator)
- uid: Benday.Common.SearchArgument.#ctor(System.String,Benday.Common.SearchMethod,System.String,Benday.Common.SearchOperator)
  name: SearchArgument(string, SearchMethod, string, SearchOperator)
  href: api/Benday.Common.SearchArgument.html#Benday_Common_SearchArgument__ctor_System_String_Benday_Common_SearchMethod_System_String_Benday_Common_SearchOperator_
  commentId: M:Benday.Common.SearchArgument.#ctor(System.String,Benday.Common.SearchMethod,System.String,Benday.Common.SearchOperator)
  name.vb: New(String, SearchMethod, String, SearchOperator)
  fullName: Benday.Common.SearchArgument.SearchArgument(string, Benday.Common.SearchMethod, string, Benday.Common.SearchOperator)
  fullName.vb: Benday.Common.SearchArgument.New(String, Benday.Common.SearchMethod, String, Benday.Common.SearchOperator)
  nameWithType: SearchArgument.SearchArgument(string, SearchMethod, string, SearchOperator)
  nameWithType.vb: SearchArgument.New(String, SearchMethod, String, SearchOperator)
- uid: Benday.Common.SearchArgument.#ctor*
  name: SearchArgument
  href: api/Benday.Common.SearchArgument.html#Benday_Common_SearchArgument__ctor_
  commentId: Overload:Benday.Common.SearchArgument.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Benday.Common.SearchArgument.SearchArgument
  fullName.vb: Benday.Common.SearchArgument.New
  nameWithType: SearchArgument.SearchArgument
  nameWithType.vb: SearchArgument.New
- uid: Benday.Common.SearchArgument.Method
  name: Method
  href: api/Benday.Common.SearchArgument.html#Benday_Common_SearchArgument_Method
  commentId: P:Benday.Common.SearchArgument.Method
  fullName: Benday.Common.SearchArgument.Method
  nameWithType: SearchArgument.Method
- uid: Benday.Common.SearchArgument.Method*
  name: Method
  href: api/Benday.Common.SearchArgument.html#Benday_Common_SearchArgument_Method_
  commentId: Overload:Benday.Common.SearchArgument.Method
  isSpec: "True"
  fullName: Benday.Common.SearchArgument.Method
  nameWithType: SearchArgument.Method
- uid: Benday.Common.SearchArgument.Operator
  name: Operator
  href: api/Benday.Common.SearchArgument.html#Benday_Common_SearchArgument_Operator
  commentId: P:Benday.Common.SearchArgument.Operator
  fullName: Benday.Common.SearchArgument.Operator
  nameWithType: SearchArgument.Operator
- uid: Benday.Common.SearchArgument.Operator*
  name: Operator
  href: api/Benday.Common.SearchArgument.html#Benday_Common_SearchArgument_Operator_
  commentId: Overload:Benday.Common.SearchArgument.Operator
  isSpec: "True"
  fullName: Benday.Common.SearchArgument.Operator
  nameWithType: SearchArgument.Operator
- uid: Benday.Common.SearchArgument.PropertyName
  name: PropertyName
  href: api/Benday.Common.SearchArgument.html#Benday_Common_SearchArgument_PropertyName
  commentId: P:Benday.Common.SearchArgument.PropertyName
  fullName: Benday.Common.SearchArgument.PropertyName
  nameWithType: SearchArgument.PropertyName
- uid: Benday.Common.SearchArgument.PropertyName*
  name: PropertyName
  href: api/Benday.Common.SearchArgument.html#Benday_Common_SearchArgument_PropertyName_
  commentId: Overload:Benday.Common.SearchArgument.PropertyName
  isSpec: "True"
  fullName: Benday.Common.SearchArgument.PropertyName
  nameWithType: SearchArgument.PropertyName
- uid: Benday.Common.SearchArgument.SearchValue
  name: SearchValue
  href: api/Benday.Common.SearchArgument.html#Benday_Common_SearchArgument_SearchValue
  commentId: P:Benday.Common.SearchArgument.SearchValue
  fullName: Benday.Common.SearchArgument.SearchValue
  nameWithType: SearchArgument.SearchValue
- uid: Benday.Common.SearchArgument.SearchValue*
  name: SearchValue
  href: api/Benday.Common.SearchArgument.html#Benday_Common_SearchArgument_SearchValue_
  commentId: Overload:Benday.Common.SearchArgument.SearchValue
  isSpec: "True"
  fullName: Benday.Common.SearchArgument.SearchValue
  nameWithType: SearchArgument.SearchValue
- uid: Benday.Common.SearchArgument.SearchValueAsInt
  name: SearchValueAsInt
  href: api/Benday.Common.SearchArgument.html#Benday_Common_SearchArgument_SearchValueAsInt
  commentId: P:Benday.Common.SearchArgument.SearchValueAsInt
  fullName: Benday.Common.SearchArgument.SearchValueAsInt
  nameWithType: SearchArgument.SearchValueAsInt
- uid: Benday.Common.SearchArgument.SearchValueAsInt*
  name: SearchValueAsInt
  href: api/Benday.Common.SearchArgument.html#Benday_Common_SearchArgument_SearchValueAsInt_
  commentId: Overload:Benday.Common.SearchArgument.SearchValueAsInt
  isSpec: "True"
  fullName: Benday.Common.SearchArgument.SearchValueAsInt
  nameWithType: SearchArgument.SearchValueAsInt
- uid: Benday.Common.SearchConstants
  name: SearchConstants
  href: api/Benday.Common.SearchConstants.html
  commentId: T:Benday.Common.SearchConstants
  fullName: Benday.Common.SearchConstants
  nameWithType: SearchConstants
- uid: Benday.Common.SearchConstants.SortDirectionAscending
  name: SortDirectionAscending
  href: api/Benday.Common.SearchConstants.html#Benday_Common_SearchConstants_SortDirectionAscending
  commentId: F:Benday.Common.SearchConstants.SortDirectionAscending
  fullName: Benday.Common.SearchConstants.SortDirectionAscending
  nameWithType: SearchConstants.SortDirectionAscending
- uid: Benday.Common.SearchConstants.SortDirectionDescending
  name: SortDirectionDescending
  href: api/Benday.Common.SearchConstants.html#Benday_Common_SearchConstants_SortDirectionDescending
  commentId: F:Benday.Common.SearchConstants.SortDirectionDescending
  fullName: Benday.Common.SearchConstants.SortDirectionDescending
  nameWithType: SearchConstants.SortDirectionDescending
- uid: Benday.Common.SearchMethod
  name: SearchMethod
  href: api/Benday.Common.SearchMethod.html
  commentId: T:Benday.Common.SearchMethod
  fullName: Benday.Common.SearchMethod
  nameWithType: SearchMethod
- uid: Benday.Common.SearchMethod.Contains
  name: Contains
  href: api/Benday.Common.SearchMethod.html#Benday_Common_SearchMethod_Contains
  commentId: F:Benday.Common.SearchMethod.Contains
  fullName: Benday.Common.SearchMethod.Contains
  nameWithType: SearchMethod.Contains
- uid: Benday.Common.SearchMethod.DoesNotContain
  name: DoesNotContain
  href: api/Benday.Common.SearchMethod.html#Benday_Common_SearchMethod_DoesNotContain
  commentId: F:Benday.Common.SearchMethod.DoesNotContain
  fullName: Benday.Common.SearchMethod.DoesNotContain
  nameWithType: SearchMethod.DoesNotContain
- uid: Benday.Common.SearchMethod.EndsWith
  name: EndsWith
  href: api/Benday.Common.SearchMethod.html#Benday_Common_SearchMethod_EndsWith
  commentId: F:Benday.Common.SearchMethod.EndsWith
  fullName: Benday.Common.SearchMethod.EndsWith
  nameWithType: SearchMethod.EndsWith
- uid: Benday.Common.SearchMethod.Equals
  name: Equals
  href: api/Benday.Common.SearchMethod.html#Benday_Common_SearchMethod_Equals
  commentId: F:Benday.Common.SearchMethod.Equals
  fullName: Benday.Common.SearchMethod.Equals
  nameWithType: SearchMethod.Equals
- uid: Benday.Common.SearchMethod.IsNotEqual
  name: IsNotEqual
  href: api/Benday.Common.SearchMethod.html#Benday_Common_SearchMethod_IsNotEqual
  commentId: F:Benday.Common.SearchMethod.IsNotEqual
  fullName: Benday.Common.SearchMethod.IsNotEqual
  nameWithType: SearchMethod.IsNotEqual
- uid: Benday.Common.SearchMethod.Skip
  name: Skip
  href: api/Benday.Common.SearchMethod.html#Benday_Common_SearchMethod_Skip
  commentId: F:Benday.Common.SearchMethod.Skip
  fullName: Benday.Common.SearchMethod.Skip
  nameWithType: SearchMethod.Skip
- uid: Benday.Common.SearchMethod.StartsWith
  name: StartsWith
  href: api/Benday.Common.SearchMethod.html#Benday_Common_SearchMethod_StartsWith
  commentId: F:Benday.Common.SearchMethod.StartsWith
  fullName: Benday.Common.SearchMethod.StartsWith
  nameWithType: SearchMethod.StartsWith
- uid: Benday.Common.SearchOperator
  name: SearchOperator
  href: api/Benday.Common.SearchOperator.html
  commentId: T:Benday.Common.SearchOperator
  fullName: Benday.Common.SearchOperator
  nameWithType: SearchOperator
- uid: Benday.Common.SearchOperator.And
  name: And
  href: api/Benday.Common.SearchOperator.html#Benday_Common_SearchOperator_And
  commentId: F:Benday.Common.SearchOperator.And
  fullName: Benday.Common.SearchOperator.And
  nameWithType: SearchOperator.And
- uid: Benday.Common.SearchOperator.Or
  name: Or
  href: api/Benday.Common.SearchOperator.html#Benday_Common_SearchOperator_Or
  commentId: F:Benday.Common.SearchOperator.Or
  fullName: Benday.Common.SearchOperator.Or
  nameWithType: SearchOperator.Or
- uid: Benday.Common.SearchResult`1
  name: SearchResult<T>
  href: api/Benday.Common.SearchResult-1.html
  commentId: T:Benday.Common.SearchResult`1
  name.vb: SearchResult(Of T)
  fullName: Benday.Common.SearchResult<T>
  fullName.vb: Benday.Common.SearchResult(Of T)
  nameWithType: SearchResult<T>
  nameWithType.vb: SearchResult(Of T)
- uid: Benday.Common.SearchResult`1.Results
  name: Results
  href: api/Benday.Common.SearchResult-1.html#Benday_Common_SearchResult_1_Results
  commentId: P:Benday.Common.SearchResult`1.Results
  fullName: Benday.Common.SearchResult<T>.Results
  fullName.vb: Benday.Common.SearchResult(Of T).Results
  nameWithType: SearchResult<T>.Results
  nameWithType.vb: SearchResult(Of T).Results
- uid: Benday.Common.SearchResult`1.Results*
  name: Results
  href: api/Benday.Common.SearchResult-1.html#Benday_Common_SearchResult_1_Results_
  commentId: Overload:Benday.Common.SearchResult`1.Results
  isSpec: "True"
  fullName: Benday.Common.SearchResult<T>.Results
  fullName.vb: Benday.Common.SearchResult(Of T).Results
  nameWithType: SearchResult<T>.Results
  nameWithType.vb: SearchResult(Of T).Results
- uid: Benday.Common.SearchResult`1.SearchRequest
  name: SearchRequest
  href: api/Benday.Common.SearchResult-1.html#Benday_Common_SearchResult_1_SearchRequest
  commentId: P:Benday.Common.SearchResult`1.SearchRequest
  fullName: Benday.Common.SearchResult<T>.SearchRequest
  fullName.vb: Benday.Common.SearchResult(Of T).SearchRequest
  nameWithType: SearchResult<T>.SearchRequest
  nameWithType.vb: SearchResult(Of T).SearchRequest
- uid: Benday.Common.SearchResult`1.SearchRequest*
  name: SearchRequest
  href: api/Benday.Common.SearchResult-1.html#Benday_Common_SearchResult_1_SearchRequest_
  commentId: Overload:Benday.Common.SearchResult`1.SearchRequest
  isSpec: "True"
  fullName: Benday.Common.SearchResult<T>.SearchRequest
  fullName.vb: Benday.Common.SearchResult(Of T).SearchRequest
  nameWithType: SearchResult<T>.SearchRequest
  nameWithType.vb: SearchResult(Of T).SearchRequest
- uid: Benday.Common.SearchViewModelBase`1
  name: SearchViewModelBase<T>
  href: api/Benday.Common.SearchViewModelBase-1.html
  commentId: T:Benday.Common.SearchViewModelBase`1
  name.vb: SearchViewModelBase(Of T)
  fullName: Benday.Common.SearchViewModelBase<T>
  fullName.vb: Benday.Common.SearchViewModelBase(Of T)
  nameWithType: SearchViewModelBase<T>
  nameWithType.vb: SearchViewModelBase(Of T)
- uid: Benday.Common.SearchViewModelBase`1.#ctor
  name: SearchViewModelBase()
  href: api/Benday.Common.SearchViewModelBase-1.html#Benday_Common_SearchViewModelBase_1__ctor
  commentId: M:Benday.Common.SearchViewModelBase`1.#ctor
  name.vb: New()
  fullName: Benday.Common.SearchViewModelBase<T>.SearchViewModelBase()
  fullName.vb: Benday.Common.SearchViewModelBase(Of T).New()
  nameWithType: SearchViewModelBase<T>.SearchViewModelBase()
  nameWithType.vb: SearchViewModelBase(Of T).New()
- uid: Benday.Common.SearchViewModelBase`1.#ctor*
  name: SearchViewModelBase
  href: api/Benday.Common.SearchViewModelBase-1.html#Benday_Common_SearchViewModelBase_1__ctor_
  commentId: Overload:Benday.Common.SearchViewModelBase`1.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Benday.Common.SearchViewModelBase<T>.SearchViewModelBase
  fullName.vb: Benday.Common.SearchViewModelBase(Of T).New
  nameWithType: SearchViewModelBase<T>.SearchViewModelBase
  nameWithType.vb: SearchViewModelBase(Of T).New
- uid: Benday.Common.SearchViewModelBase`1.IsSimpleSearch
  name: IsSimpleSearch
  href: api/Benday.Common.SearchViewModelBase-1.html#Benday_Common_SearchViewModelBase_1_IsSimpleSearch
  commentId: P:Benday.Common.SearchViewModelBase`1.IsSimpleSearch
  fullName: Benday.Common.SearchViewModelBase<T>.IsSimpleSearch
  fullName.vb: Benday.Common.SearchViewModelBase(Of T).IsSimpleSearch
  nameWithType: SearchViewModelBase<T>.IsSimpleSearch
  nameWithType.vb: SearchViewModelBase(Of T).IsSimpleSearch
- uid: Benday.Common.SearchViewModelBase`1.IsSimpleSearch*
  name: IsSimpleSearch
  href: api/Benday.Common.SearchViewModelBase-1.html#Benday_Common_SearchViewModelBase_1_IsSimpleSearch_
  commentId: Overload:Benday.Common.SearchViewModelBase`1.IsSimpleSearch
  isSpec: "True"
  fullName: Benday.Common.SearchViewModelBase<T>.IsSimpleSearch
  fullName.vb: Benday.Common.SearchViewModelBase(Of T).IsSimpleSearch
  nameWithType: SearchViewModelBase<T>.IsSimpleSearch
  nameWithType.vb: SearchViewModelBase(Of T).IsSimpleSearch
- uid: Benday.Common.SearchViewModelBase`1.SimpleSearchValue
  name: SimpleSearchValue
  href: api/Benday.Common.SearchViewModelBase-1.html#Benday_Common_SearchViewModelBase_1_SimpleSearchValue
  commentId: P:Benday.Common.SearchViewModelBase`1.SimpleSearchValue
  fullName: Benday.Common.SearchViewModelBase<T>.SimpleSearchValue
  fullName.vb: Benday.Common.SearchViewModelBase(Of T).SimpleSearchValue
  nameWithType: SearchViewModelBase<T>.SimpleSearchValue
  nameWithType.vb: SearchViewModelBase(Of T).SimpleSearchValue
- uid: Benday.Common.SearchViewModelBase`1.SimpleSearchValue*
  name: SimpleSearchValue
  href: api/Benday.Common.SearchViewModelBase-1.html#Benday_Common_SearchViewModelBase_1_SimpleSearchValue_
  commentId: Overload:Benday.Common.SearchViewModelBase`1.SimpleSearchValue
  isSpec: "True"
  fullName: Benday.Common.SearchViewModelBase<T>.SimpleSearchValue
  fullName.vb: Benday.Common.SearchViewModelBase(Of T).SimpleSearchValue
  nameWithType: SearchViewModelBase<T>.SimpleSearchValue
  nameWithType.vb: SearchViewModelBase(Of T).SimpleSearchValue
- uid: Benday.Common.SimpleSearchResults`1
  name: SimpleSearchResults<T>
  href: api/Benday.Common.SimpleSearchResults-1.html
  commentId: T:Benday.Common.SimpleSearchResults`1
  name.vb: SimpleSearchResults(Of T)
  fullName: Benday.Common.SimpleSearchResults<T>
  fullName.vb: Benday.Common.SimpleSearchResults(Of T)
  nameWithType: SimpleSearchResults<T>
  nameWithType.vb: SimpleSearchResults(Of T)
- uid: Benday.Common.SimpleSearchResults`1.#ctor
  name: SimpleSearchResults()
  href: api/Benday.Common.SimpleSearchResults-1.html#Benday_Common_SimpleSearchResults_1__ctor
  commentId: M:Benday.Common.SimpleSearchResults`1.#ctor
  name.vb: New()
  fullName: Benday.Common.SimpleSearchResults<T>.SimpleSearchResults()
  fullName.vb: Benday.Common.SimpleSearchResults(Of T).New()
  nameWithType: SimpleSearchResults<T>.SimpleSearchResults()
  nameWithType.vb: SimpleSearchResults(Of T).New()
- uid: Benday.Common.SimpleSearchResults`1.#ctor*
  name: SimpleSearchResults
  href: api/Benday.Common.SimpleSearchResults-1.html#Benday_Common_SimpleSearchResults_1__ctor_
  commentId: Overload:Benday.Common.SimpleSearchResults`1.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Benday.Common.SimpleSearchResults<T>.SimpleSearchResults
  fullName.vb: Benday.Common.SimpleSearchResults(Of T).New
  nameWithType: SimpleSearchResults<T>.SimpleSearchResults
  nameWithType.vb: SimpleSearchResults(Of T).New
- uid: Benday.Common.SimpleSearchResults`1.CurrentPage
  name: CurrentPage
  href: api/Benday.Common.SimpleSearchResults-1.html#Benday_Common_SimpleSearchResults_1_CurrentPage
  commentId: P:Benday.Common.SimpleSearchResults`1.CurrentPage
  fullName: Benday.Common.SimpleSearchResults<T>.CurrentPage
  fullName.vb: Benday.Common.SimpleSearchResults(Of T).CurrentPage
  nameWithType: SimpleSearchResults<T>.CurrentPage
  nameWithType.vb: SimpleSearchResults(Of T).CurrentPage
- uid: Benday.Common.SimpleSearchResults`1.CurrentPage*
  name: CurrentPage
  href: api/Benday.Common.SimpleSearchResults-1.html#Benday_Common_SimpleSearchResults_1_CurrentPage_
  commentId: Overload:Benday.Common.SimpleSearchResults`1.CurrentPage
  isSpec: "True"
  fullName: Benday.Common.SimpleSearchResults<T>.CurrentPage
  fullName.vb: Benday.Common.SimpleSearchResults(Of T).CurrentPage
  nameWithType: SimpleSearchResults<T>.CurrentPage
  nameWithType.vb: SimpleSearchResults(Of T).CurrentPage
- uid: Benday.Common.SimpleSearchResults`1.CurrentPageValues
  name: CurrentPageValues
  href: api/Benday.Common.SimpleSearchResults-1.html#Benday_Common_SimpleSearchResults_1_CurrentPageValues
  commentId: P:Benday.Common.SimpleSearchResults`1.CurrentPageValues
  fullName: Benday.Common.SimpleSearchResults<T>.CurrentPageValues
  fullName.vb: Benday.Common.SimpleSearchResults(Of T).CurrentPageValues
  nameWithType: SimpleSearchResults<T>.CurrentPageValues
  nameWithType.vb: SimpleSearchResults(Of T).CurrentPageValues
- uid: Benday.Common.SimpleSearchResults`1.CurrentPageValues*
  name: CurrentPageValues
  href: api/Benday.Common.SimpleSearchResults-1.html#Benday_Common_SimpleSearchResults_1_CurrentPageValues_
  commentId: Overload:Benday.Common.SimpleSearchResults`1.CurrentPageValues
  isSpec: "True"
  fullName: Benday.Common.SimpleSearchResults<T>.CurrentPageValues
  fullName.vb: Benday.Common.SimpleSearchResults(Of T).CurrentPageValues
  nameWithType: SimpleSearchResults<T>.CurrentPageValues
  nameWithType.vb: SimpleSearchResults(Of T).CurrentPageValues
- uid: Benday.Common.SimpleSearchResults`1.CurrentSortDirection
  name: CurrentSortDirection
  href: api/Benday.Common.SimpleSearchResults-1.html#Benday_Common_SimpleSearchResults_1_CurrentSortDirection
  commentId: P:Benday.Common.SimpleSearchResults`1.CurrentSortDirection
  fullName: Benday.Common.SimpleSearchResults<T>.CurrentSortDirection
  fullName.vb: Benday.Common.SimpleSearchResults(Of T).CurrentSortDirection
  nameWithType: SimpleSearchResults<T>.CurrentSortDirection
  nameWithType.vb: SimpleSearchResults(Of T).CurrentSortDirection
- uid: Benday.Common.SimpleSearchResults`1.CurrentSortDirection*
  name: CurrentSortDirection
  href: api/Benday.Common.SimpleSearchResults-1.html#Benday_Common_SimpleSearchResults_1_CurrentSortDirection_
  commentId: Overload:Benday.Common.SimpleSearchResults`1.CurrentSortDirection
  isSpec: "True"
  fullName: Benday.Common.SimpleSearchResults<T>.CurrentSortDirection
  fullName.vb: Benday.Common.SimpleSearchResults(Of T).CurrentSortDirection
  nameWithType: SimpleSearchResults<T>.CurrentSortDirection
  nameWithType.vb: SimpleSearchResults(Of T).CurrentSortDirection
- uid: Benday.Common.SimpleSearchResults`1.CurrentSortProperty
  name: CurrentSortProperty
  href: api/Benday.Common.SimpleSearchResults-1.html#Benday_Common_SimpleSearchResults_1_CurrentSortProperty
  commentId: P:Benday.Common.SimpleSearchResults`1.CurrentSortProperty
  fullName: Benday.Common.SimpleSearchResults<T>.CurrentSortProperty
  fullName.vb: Benday.Common.SimpleSearchResults(Of T).CurrentSortProperty
  nameWithType: SimpleSearchResults<T>.CurrentSortProperty
  nameWithType.vb: SimpleSearchResults(Of T).CurrentSortProperty
- uid: Benday.Common.SimpleSearchResults`1.CurrentSortProperty*
  name: CurrentSortProperty
  href: api/Benday.Common.SimpleSearchResults-1.html#Benday_Common_SimpleSearchResults_1_CurrentSortProperty_
  commentId: Overload:Benday.Common.SimpleSearchResults`1.CurrentSortProperty
  isSpec: "True"
  fullName: Benday.Common.SimpleSearchResults<T>.CurrentSortProperty
  fullName.vb: Benday.Common.SimpleSearchResults(Of T).CurrentSortProperty
  nameWithType: SimpleSearchResults<T>.CurrentSortProperty
  nameWithType.vb: SimpleSearchResults(Of T).CurrentSortProperty
- uid: Benday.Common.SimpleSearchResults`1.ItemsPerPage
  name: ItemsPerPage
  href: api/Benday.Common.SimpleSearchResults-1.html#Benday_Common_SimpleSearchResults_1_ItemsPerPage
  commentId: P:Benday.Common.SimpleSearchResults`1.ItemsPerPage
  fullName: Benday.Common.SimpleSearchResults<T>.ItemsPerPage
  fullName.vb: Benday.Common.SimpleSearchResults(Of T).ItemsPerPage
  nameWithType: SimpleSearchResults<T>.ItemsPerPage
  nameWithType.vb: SimpleSearchResults(Of T).ItemsPerPage
- uid: Benday.Common.SimpleSearchResults`1.ItemsPerPage*
  name: ItemsPerPage
  href: api/Benday.Common.SimpleSearchResults-1.html#Benday_Common_SimpleSearchResults_1_ItemsPerPage_
  commentId: Overload:Benday.Common.SimpleSearchResults`1.ItemsPerPage
  isSpec: "True"
  fullName: Benday.Common.SimpleSearchResults<T>.ItemsPerPage
  fullName.vb: Benday.Common.SimpleSearchResults(Of T).ItemsPerPage
  nameWithType: SimpleSearchResults<T>.ItemsPerPage
  nameWithType.vb: SimpleSearchResults(Of T).ItemsPerPage
- uid: Benday.Common.SimpleSearchResults`1.PageCount
  name: PageCount
  href: api/Benday.Common.SimpleSearchResults-1.html#Benday_Common_SimpleSearchResults_1_PageCount
  commentId: P:Benday.Common.SimpleSearchResults`1.PageCount
  fullName: Benday.Common.SimpleSearchResults<T>.PageCount
  fullName.vb: Benday.Common.SimpleSearchResults(Of T).PageCount
  nameWithType: SimpleSearchResults<T>.PageCount
  nameWithType.vb: SimpleSearchResults(Of T).PageCount
- uid: Benday.Common.SimpleSearchResults`1.PageCount*
  name: PageCount
  href: api/Benday.Common.SimpleSearchResults-1.html#Benday_Common_SimpleSearchResults_1_PageCount_
  commentId: Overload:Benday.Common.SimpleSearchResults`1.PageCount
  isSpec: "True"
  fullName: Benday.Common.SimpleSearchResults<T>.PageCount
  fullName.vb: Benday.Common.SimpleSearchResults(Of T).PageCount
  nameWithType: SimpleSearchResults<T>.PageCount
  nameWithType.vb: SimpleSearchResults(Of T).PageCount
- uid: Benday.Common.SimpleSearchResults`1.SearchValue
  name: SearchValue
  href: api/Benday.Common.SimpleSearchResults-1.html#Benday_Common_SimpleSearchResults_1_SearchValue
  commentId: P:Benday.Common.SimpleSearchResults`1.SearchValue
  fullName: Benday.Common.SimpleSearchResults<T>.SearchValue
  fullName.vb: Benday.Common.SimpleSearchResults(Of T).SearchValue
  nameWithType: SimpleSearchResults<T>.SearchValue
  nameWithType.vb: SimpleSearchResults(Of T).SearchValue
- uid: Benday.Common.SimpleSearchResults`1.SearchValue*
  name: SearchValue
  href: api/Benday.Common.SimpleSearchResults-1.html#Benday_Common_SimpleSearchResults_1_SearchValue_
  commentId: Overload:Benday.Common.SimpleSearchResults`1.SearchValue
  isSpec: "True"
  fullName: Benday.Common.SimpleSearchResults<T>.SearchValue
  fullName.vb: Benday.Common.SimpleSearchResults(Of T).SearchValue
  nameWithType: SimpleSearchResults<T>.SearchValue
  nameWithType.vb: SimpleSearchResults(Of T).SearchValue
- uid: Benday.Common.SimpleSearchResults`1.TotalCount
  name: TotalCount
  href: api/Benday.Common.SimpleSearchResults-1.html#Benday_Common_SimpleSearchResults_1_TotalCount
  commentId: P:Benday.Common.SimpleSearchResults`1.TotalCount
  fullName: Benday.Common.SimpleSearchResults<T>.TotalCount
  fullName.vb: Benday.Common.SimpleSearchResults(Of T).TotalCount
  nameWithType: SimpleSearchResults<T>.TotalCount
  nameWithType.vb: SimpleSearchResults(Of T).TotalCount
- uid: Benday.Common.SimpleSearchResults`1.TotalCount*
  name: TotalCount
  href: api/Benday.Common.SimpleSearchResults-1.html#Benday_Common_SimpleSearchResults_1_TotalCount_
  commentId: Overload:Benday.Common.SimpleSearchResults`1.TotalCount
  isSpec: "True"
  fullName: Benday.Common.SimpleSearchResults<T>.TotalCount
  fullName.vb: Benday.Common.SimpleSearchResults(Of T).TotalCount
  nameWithType: SimpleSearchResults<T>.TotalCount
  nameWithType.vb: SimpleSearchResults(Of T).TotalCount
- uid: Benday.Common.SortBy
  name: SortBy
  href: api/Benday.Common.SortBy.html
  commentId: T:Benday.Common.SortBy
  fullName: Benday.Common.SortBy
  nameWithType: SortBy
- uid: Benday.Common.SortBy.Direction
  name: Direction
  href: api/Benday.Common.SortBy.html#Benday_Common_SortBy_Direction
  commentId: P:Benday.Common.SortBy.Direction
  fullName: Benday.Common.SortBy.Direction
  nameWithType: SortBy.Direction
- uid: Benday.Common.SortBy.Direction*
  name: Direction
  href: api/Benday.Common.SortBy.html#Benday_Common_SortBy_Direction_
  commentId: Overload:Benday.Common.SortBy.Direction
  isSpec: "True"
  fullName: Benday.Common.SortBy.Direction
  nameWithType: SortBy.Direction
- uid: Benday.Common.SortBy.PropertyName
  name: PropertyName
  href: api/Benday.Common.SortBy.html#Benday_Common_SortBy_PropertyName
  commentId: P:Benday.Common.SortBy.PropertyName
  fullName: Benday.Common.SortBy.PropertyName
  nameWithType: SortBy.PropertyName
- uid: Benday.Common.SortBy.PropertyName*
  name: PropertyName
  href: api/Benday.Common.SortBy.html#Benday_Common_SortBy_PropertyName_
  commentId: Overload:Benday.Common.SortBy.PropertyName
  isSpec: "True"
  fullName: Benday.Common.SortBy.PropertyName
  nameWithType: SortBy.PropertyName
- uid: Benday.Common.SortableViewModelBase`1
  name: SortableViewModelBase<T>
  href: api/Benday.Common.SortableViewModelBase-1.html
  commentId: T:Benday.Common.SortableViewModelBase`1
  name.vb: SortableViewModelBase(Of T)
  fullName: Benday.Common.SortableViewModelBase<T>
  fullName.vb: Benday.Common.SortableViewModelBase(Of T)
  nameWithType: SortableViewModelBase<T>
  nameWithType.vb: SortableViewModelBase(Of T)
- uid: Benday.Common.SortableViewModelBase`1.#ctor
  name: SortableViewModelBase()
  href: api/Benday.Common.SortableViewModelBase-1.html#Benday_Common_SortableViewModelBase_1__ctor
  commentId: M:Benday.Common.SortableViewModelBase`1.#ctor
  name.vb: New()
  fullName: Benday.Common.SortableViewModelBase<T>.SortableViewModelBase()
  fullName.vb: Benday.Common.SortableViewModelBase(Of T).New()
  nameWithType: SortableViewModelBase<T>.SortableViewModelBase()
  nameWithType.vb: SortableViewModelBase(Of T).New()
- uid: Benday.Common.SortableViewModelBase`1.#ctor*
  name: SortableViewModelBase
  href: api/Benday.Common.SortableViewModelBase-1.html#Benday_Common_SortableViewModelBase_1__ctor_
  commentId: Overload:Benday.Common.SortableViewModelBase`1.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Benday.Common.SortableViewModelBase<T>.SortableViewModelBase
  fullName.vb: Benday.Common.SortableViewModelBase(Of T).New
  nameWithType: SortableViewModelBase<T>.SortableViewModelBase
  nameWithType.vb: SortableViewModelBase(Of T).New
- uid: Benday.Common.SortableViewModelBase`1.CurrentSortDirection
  name: CurrentSortDirection
  href: api/Benday.Common.SortableViewModelBase-1.html#Benday_Common_SortableViewModelBase_1_CurrentSortDirection
  commentId: P:Benday.Common.SortableViewModelBase`1.CurrentSortDirection
  fullName: Benday.Common.SortableViewModelBase<T>.CurrentSortDirection
  fullName.vb: Benday.Common.SortableViewModelBase(Of T).CurrentSortDirection
  nameWithType: SortableViewModelBase<T>.CurrentSortDirection
  nameWithType.vb: SortableViewModelBase(Of T).CurrentSortDirection
- uid: Benday.Common.SortableViewModelBase`1.CurrentSortDirection*
  name: CurrentSortDirection
  href: api/Benday.Common.SortableViewModelBase-1.html#Benday_Common_SortableViewModelBase_1_CurrentSortDirection_
  commentId: Overload:Benday.Common.SortableViewModelBase`1.CurrentSortDirection
  isSpec: "True"
  fullName: Benday.Common.SortableViewModelBase<T>.CurrentSortDirection
  fullName.vb: Benday.Common.SortableViewModelBase(Of T).CurrentSortDirection
  nameWithType: SortableViewModelBase<T>.CurrentSortDirection
  nameWithType.vb: SortableViewModelBase(Of T).CurrentSortDirection
- uid: Benday.Common.SortableViewModelBase`1.CurrentSortProperty
  name: CurrentSortProperty
  href: api/Benday.Common.SortableViewModelBase-1.html#Benday_Common_SortableViewModelBase_1_CurrentSortProperty
  commentId: P:Benday.Common.SortableViewModelBase`1.CurrentSortProperty
  fullName: Benday.Common.SortableViewModelBase<T>.CurrentSortProperty
  fullName.vb: Benday.Common.SortableViewModelBase(Of T).CurrentSortProperty
  nameWithType: SortableViewModelBase<T>.CurrentSortProperty
  nameWithType.vb: SortableViewModelBase(Of T).CurrentSortProperty
- uid: Benday.Common.SortableViewModelBase`1.CurrentSortProperty*
  name: CurrentSortProperty
  href: api/Benday.Common.SortableViewModelBase-1.html#Benday_Common_SortableViewModelBase_1_CurrentSortProperty_
  commentId: Overload:Benday.Common.SortableViewModelBase`1.CurrentSortProperty
  isSpec: "True"
  fullName: Benday.Common.SortableViewModelBase<T>.CurrentSortProperty
  fullName.vb: Benday.Common.SortableViewModelBase(Of T).CurrentSortProperty
  nameWithType: SortableViewModelBase<T>.CurrentSortProperty
  nameWithType.vb: SortableViewModelBase(Of T).CurrentSortProperty
- uid: Benday.Common.SortableViewModelBase`1.Results
  name: Results
  href: api/Benday.Common.SortableViewModelBase-1.html#Benday_Common_SortableViewModelBase_1_Results
  commentId: P:Benday.Common.SortableViewModelBase`1.Results
  fullName: Benday.Common.SortableViewModelBase<T>.Results
  fullName.vb: Benday.Common.SortableViewModelBase(Of T).Results
  nameWithType: SortableViewModelBase<T>.Results
  nameWithType.vb: SortableViewModelBase(Of T).Results
- uid: Benday.Common.SortableViewModelBase`1.Results*
  name: Results
  href: api/Benday.Common.SortableViewModelBase-1.html#Benday_Common_SortableViewModelBase_1_Results_
  commentId: Overload:Benday.Common.SortableViewModelBase`1.Results
  isSpec: "True"
  fullName: Benday.Common.SortableViewModelBase<T>.Results
  fullName.vb: Benday.Common.SortableViewModelBase(Of T).Results
  nameWithType: SortableViewModelBase<T>.Results
  nameWithType.vb: SortableViewModelBase(Of T).Results
- uid: Benday.Common.StringExtensionMethods
  name: StringExtensionMethods
  href: api/Benday.Common.StringExtensionMethods.html
  commentId: T:Benday.Common.StringExtensionMethods
  fullName: Benday.Common.StringExtensionMethods
  nameWithType: StringExtensionMethods
- uid: Benday.Common.StringExtensionMethods.EqualsCaseInsensitive(System.String,System.String)
  name: EqualsCaseInsensitive(string?, string?)
  href: api/Benday.Common.StringExtensionMethods.html#Benday_Common_StringExtensionMethods_EqualsCaseInsensitive_System_String_System_String_
  commentId: M:Benday.Common.StringExtensionMethods.EqualsCaseInsensitive(System.String,System.String)
  name.vb: EqualsCaseInsensitive(String, String)
  fullName: Benday.Common.StringExtensionMethods.EqualsCaseInsensitive(string?, string?)
  fullName.vb: Benday.Common.StringExtensionMethods.EqualsCaseInsensitive(String, String)
  nameWithType: StringExtensionMethods.EqualsCaseInsensitive(string?, string?)
  nameWithType.vb: StringExtensionMethods.EqualsCaseInsensitive(String, String)
- uid: Benday.Common.StringExtensionMethods.EqualsCaseInsensitive*
  name: EqualsCaseInsensitive
  href: api/Benday.Common.StringExtensionMethods.html#Benday_Common_StringExtensionMethods_EqualsCaseInsensitive_
  commentId: Overload:Benday.Common.StringExtensionMethods.EqualsCaseInsensitive
  isSpec: "True"
  fullName: Benday.Common.StringExtensionMethods.EqualsCaseInsensitive
  nameWithType: StringExtensionMethods.EqualsCaseInsensitive
- uid: Benday.Common.StringExtensionMethods.IsNullOrEmpty(System.String)
  name: IsNullOrEmpty(string?)
  href: api/Benday.Common.StringExtensionMethods.html#Benday_Common_StringExtensionMethods_IsNullOrEmpty_System_String_
  commentId: M:Benday.Common.StringExtensionMethods.IsNullOrEmpty(System.String)
  name.vb: IsNullOrEmpty(String)
  fullName: Benday.Common.StringExtensionMethods.IsNullOrEmpty(string?)
  fullName.vb: Benday.Common.StringExtensionMethods.IsNullOrEmpty(String)
  nameWithType: StringExtensionMethods.IsNullOrEmpty(string?)
  nameWithType.vb: StringExtensionMethods.IsNullOrEmpty(String)
- uid: Benday.Common.StringExtensionMethods.IsNullOrEmpty*
  name: IsNullOrEmpty
  href: api/Benday.Common.StringExtensionMethods.html#Benday_Common_StringExtensionMethods_IsNullOrEmpty_
  commentId: Overload:Benday.Common.StringExtensionMethods.IsNullOrEmpty
  isSpec: "True"
  fullName: Benday.Common.StringExtensionMethods.IsNullOrEmpty
  nameWithType: StringExtensionMethods.IsNullOrEmpty
- uid: Benday.Common.StringExtensionMethods.IsNullOrWhitespace(System.String)
  name: IsNullOrWhitespace(string?)
  href: api/Benday.Common.StringExtensionMethods.html#Benday_Common_StringExtensionMethods_IsNullOrWhitespace_System_String_
  commentId: M:Benday.Common.StringExtensionMethods.IsNullOrWhitespace(System.String)
  name.vb: IsNullOrWhitespace(String)
  fullName: Benday.Common.StringExtensionMethods.IsNullOrWhitespace(string?)
  fullName.vb: Benday.Common.StringExtensionMethods.IsNullOrWhitespace(String)
  nameWithType: StringExtensionMethods.IsNullOrWhitespace(string?)
  nameWithType.vb: StringExtensionMethods.IsNullOrWhitespace(String)
- uid: Benday.Common.StringExtensionMethods.IsNullOrWhitespace*
  name: IsNullOrWhitespace
  href: api/Benday.Common.StringExtensionMethods.html#Benday_Common_StringExtensionMethods_IsNullOrWhitespace_
  commentId: Overload:Benday.Common.StringExtensionMethods.IsNullOrWhitespace
  isSpec: "True"
  fullName: Benday.Common.StringExtensionMethods.IsNullOrWhitespace
  nameWithType: StringExtensionMethods.IsNullOrWhitespace
- uid: Benday.Common.StringExtensionMethods.SafeContains(System.String,System.String)
  name: SafeContains(string?, string)
  href: api/Benday.Common.StringExtensionMethods.html#Benday_Common_StringExtensionMethods_SafeContains_System_String_System_String_
  commentId: M:Benday.Common.StringExtensionMethods.SafeContains(System.String,System.String)
  name.vb: SafeContains(String, String)
  fullName: Benday.Common.StringExtensionMethods.SafeContains(string?, string)
  fullName.vb: Benday.Common.StringExtensionMethods.SafeContains(String, String)
  nameWithType: StringExtensionMethods.SafeContains(string?, string)
  nameWithType.vb: StringExtensionMethods.SafeContains(String, String)
- uid: Benday.Common.StringExtensionMethods.SafeContains*
  name: SafeContains
  href: api/Benday.Common.StringExtensionMethods.html#Benday_Common_StringExtensionMethods_SafeContains_
  commentId: Overload:Benday.Common.StringExtensionMethods.SafeContains
  isSpec: "True"
  fullName: Benday.Common.StringExtensionMethods.SafeContains
  nameWithType: StringExtensionMethods.SafeContains
- uid: Benday.Common.StringExtensionMethods.SafeContainsCaseInsensitive(System.String,System.String)
  name: SafeContainsCaseInsensitive(string?, string)
  href: api/Benday.Common.StringExtensionMethods.html#Benday_Common_StringExtensionMethods_SafeContainsCaseInsensitive_System_String_System_String_
  commentId: M:Benday.Common.StringExtensionMethods.SafeContainsCaseInsensitive(System.String,System.String)
  name.vb: SafeContainsCaseInsensitive(String, String)
  fullName: Benday.Common.StringExtensionMethods.SafeContainsCaseInsensitive(string?, string)
  fullName.vb: Benday.Common.StringExtensionMethods.SafeContainsCaseInsensitive(String, String)
  nameWithType: StringExtensionMethods.SafeContainsCaseInsensitive(string?, string)
  nameWithType.vb: StringExtensionMethods.SafeContainsCaseInsensitive(String, String)
- uid: Benday.Common.StringExtensionMethods.SafeContainsCaseInsensitive*
  name: SafeContainsCaseInsensitive
  href: api/Benday.Common.StringExtensionMethods.html#Benday_Common_StringExtensionMethods_SafeContainsCaseInsensitive_
  commentId: Overload:Benday.Common.StringExtensionMethods.SafeContainsCaseInsensitive
  isSpec: "True"
  fullName: Benday.Common.StringExtensionMethods.SafeContainsCaseInsensitive
  nameWithType: StringExtensionMethods.SafeContainsCaseInsensitive
- uid: Benday.Common.StringExtensionMethods.SafeToInt32(System.String,System.Int32)
  name: SafeToInt32(string?, int)
  href: api/Benday.Common.StringExtensionMethods.html#Benday_Common_StringExtensionMethods_SafeToInt32_System_String_System_Int32_
  commentId: M:Benday.Common.StringExtensionMethods.SafeToInt32(System.String,System.Int32)
  name.vb: SafeToInt32(String, Integer)
  fullName: Benday.Common.StringExtensionMethods.SafeToInt32(string?, int)
  fullName.vb: Benday.Common.StringExtensionMethods.SafeToInt32(String, Integer)
  nameWithType: StringExtensionMethods.SafeToInt32(string?, int)
  nameWithType.vb: StringExtensionMethods.SafeToInt32(String, Integer)
- uid: Benday.Common.StringExtensionMethods.SafeToInt32*
  name: SafeToInt32
  href: api/Benday.Common.StringExtensionMethods.html#Benday_Common_StringExtensionMethods_SafeToInt32_
  commentId: Overload:Benday.Common.StringExtensionMethods.SafeToInt32
  isSpec: "True"
  fullName: Benday.Common.StringExtensionMethods.SafeToInt32
  nameWithType: StringExtensionMethods.SafeToInt32
- uid: Benday.Common.StringExtensionMethods.SafeToString(System.String,System.String)
  name: SafeToString(string?, string)
  href: api/Benday.Common.StringExtensionMethods.html#Benday_Common_StringExtensionMethods_SafeToString_System_String_System_String_
  commentId: M:Benday.Common.StringExtensionMethods.SafeToString(System.String,System.String)
  name.vb: SafeToString(String, String)
  fullName: Benday.Common.StringExtensionMethods.SafeToString(string?, string)
  fullName.vb: Benday.Common.StringExtensionMethods.SafeToString(String, String)
  nameWithType: StringExtensionMethods.SafeToString(string?, string)
  nameWithType.vb: StringExtensionMethods.SafeToString(String, String)
- uid: Benday.Common.StringExtensionMethods.SafeToString*
  name: SafeToString
  href: api/Benday.Common.StringExtensionMethods.html#Benday_Common_StringExtensionMethods_SafeToString_
  commentId: Overload:Benday.Common.StringExtensionMethods.SafeToString
  isSpec: "True"
  fullName: Benday.Common.StringExtensionMethods.SafeToString
  nameWithType: StringExtensionMethods.SafeToString
- uid: Benday.Common.StringExtensionMethods.ToStringThrowIfNullOrEmpty(System.String,System.String)
  name: ToStringThrowIfNullOrEmpty(string?, string)
  href: api/Benday.Common.StringExtensionMethods.html#Benday_Common_StringExtensionMethods_ToStringThrowIfNullOrEmpty_System_String_System_String_
  commentId: M:Benday.Common.StringExtensionMethods.ToStringThrowIfNullOrEmpty(System.String,System.String)
  name.vb: ToStringThrowIfNullOrEmpty(String, String)
  fullName: Benday.Common.StringExtensionMethods.ToStringThrowIfNullOrEmpty(string?, string)
  fullName.vb: Benday.Common.StringExtensionMethods.ToStringThrowIfNullOrEmpty(String, String)
  nameWithType: StringExtensionMethods.ToStringThrowIfNullOrEmpty(string?, string)
  nameWithType.vb: StringExtensionMethods.ToStringThrowIfNullOrEmpty(String, String)
- uid: Benday.Common.StringExtensionMethods.ToStringThrowIfNullOrEmpty*
  name: ToStringThrowIfNullOrEmpty
  href: api/Benday.Common.StringExtensionMethods.html#Benday_Common_StringExtensionMethods_ToStringThrowIfNullOrEmpty_
  commentId: Overload:Benday.Common.StringExtensionMethods.ToStringThrowIfNullOrEmpty
  isSpec: "True"
  fullName: Benday.Common.StringExtensionMethods.ToStringThrowIfNullOrEmpty
  nameWithType: StringExtensionMethods.ToStringThrowIfNullOrEmpty
- uid: Benday.Common.Testing
  name: Benday.Common.Testing
  href: api/Benday.Common.Testing.html
  commentId: N:Benday.Common.Testing
  fullName: Benday.Common.Testing
  nameWithType: Benday.Common.Testing
- uid: Benday.Common.Testing.ArrayAssertionExtensions
  name: ArrayAssertionExtensions
  href: api/Benday.Common.Testing.ArrayAssertionExtensions.html
  commentId: T:Benday.Common.Testing.ArrayAssertionExtensions
  fullName: Benday.Common.Testing.ArrayAssertionExtensions
  nameWithType: ArrayAssertionExtensions
- uid: Benday.Common.Testing.ArrayAssertionExtensions.AllItemsAreNotNull*
  name: AllItemsAreNotNull
  href: api/Benday.Common.Testing.ArrayAssertionExtensions.html#Benday_Common_Testing_ArrayAssertionExtensions_AllItemsAreNotNull_
  commentId: Overload:Benday.Common.Testing.ArrayAssertionExtensions.AllItemsAreNotNull
  isSpec: "True"
  fullName: Benday.Common.Testing.ArrayAssertionExtensions.AllItemsAreNotNull
  nameWithType: ArrayAssertionExtensions.AllItemsAreNotNull
- uid: Benday.Common.Testing.ArrayAssertionExtensions.AllItemsAreNotNull``1(Benday.Common.Testing.ICheckArrayAssertion{``0[]},System.String)
  name: AllItemsAreNotNull<T>(ICheckArrayAssertion<T[]>, string?)
  href: api/Benday.Common.Testing.ArrayAssertionExtensions.html#Benday_Common_Testing_ArrayAssertionExtensions_AllItemsAreNotNull__1_Benday_Common_Testing_ICheckArrayAssertion___0____System_String_
  commentId: M:Benday.Common.Testing.ArrayAssertionExtensions.AllItemsAreNotNull``1(Benday.Common.Testing.ICheckArrayAssertion{``0[]},System.String)
  name.vb: AllItemsAreNotNull(Of T)(ICheckArrayAssertion(Of T()), String)
  fullName: Benday.Common.Testing.ArrayAssertionExtensions.AllItemsAreNotNull<T>(Benday.Common.Testing.ICheckArrayAssertion<T[]>, string?)
  fullName.vb: Benday.Common.Testing.ArrayAssertionExtensions.AllItemsAreNotNull(Of T)(Benday.Common.Testing.ICheckArrayAssertion(Of T()), String)
  nameWithType: ArrayAssertionExtensions.AllItemsAreNotNull<T>(ICheckArrayAssertion<T[]>, string?)
  nameWithType.vb: ArrayAssertionExtensions.AllItemsAreNotNull(Of T)(ICheckArrayAssertion(Of T()), String)
- uid: Benday.Common.Testing.ArrayAssertionExtensions.AllItemsAreUnique*
  name: AllItemsAreUnique
  href: api/Benday.Common.Testing.ArrayAssertionExtensions.html#Benday_Common_Testing_ArrayAssertionExtensions_AllItemsAreUnique_
  commentId: Overload:Benday.Common.Testing.ArrayAssertionExtensions.AllItemsAreUnique
  isSpec: "True"
  fullName: Benday.Common.Testing.ArrayAssertionExtensions.AllItemsAreUnique
  nameWithType: ArrayAssertionExtensions.AllItemsAreUnique
- uid: Benday.Common.Testing.ArrayAssertionExtensions.AllItemsAreUnique``1(Benday.Common.Testing.ICheckArrayAssertion{``0[]},System.String)
  name: AllItemsAreUnique<T>(ICheckArrayAssertion<T[]>, string?)
  href: api/Benday.Common.Testing.ArrayAssertionExtensions.html#Benday_Common_Testing_ArrayAssertionExtensions_AllItemsAreUnique__1_Benday_Common_Testing_ICheckArrayAssertion___0____System_String_
  commentId: M:Benday.Common.Testing.ArrayAssertionExtensions.AllItemsAreUnique``1(Benday.Common.Testing.ICheckArrayAssertion{``0[]},System.String)
  name.vb: AllItemsAreUnique(Of T)(ICheckArrayAssertion(Of T()), String)
  fullName: Benday.Common.Testing.ArrayAssertionExtensions.AllItemsAreUnique<T>(Benday.Common.Testing.ICheckArrayAssertion<T[]>, string?)
  fullName.vb: Benday.Common.Testing.ArrayAssertionExtensions.AllItemsAreUnique(Of T)(Benday.Common.Testing.ICheckArrayAssertion(Of T()), String)
  nameWithType: ArrayAssertionExtensions.AllItemsAreUnique<T>(ICheckArrayAssertion<T[]>, string?)
  nameWithType.vb: ArrayAssertionExtensions.AllItemsAreUnique(Of T)(ICheckArrayAssertion(Of T()), String)
- uid: Benday.Common.Testing.ArrayAssertionExtensions.Contains*
  name: Contains
  href: api/Benday.Common.Testing.ArrayAssertionExtensions.html#Benday_Common_Testing_ArrayAssertionExtensions_Contains_
  commentId: Overload:Benday.Common.Testing.ArrayAssertionExtensions.Contains
  isSpec: "True"
  fullName: Benday.Common.Testing.ArrayAssertionExtensions.Contains
  nameWithType: ArrayAssertionExtensions.Contains
- uid: Benday.Common.Testing.ArrayAssertionExtensions.Contains``1(Benday.Common.Testing.ICheckArrayAssertion{``0[]},``0,System.String)
  name: Contains<T>(ICheckArrayAssertion<T[]>, T, string?)
  href: api/Benday.Common.Testing.ArrayAssertionExtensions.html#Benday_Common_Testing_ArrayAssertionExtensions_Contains__1_Benday_Common_Testing_ICheckArrayAssertion___0______0_System_String_
  commentId: M:Benday.Common.Testing.ArrayAssertionExtensions.Contains``1(Benday.Common.Testing.ICheckArrayAssertion{``0[]},``0,System.String)
  name.vb: Contains(Of T)(ICheckArrayAssertion(Of T()), T, String)
  fullName: Benday.Common.Testing.ArrayAssertionExtensions.Contains<T>(Benday.Common.Testing.ICheckArrayAssertion<T[]>, T, string?)
  fullName.vb: Benday.Common.Testing.ArrayAssertionExtensions.Contains(Of T)(Benday.Common.Testing.ICheckArrayAssertion(Of T()), T, String)
  nameWithType: ArrayAssertionExtensions.Contains<T>(ICheckArrayAssertion<T[]>, T, string?)
  nameWithType.vb: ArrayAssertionExtensions.Contains(Of T)(ICheckArrayAssertion(Of T()), T, String)
- uid: Benday.Common.Testing.ArrayAssertionExtensions.DoesNotContain*
  name: DoesNotContain
  href: api/Benday.Common.Testing.ArrayAssertionExtensions.html#Benday_Common_Testing_ArrayAssertionExtensions_DoesNotContain_
  commentId: Overload:Benday.Common.Testing.ArrayAssertionExtensions.DoesNotContain
  isSpec: "True"
  fullName: Benday.Common.Testing.ArrayAssertionExtensions.DoesNotContain
  nameWithType: ArrayAssertionExtensions.DoesNotContain
- uid: Benday.Common.Testing.ArrayAssertionExtensions.DoesNotContain``1(Benday.Common.Testing.ICheckArrayAssertion{``0[]},``0,System.String)
  name: DoesNotContain<T>(ICheckArrayAssertion<T[]>, T, string?)
  href: api/Benday.Common.Testing.ArrayAssertionExtensions.html#Benday_Common_Testing_ArrayAssertionExtensions_DoesNotContain__1_Benday_Common_Testing_ICheckArrayAssertion___0______0_System_String_
  commentId: M:Benday.Common.Testing.ArrayAssertionExtensions.DoesNotContain``1(Benday.Common.Testing.ICheckArrayAssertion{``0[]},``0,System.String)
  name.vb: DoesNotContain(Of T)(ICheckArrayAssertion(Of T()), T, String)
  fullName: Benday.Common.Testing.ArrayAssertionExtensions.DoesNotContain<T>(Benday.Common.Testing.ICheckArrayAssertion<T[]>, T, string?)
  fullName.vb: Benday.Common.Testing.ArrayAssertionExtensions.DoesNotContain(Of T)(Benday.Common.Testing.ICheckArrayAssertion(Of T()), T, String)
  nameWithType: ArrayAssertionExtensions.DoesNotContain<T>(ICheckArrayAssertion<T[]>, T, string?)
  nameWithType.vb: ArrayAssertionExtensions.DoesNotContain(Of T)(ICheckArrayAssertion(Of T()), T, String)
- uid: Benday.Common.Testing.ArrayAssertionExtensions.IsEqualTo*
  name: IsEqualTo
  href: api/Benday.Common.Testing.ArrayAssertionExtensions.html#Benday_Common_Testing_ArrayAssertionExtensions_IsEqualTo_
  commentId: Overload:Benday.Common.Testing.ArrayAssertionExtensions.IsEqualTo
  isSpec: "True"
  fullName: Benday.Common.Testing.ArrayAssertionExtensions.IsEqualTo
  nameWithType: ArrayAssertionExtensions.IsEqualTo
- uid: Benday.Common.Testing.ArrayAssertionExtensions.IsEqualTo``1(Benday.Common.Testing.ICheckArrayAssertion{``0[]},System.Collections.Generic.IEnumerable{``0},System.String)
  name: IsEqualTo<T>(ICheckArrayAssertion<T[]>, IEnumerable<T>, string?)
  href: api/Benday.Common.Testing.ArrayAssertionExtensions.html#Benday_Common_Testing_ArrayAssertionExtensions_IsEqualTo__1_Benday_Common_Testing_ICheckArrayAssertion___0____System_Collections_Generic_IEnumerable___0__System_String_
  commentId: M:Benday.Common.Testing.ArrayAssertionExtensions.IsEqualTo``1(Benday.Common.Testing.ICheckArrayAssertion{``0[]},System.Collections.Generic.IEnumerable{``0},System.String)
  name.vb: IsEqualTo(Of T)(ICheckArrayAssertion(Of T()), IEnumerable(Of T), String)
  fullName: Benday.Common.Testing.ArrayAssertionExtensions.IsEqualTo<T>(Benday.Common.Testing.ICheckArrayAssertion<T[]>, System.Collections.Generic.IEnumerable<T>, string?)
  fullName.vb: Benday.Common.Testing.ArrayAssertionExtensions.IsEqualTo(Of T)(Benday.Common.Testing.ICheckArrayAssertion(Of T()), System.Collections.Generic.IEnumerable(Of T), String)
  nameWithType: ArrayAssertionExtensions.IsEqualTo<T>(ICheckArrayAssertion<T[]>, IEnumerable<T>, string?)
  nameWithType.vb: ArrayAssertionExtensions.IsEqualTo(Of T)(ICheckArrayAssertion(Of T()), IEnumerable(Of T), String)
- uid: Benday.Common.Testing.ArrayAssertionExtensions.IsEquivalentTo*
  name: IsEquivalentTo
  href: api/Benday.Common.Testing.ArrayAssertionExtensions.html#Benday_Common_Testing_ArrayAssertionExtensions_IsEquivalentTo_
  commentId: Overload:Benday.Common.Testing.ArrayAssertionExtensions.IsEquivalentTo
  isSpec: "True"
  fullName: Benday.Common.Testing.ArrayAssertionExtensions.IsEquivalentTo
  nameWithType: ArrayAssertionExtensions.IsEquivalentTo
- uid: Benday.Common.Testing.ArrayAssertionExtensions.IsEquivalentTo``1(Benday.Common.Testing.ICheckArrayAssertion{``0[]},System.Collections.Generic.IEnumerable{``0},System.String)
  name: IsEquivalentTo<T>(ICheckArrayAssertion<T[]>, IEnumerable<T>, string?)
  href: api/Benday.Common.Testing.ArrayAssertionExtensions.html#Benday_Common_Testing_ArrayAssertionExtensions_IsEquivalentTo__1_Benday_Common_Testing_ICheckArrayAssertion___0____System_Collections_Generic_IEnumerable___0__System_String_
  commentId: M:Benday.Common.Testing.ArrayAssertionExtensions.IsEquivalentTo``1(Benday.Common.Testing.ICheckArrayAssertion{``0[]},System.Collections.Generic.IEnumerable{``0},System.String)
  name.vb: IsEquivalentTo(Of T)(ICheckArrayAssertion(Of T()), IEnumerable(Of T), String)
  fullName: Benday.Common.Testing.ArrayAssertionExtensions.IsEquivalentTo<T>(Benday.Common.Testing.ICheckArrayAssertion<T[]>, System.Collections.Generic.IEnumerable<T>, string?)
  fullName.vb: Benday.Common.Testing.ArrayAssertionExtensions.IsEquivalentTo(Of T)(Benday.Common.Testing.ICheckArrayAssertion(Of T()), System.Collections.Generic.IEnumerable(Of T), String)
  nameWithType: ArrayAssertionExtensions.IsEquivalentTo<T>(ICheckArrayAssertion<T[]>, IEnumerable<T>, string?)
  nameWithType.vb: ArrayAssertionExtensions.IsEquivalentTo(Of T)(ICheckArrayAssertion(Of T()), IEnumerable(Of T), String)
- uid: Benday.Common.Testing.ArrayAssertionExtensions.IsNotEqualTo*
  name: IsNotEqualTo
  href: api/Benday.Common.Testing.ArrayAssertionExtensions.html#Benday_Common_Testing_ArrayAssertionExtensions_IsNotEqualTo_
  commentId: Overload:Benday.Common.Testing.ArrayAssertionExtensions.IsNotEqualTo
  isSpec: "True"
  fullName: Benday.Common.Testing.ArrayAssertionExtensions.IsNotEqualTo
  nameWithType: ArrayAssertionExtensions.IsNotEqualTo
- uid: Benday.Common.Testing.ArrayAssertionExtensions.IsNotEqualTo``1(Benday.Common.Testing.ICheckArrayAssertion{``0[]},System.Collections.Generic.IEnumerable{``0},System.String)
  name: IsNotEqualTo<T>(ICheckArrayAssertion<T[]>, IEnumerable<T>, string?)
  href: api/Benday.Common.Testing.ArrayAssertionExtensions.html#Benday_Common_Testing_ArrayAssertionExtensions_IsNotEqualTo__1_Benday_Common_Testing_ICheckArrayAssertion___0____System_Collections_Generic_IEnumerable___0__System_String_
  commentId: M:Benday.Common.Testing.ArrayAssertionExtensions.IsNotEqualTo``1(Benday.Common.Testing.ICheckArrayAssertion{``0[]},System.Collections.Generic.IEnumerable{``0},System.String)
  name.vb: IsNotEqualTo(Of T)(ICheckArrayAssertion(Of T()), IEnumerable(Of T), String)
  fullName: Benday.Common.Testing.ArrayAssertionExtensions.IsNotEqualTo<T>(Benday.Common.Testing.ICheckArrayAssertion<T[]>, System.Collections.Generic.IEnumerable<T>, string?)
  fullName.vb: Benday.Common.Testing.ArrayAssertionExtensions.IsNotEqualTo(Of T)(Benday.Common.Testing.ICheckArrayAssertion(Of T()), System.Collections.Generic.IEnumerable(Of T), String)
  nameWithType: ArrayAssertionExtensions.IsNotEqualTo<T>(ICheckArrayAssertion<T[]>, IEnumerable<T>, string?)
  nameWithType.vb: ArrayAssertionExtensions.IsNotEqualTo(Of T)(ICheckArrayAssertion(Of T()), IEnumerable(Of T), String)
- uid: Benday.Common.Testing.ArrayAssertionExtensions.IsNotEquivalentTo*
  name: IsNotEquivalentTo
  href: api/Benday.Common.Testing.ArrayAssertionExtensions.html#Benday_Common_Testing_ArrayAssertionExtensions_IsNotEquivalentTo_
  commentId: Overload:Benday.Common.Testing.ArrayAssertionExtensions.IsNotEquivalentTo
  isSpec: "True"
  fullName: Benday.Common.Testing.ArrayAssertionExtensions.IsNotEquivalentTo
  nameWithType: ArrayAssertionExtensions.IsNotEquivalentTo
- uid: Benday.Common.Testing.ArrayAssertionExtensions.IsNotEquivalentTo``1(Benday.Common.Testing.ICheckArrayAssertion{``0[]},System.Collections.Generic.IEnumerable{``0},System.String)
  name: IsNotEquivalentTo<T>(ICheckArrayAssertion<T[]>, IEnumerable<T>, string?)
  href: api/Benday.Common.Testing.ArrayAssertionExtensions.html#Benday_Common_Testing_ArrayAssertionExtensions_IsNotEquivalentTo__1_Benday_Common_Testing_ICheckArrayAssertion___0____System_Collections_Generic_IEnumerable___0__System_String_
  commentId: M:Benday.Common.Testing.ArrayAssertionExtensions.IsNotEquivalentTo``1(Benday.Common.Testing.ICheckArrayAssertion{``0[]},System.Collections.Generic.IEnumerable{``0},System.String)
  name.vb: IsNotEquivalentTo(Of T)(ICheckArrayAssertion(Of T()), IEnumerable(Of T), String)
  fullName: Benday.Common.Testing.ArrayAssertionExtensions.IsNotEquivalentTo<T>(Benday.Common.Testing.ICheckArrayAssertion<T[]>, System.Collections.Generic.IEnumerable<T>, string?)
  fullName.vb: Benday.Common.Testing.ArrayAssertionExtensions.IsNotEquivalentTo(Of T)(Benday.Common.Testing.ICheckArrayAssertion(Of T()), System.Collections.Generic.IEnumerable(Of T), String)
  nameWithType: ArrayAssertionExtensions.IsNotEquivalentTo<T>(ICheckArrayAssertion<T[]>, IEnumerable<T>, string?)
  nameWithType.vb: ArrayAssertionExtensions.IsNotEquivalentTo(Of T)(ICheckArrayAssertion(Of T()), IEnumerable(Of T), String)
- uid: Benday.Common.Testing.ArrayAssertionExtensions.IsSubsetOf*
  name: IsSubsetOf
  href: api/Benday.Common.Testing.ArrayAssertionExtensions.html#Benday_Common_Testing_ArrayAssertionExtensions_IsSubsetOf_
  commentId: Overload:Benday.Common.Testing.ArrayAssertionExtensions.IsSubsetOf
  isSpec: "True"
  fullName: Benday.Common.Testing.ArrayAssertionExtensions.IsSubsetOf
  nameWithType: ArrayAssertionExtensions.IsSubsetOf
- uid: Benday.Common.Testing.ArrayAssertionExtensions.IsSubsetOf``1(Benday.Common.Testing.ICheckArrayAssertion{``0[]},System.Collections.Generic.IEnumerable{``0},System.String)
  name: IsSubsetOf<T>(ICheckArrayAssertion<T[]>, IEnumerable<T>, string?)
  href: api/Benday.Common.Testing.ArrayAssertionExtensions.html#Benday_Common_Testing_ArrayAssertionExtensions_IsSubsetOf__1_Benday_Common_Testing_ICheckArrayAssertion___0____System_Collections_Generic_IEnumerable___0__System_String_
  commentId: M:Benday.Common.Testing.ArrayAssertionExtensions.IsSubsetOf``1(Benday.Common.Testing.ICheckArrayAssertion{``0[]},System.Collections.Generic.IEnumerable{``0},System.String)
  name.vb: IsSubsetOf(Of T)(ICheckArrayAssertion(Of T()), IEnumerable(Of T), String)
  fullName: Benday.Common.Testing.ArrayAssertionExtensions.IsSubsetOf<T>(Benday.Common.Testing.ICheckArrayAssertion<T[]>, System.Collections.Generic.IEnumerable<T>, string?)
  fullName.vb: Benday.Common.Testing.ArrayAssertionExtensions.IsSubsetOf(Of T)(Benday.Common.Testing.ICheckArrayAssertion(Of T()), System.Collections.Generic.IEnumerable(Of T), String)
  nameWithType: ArrayAssertionExtensions.IsSubsetOf<T>(ICheckArrayAssertion<T[]>, IEnumerable<T>, string?)
  nameWithType.vb: ArrayAssertionExtensions.IsSubsetOf(Of T)(ICheckArrayAssertion(Of T()), IEnumerable(Of T), String)
- uid: Benday.Common.Testing.ArrayAssertionExtensions.IsSupersetOf*
  name: IsSupersetOf
  href: api/Benday.Common.Testing.ArrayAssertionExtensions.html#Benday_Common_Testing_ArrayAssertionExtensions_IsSupersetOf_
  commentId: Overload:Benday.Common.Testing.ArrayAssertionExtensions.IsSupersetOf
  isSpec: "True"
  fullName: Benday.Common.Testing.ArrayAssertionExtensions.IsSupersetOf
  nameWithType: ArrayAssertionExtensions.IsSupersetOf
- uid: Benday.Common.Testing.ArrayAssertionExtensions.IsSupersetOf``1(Benday.Common.Testing.ICheckArrayAssertion{``0[]},System.Collections.Generic.IEnumerable{``0},System.String)
  name: IsSupersetOf<T>(ICheckArrayAssertion<T[]>, IEnumerable<T>, string?)
  href: api/Benday.Common.Testing.ArrayAssertionExtensions.html#Benday_Common_Testing_ArrayAssertionExtensions_IsSupersetOf__1_Benday_Common_Testing_ICheckArrayAssertion___0____System_Collections_Generic_IEnumerable___0__System_String_
  commentId: M:Benday.Common.Testing.ArrayAssertionExtensions.IsSupersetOf``1(Benday.Common.Testing.ICheckArrayAssertion{``0[]},System.Collections.Generic.IEnumerable{``0},System.String)
  name.vb: IsSupersetOf(Of T)(ICheckArrayAssertion(Of T()), IEnumerable(Of T), String)
  fullName: Benday.Common.Testing.ArrayAssertionExtensions.IsSupersetOf<T>(Benday.Common.Testing.ICheckArrayAssertion<T[]>, System.Collections.Generic.IEnumerable<T>, string?)
  fullName.vb: Benday.Common.Testing.ArrayAssertionExtensions.IsSupersetOf(Of T)(Benday.Common.Testing.ICheckArrayAssertion(Of T()), System.Collections.Generic.IEnumerable(Of T), String)
  nameWithType: ArrayAssertionExtensions.IsSupersetOf<T>(ICheckArrayAssertion<T[]>, IEnumerable<T>, string?)
  nameWithType.vb: ArrayAssertionExtensions.IsSupersetOf(Of T)(ICheckArrayAssertion(Of T()), IEnumerable(Of T), String)
- uid: Benday.Common.Testing.CheckArrayAssertion`1
  name: CheckArrayAssertion<T>
  href: api/Benday.Common.Testing.CheckArrayAssertion-1.html
  commentId: T:Benday.Common.Testing.CheckArrayAssertion`1
  name.vb: CheckArrayAssertion(Of T)
  fullName: Benday.Common.Testing.CheckArrayAssertion<T>
  fullName.vb: Benday.Common.Testing.CheckArrayAssertion(Of T)
  nameWithType: CheckArrayAssertion<T>
  nameWithType.vb: CheckArrayAssertion(Of T)
- uid: Benday.Common.Testing.CheckArrayAssertion`1.#ctor(`0)
  name: CheckArrayAssertion(T)
  href: api/Benday.Common.Testing.CheckArrayAssertion-1.html#Benday_Common_Testing_CheckArrayAssertion_1__ctor__0_
  commentId: M:Benday.Common.Testing.CheckArrayAssertion`1.#ctor(`0)
  name.vb: New(T)
  fullName: Benday.Common.Testing.CheckArrayAssertion<T>.CheckArrayAssertion(T)
  fullName.vb: Benday.Common.Testing.CheckArrayAssertion(Of T).New(T)
  nameWithType: CheckArrayAssertion<T>.CheckArrayAssertion(T)
  nameWithType.vb: CheckArrayAssertion(Of T).New(T)
- uid: Benday.Common.Testing.CheckArrayAssertion`1.#ctor*
  name: CheckArrayAssertion
  href: api/Benday.Common.Testing.CheckArrayAssertion-1.html#Benday_Common_Testing_CheckArrayAssertion_1__ctor_
  commentId: Overload:Benday.Common.Testing.CheckArrayAssertion`1.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Benday.Common.Testing.CheckArrayAssertion<T>.CheckArrayAssertion
  fullName.vb: Benday.Common.Testing.CheckArrayAssertion(Of T).New
  nameWithType: CheckArrayAssertion<T>.CheckArrayAssertion
  nameWithType.vb: CheckArrayAssertion(Of T).New
- uid: Benday.Common.Testing.CheckAssertionExtensions
  name: CheckAssertionExtensions
  href: api/Benday.Common.Testing.CheckAssertionExtensions.html
  commentId: T:Benday.Common.Testing.CheckAssertionExtensions
  fullName: Benday.Common.Testing.CheckAssertionExtensions
  nameWithType: CheckAssertionExtensions
- uid: Benday.Common.Testing.CheckAssertionExtensions.Fail*
  name: Fail
  href: api/Benday.Common.Testing.CheckAssertionExtensions.html#Benday_Common_Testing_CheckAssertionExtensions_Fail_
  commentId: Overload:Benday.Common.Testing.CheckAssertionExtensions.Fail
  isSpec: "True"
  fullName: Benday.Common.Testing.CheckAssertionExtensions.Fail
  nameWithType: CheckAssertionExtensions.Fail
- uid: Benday.Common.Testing.CheckAssertionExtensions.FailWithOptionalMessage*
  name: FailWithOptionalMessage
  href: api/Benday.Common.Testing.CheckAssertionExtensions.html#Benday_Common_Testing_CheckAssertionExtensions_FailWithOptionalMessage_
  commentId: Overload:Benday.Common.Testing.CheckAssertionExtensions.FailWithOptionalMessage
  isSpec: "True"
  fullName: Benday.Common.Testing.CheckAssertionExtensions.FailWithOptionalMessage
  nameWithType: CheckAssertionExtensions.FailWithOptionalMessage
- uid: Benday.Common.Testing.CheckAssertionExtensions.FailWithOptionalMessage``1(Benday.Common.Testing.ICheckAssertion{``0},System.String,System.String)
  name: FailWithOptionalMessage<T>(ICheckAssertion<T>, string?, string)
  href: api/Benday.Common.Testing.CheckAssertionExtensions.html#Benday_Common_Testing_CheckAssertionExtensions_FailWithOptionalMessage__1_Benday_Common_Testing_ICheckAssertion___0__System_String_System_String_
  commentId: M:Benday.Common.Testing.CheckAssertionExtensions.FailWithOptionalMessage``1(Benday.Common.Testing.ICheckAssertion{``0},System.String,System.String)
  name.vb: FailWithOptionalMessage(Of T)(ICheckAssertion(Of T), String, String)
  fullName: Benday.Common.Testing.CheckAssertionExtensions.FailWithOptionalMessage<T>(Benday.Common.Testing.ICheckAssertion<T>, string?, string)
  fullName.vb: Benday.Common.Testing.CheckAssertionExtensions.FailWithOptionalMessage(Of T)(Benday.Common.Testing.ICheckAssertion(Of T), String, String)
  nameWithType: CheckAssertionExtensions.FailWithOptionalMessage<T>(ICheckAssertion<T>, string?, string)
  nameWithType.vb: CheckAssertionExtensions.FailWithOptionalMessage(Of T)(ICheckAssertion(Of T), String, String)
- uid: Benday.Common.Testing.CheckAssertionExtensions.Fail``1(Benday.Common.Testing.ICheckAssertion{``0},System.String)
  name: Fail<T>(ICheckAssertion<T>, string)
  href: api/Benday.Common.Testing.CheckAssertionExtensions.html#Benday_Common_Testing_CheckAssertionExtensions_Fail__1_Benday_Common_Testing_ICheckAssertion___0__System_String_
  commentId: M:Benday.Common.Testing.CheckAssertionExtensions.Fail``1(Benday.Common.Testing.ICheckAssertion{``0},System.String)
  name.vb: Fail(Of T)(ICheckAssertion(Of T), String)
  fullName: Benday.Common.Testing.CheckAssertionExtensions.Fail<T>(Benday.Common.Testing.ICheckAssertion<T>, string)
  fullName.vb: Benday.Common.Testing.CheckAssertionExtensions.Fail(Of T)(Benday.Common.Testing.ICheckAssertion(Of T), String)
  nameWithType: CheckAssertionExtensions.Fail<T>(ICheckAssertion<T>, string)
  nameWithType.vb: CheckAssertionExtensions.Fail(Of T)(ICheckAssertion(Of T), String)
- uid: Benday.Common.Testing.CheckAssertionExtensions.IsNotNull*
  name: IsNotNull
  href: api/Benday.Common.Testing.CheckAssertionExtensions.html#Benday_Common_Testing_CheckAssertionExtensions_IsNotNull_
  commentId: Overload:Benday.Common.Testing.CheckAssertionExtensions.IsNotNull
  isSpec: "True"
  fullName: Benday.Common.Testing.CheckAssertionExtensions.IsNotNull
  nameWithType: CheckAssertionExtensions.IsNotNull
- uid: Benday.Common.Testing.CheckAssertionExtensions.IsNotNull``1(Benday.Common.Testing.ICheckAssertion{``0},System.String)
  name: IsNotNull<T>(ICheckAssertion<T>, string?)
  href: api/Benday.Common.Testing.CheckAssertionExtensions.html#Benday_Common_Testing_CheckAssertionExtensions_IsNotNull__1_Benday_Common_Testing_ICheckAssertion___0__System_String_
  commentId: M:Benday.Common.Testing.CheckAssertionExtensions.IsNotNull``1(Benday.Common.Testing.ICheckAssertion{``0},System.String)
  name.vb: IsNotNull(Of T)(ICheckAssertion(Of T), String)
  fullName: Benday.Common.Testing.CheckAssertionExtensions.IsNotNull<T>(Benday.Common.Testing.ICheckAssertion<T>, string?)
  fullName.vb: Benday.Common.Testing.CheckAssertionExtensions.IsNotNull(Of T)(Benday.Common.Testing.ICheckAssertion(Of T), String)
  nameWithType: CheckAssertionExtensions.IsNotNull<T>(ICheckAssertion<T>, string?)
  nameWithType.vb: CheckAssertionExtensions.IsNotNull(Of T)(ICheckAssertion(Of T), String)
- uid: Benday.Common.Testing.CheckAssertionExtensions.IsNotTheSameAs*
  name: IsNotTheSameAs
  href: api/Benday.Common.Testing.CheckAssertionExtensions.html#Benday_Common_Testing_CheckAssertionExtensions_IsNotTheSameAs_
  commentId: Overload:Benday.Common.Testing.CheckAssertionExtensions.IsNotTheSameAs
  isSpec: "True"
  fullName: Benday.Common.Testing.CheckAssertionExtensions.IsNotTheSameAs
  nameWithType: CheckAssertionExtensions.IsNotTheSameAs
- uid: Benday.Common.Testing.CheckAssertionExtensions.IsNotTheSameAs``1(Benday.Common.Testing.ICheckAssertion{``0},``0,System.String)
  name: IsNotTheSameAs<T>(ICheckAssertion<T>, T?, string?)
  href: api/Benday.Common.Testing.CheckAssertionExtensions.html#Benday_Common_Testing_CheckAssertionExtensions_IsNotTheSameAs__1_Benday_Common_Testing_ICheckAssertion___0____0_System_String_
  commentId: M:Benday.Common.Testing.CheckAssertionExtensions.IsNotTheSameAs``1(Benday.Common.Testing.ICheckAssertion{``0},``0,System.String)
  name.vb: IsNotTheSameAs(Of T)(ICheckAssertion(Of T), T, String)
  fullName: Benday.Common.Testing.CheckAssertionExtensions.IsNotTheSameAs<T>(Benday.Common.Testing.ICheckAssertion<T>, T?, string?)
  fullName.vb: Benday.Common.Testing.CheckAssertionExtensions.IsNotTheSameAs(Of T)(Benday.Common.Testing.ICheckAssertion(Of T), T, String)
  nameWithType: CheckAssertionExtensions.IsNotTheSameAs<T>(ICheckAssertion<T>, T?, string?)
  nameWithType.vb: CheckAssertionExtensions.IsNotTheSameAs(Of T)(ICheckAssertion(Of T), T, String)
- uid: Benday.Common.Testing.CheckAssertionExtensions.IsNull*
  name: IsNull
  href: api/Benday.Common.Testing.CheckAssertionExtensions.html#Benday_Common_Testing_CheckAssertionExtensions_IsNull_
  commentId: Overload:Benday.Common.Testing.CheckAssertionExtensions.IsNull
  isSpec: "True"
  fullName: Benday.Common.Testing.CheckAssertionExtensions.IsNull
  nameWithType: CheckAssertionExtensions.IsNull
- uid: Benday.Common.Testing.CheckAssertionExtensions.IsNull``1(Benday.Common.Testing.ICheckAssertion{``0},System.String)
  name: IsNull<T>(ICheckAssertion<T>, string?)
  href: api/Benday.Common.Testing.CheckAssertionExtensions.html#Benday_Common_Testing_CheckAssertionExtensions_IsNull__1_Benday_Common_Testing_ICheckAssertion___0__System_String_
  commentId: M:Benday.Common.Testing.CheckAssertionExtensions.IsNull``1(Benday.Common.Testing.ICheckAssertion{``0},System.String)
  name.vb: IsNull(Of T)(ICheckAssertion(Of T), String)
  fullName: Benday.Common.Testing.CheckAssertionExtensions.IsNull<T>(Benday.Common.Testing.ICheckAssertion<T>, string?)
  fullName.vb: Benday.Common.Testing.CheckAssertionExtensions.IsNull(Of T)(Benday.Common.Testing.ICheckAssertion(Of T), String)
  nameWithType: CheckAssertionExtensions.IsNull<T>(ICheckAssertion<T>, string?)
  nameWithType.vb: CheckAssertionExtensions.IsNull(Of T)(ICheckAssertion(Of T), String)
- uid: Benday.Common.Testing.CheckAssertionExtensions.IsTheSameAs*
  name: IsTheSameAs
  href: api/Benday.Common.Testing.CheckAssertionExtensions.html#Benday_Common_Testing_CheckAssertionExtensions_IsTheSameAs_
  commentId: Overload:Benday.Common.Testing.CheckAssertionExtensions.IsTheSameAs
  isSpec: "True"
  fullName: Benday.Common.Testing.CheckAssertionExtensions.IsTheSameAs
  nameWithType: CheckAssertionExtensions.IsTheSameAs
- uid: Benday.Common.Testing.CheckAssertionExtensions.IsTheSameAs``1(Benday.Common.Testing.ICheckAssertion{``0},``0,System.String)
  name: IsTheSameAs<T>(ICheckAssertion<T>, T?, string?)
  href: api/Benday.Common.Testing.CheckAssertionExtensions.html#Benday_Common_Testing_CheckAssertionExtensions_IsTheSameAs__1_Benday_Common_Testing_ICheckAssertion___0____0_System_String_
  commentId: M:Benday.Common.Testing.CheckAssertionExtensions.IsTheSameAs``1(Benday.Common.Testing.ICheckAssertion{``0},``0,System.String)
  name.vb: IsTheSameAs(Of T)(ICheckAssertion(Of T), T, String)
  fullName: Benday.Common.Testing.CheckAssertionExtensions.IsTheSameAs<T>(Benday.Common.Testing.ICheckAssertion<T>, T?, string?)
  fullName.vb: Benday.Common.Testing.CheckAssertionExtensions.IsTheSameAs(Of T)(Benday.Common.Testing.ICheckAssertion(Of T), T, String)
  nameWithType: CheckAssertionExtensions.IsTheSameAs<T>(ICheckAssertion<T>, T?, string?)
  nameWithType.vb: CheckAssertionExtensions.IsTheSameAs(Of T)(ICheckAssertion(Of T), T, String)
- uid: Benday.Common.Testing.CheckAssertionFailureException
  name: CheckAssertionFailureException
  href: api/Benday.Common.Testing.CheckAssertionFailureException.html
  commentId: T:Benday.Common.Testing.CheckAssertionFailureException
  fullName: Benday.Common.Testing.CheckAssertionFailureException
  nameWithType: CheckAssertionFailureException
- uid: Benday.Common.Testing.CheckAssertionFailureException.#ctor(System.String)
  name: CheckAssertionFailureException(string)
  href: api/Benday.Common.Testing.CheckAssertionFailureException.html#Benday_Common_Testing_CheckAssertionFailureException__ctor_System_String_
  commentId: M:Benday.Common.Testing.CheckAssertionFailureException.#ctor(System.String)
  name.vb: New(String)
  fullName: Benday.Common.Testing.CheckAssertionFailureException.CheckAssertionFailureException(string)
  fullName.vb: Benday.Common.Testing.CheckAssertionFailureException.New(String)
  nameWithType: CheckAssertionFailureException.CheckAssertionFailureException(string)
  nameWithType.vb: CheckAssertionFailureException.New(String)
- uid: Benday.Common.Testing.CheckAssertionFailureException.#ctor*
  name: CheckAssertionFailureException
  href: api/Benday.Common.Testing.CheckAssertionFailureException.html#Benday_Common_Testing_CheckAssertionFailureException__ctor_
  commentId: Overload:Benday.Common.Testing.CheckAssertionFailureException.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Benday.Common.Testing.CheckAssertionFailureException.CheckAssertionFailureException
  fullName.vb: Benday.Common.Testing.CheckAssertionFailureException.New
  nameWithType: CheckAssertionFailureException.CheckAssertionFailureException
  nameWithType.vb: CheckAssertionFailureException.New
- uid: Benday.Common.Testing.CheckAssertionForNullableType`1
  name: CheckAssertionForNullableType<T>
  href: api/Benday.Common.Testing.CheckAssertionForNullableType-1.html
  commentId: T:Benday.Common.Testing.CheckAssertionForNullableType`1
  name.vb: CheckAssertionForNullableType(Of T)
  fullName: Benday.Common.Testing.CheckAssertionForNullableType<T>
  fullName.vb: Benday.Common.Testing.CheckAssertionForNullableType(Of T)
  nameWithType: CheckAssertionForNullableType<T>
  nameWithType.vb: CheckAssertionForNullableType(Of T)
- uid: Benday.Common.Testing.CheckAssertionForNullableType`1.#ctor(`0)
  name: CheckAssertionForNullableType(T)
  href: api/Benday.Common.Testing.CheckAssertionForNullableType-1.html#Benday_Common_Testing_CheckAssertionForNullableType_1__ctor__0_
  commentId: M:Benday.Common.Testing.CheckAssertionForNullableType`1.#ctor(`0)
  name.vb: New(T)
  fullName: Benday.Common.Testing.CheckAssertionForNullableType<T>.CheckAssertionForNullableType(T)
  fullName.vb: Benday.Common.Testing.CheckAssertionForNullableType(Of T).New(T)
  nameWithType: CheckAssertionForNullableType<T>.CheckAssertionForNullableType(T)
  nameWithType.vb: CheckAssertionForNullableType(Of T).New(T)
- uid: Benday.Common.Testing.CheckAssertionForNullableType`1.#ctor*
  name: CheckAssertionForNullableType
  href: api/Benday.Common.Testing.CheckAssertionForNullableType-1.html#Benday_Common_Testing_CheckAssertionForNullableType_1__ctor_
  commentId: Overload:Benday.Common.Testing.CheckAssertionForNullableType`1.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Benday.Common.Testing.CheckAssertionForNullableType<T>.CheckAssertionForNullableType
  fullName.vb: Benday.Common.Testing.CheckAssertionForNullableType(Of T).New
  nameWithType: CheckAssertionForNullableType<T>.CheckAssertionForNullableType
  nameWithType.vb: CheckAssertionForNullableType(Of T).New
- uid: Benday.Common.Testing.CheckAssertion`1
  name: CheckAssertion<T>
  href: api/Benday.Common.Testing.CheckAssertion-1.html
  commentId: T:Benday.Common.Testing.CheckAssertion`1
  name.vb: CheckAssertion(Of T)
  fullName: Benday.Common.Testing.CheckAssertion<T>
  fullName.vb: Benday.Common.Testing.CheckAssertion(Of T)
  nameWithType: CheckAssertion<T>
  nameWithType.vb: CheckAssertion(Of T)
- uid: Benday.Common.Testing.CheckAssertion`1.#ctor(`0)
  name: CheckAssertion(T?)
  href: api/Benday.Common.Testing.CheckAssertion-1.html#Benday_Common_Testing_CheckAssertion_1__ctor__0_
  commentId: M:Benday.Common.Testing.CheckAssertion`1.#ctor(`0)
  name.vb: New(T)
  fullName: Benday.Common.Testing.CheckAssertion<T>.CheckAssertion(T?)
  fullName.vb: Benday.Common.Testing.CheckAssertion(Of T).New(T)
  nameWithType: CheckAssertion<T>.CheckAssertion(T?)
  nameWithType.vb: CheckAssertion(Of T).New(T)
- uid: Benday.Common.Testing.CheckAssertion`1.#ctor*
  name: CheckAssertion
  href: api/Benday.Common.Testing.CheckAssertion-1.html#Benday_Common_Testing_CheckAssertion_1__ctor_
  commentId: Overload:Benday.Common.Testing.CheckAssertion`1.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Benday.Common.Testing.CheckAssertion<T>.CheckAssertion
  fullName.vb: Benday.Common.Testing.CheckAssertion(Of T).New
  nameWithType: CheckAssertion<T>.CheckAssertion
  nameWithType.vb: CheckAssertion(Of T).New
- uid: Benday.Common.Testing.CheckAssertion`1.FailureMessage
  name: FailureMessage
  href: api/Benday.Common.Testing.CheckAssertion-1.html#Benday_Common_Testing_CheckAssertion_1_FailureMessage
  commentId: P:Benday.Common.Testing.CheckAssertion`1.FailureMessage
  fullName: Benday.Common.Testing.CheckAssertion<T>.FailureMessage
  fullName.vb: Benday.Common.Testing.CheckAssertion(Of T).FailureMessage
  nameWithType: CheckAssertion<T>.FailureMessage
  nameWithType.vb: CheckAssertion(Of T).FailureMessage
- uid: Benday.Common.Testing.CheckAssertion`1.FailureMessage*
  name: FailureMessage
  href: api/Benday.Common.Testing.CheckAssertion-1.html#Benday_Common_Testing_CheckAssertion_1_FailureMessage_
  commentId: Overload:Benday.Common.Testing.CheckAssertion`1.FailureMessage
  isSpec: "True"
  fullName: Benday.Common.Testing.CheckAssertion<T>.FailureMessage
  fullName.vb: Benday.Common.Testing.CheckAssertion(Of T).FailureMessage
  nameWithType: CheckAssertion<T>.FailureMessage
  nameWithType.vb: CheckAssertion(Of T).FailureMessage
- uid: Benday.Common.Testing.CheckAssertion`1.Input
  name: Input
  href: api/Benday.Common.Testing.CheckAssertion-1.html#Benday_Common_Testing_CheckAssertion_1_Input
  commentId: P:Benday.Common.Testing.CheckAssertion`1.Input
  fullName: Benday.Common.Testing.CheckAssertion<T>.Input
  fullName.vb: Benday.Common.Testing.CheckAssertion(Of T).Input
  nameWithType: CheckAssertion<T>.Input
  nameWithType.vb: CheckAssertion(Of T).Input
- uid: Benday.Common.Testing.CheckAssertion`1.Input*
  name: Input
  href: api/Benday.Common.Testing.CheckAssertion-1.html#Benday_Common_Testing_CheckAssertion_1_Input_
  commentId: Overload:Benday.Common.Testing.CheckAssertion`1.Input
  isSpec: "True"
  fullName: Benday.Common.Testing.CheckAssertion<T>.Input
  fullName.vb: Benday.Common.Testing.CheckAssertion(Of T).Input
  nameWithType: CheckAssertion<T>.Input
  nameWithType.vb: CheckAssertion(Of T).Input
- uid: Benday.Common.Testing.CheckAssertion`1.WithMessage(System.String)
  name: WithMessage(string)
  href: api/Benday.Common.Testing.CheckAssertion-1.html#Benday_Common_Testing_CheckAssertion_1_WithMessage_System_String_
  commentId: M:Benday.Common.Testing.CheckAssertion`1.WithMessage(System.String)
  name.vb: WithMessage(String)
  fullName: Benday.Common.Testing.CheckAssertion<T>.WithMessage(string)
  fullName.vb: Benday.Common.Testing.CheckAssertion(Of T).WithMessage(String)
  nameWithType: CheckAssertion<T>.WithMessage(string)
  nameWithType.vb: CheckAssertion(Of T).WithMessage(String)
- uid: Benday.Common.Testing.CheckAssertion`1.WithMessage*
  name: WithMessage
  href: api/Benday.Common.Testing.CheckAssertion-1.html#Benday_Common_Testing_CheckAssertion_1_WithMessage_
  commentId: Overload:Benday.Common.Testing.CheckAssertion`1.WithMessage
  isSpec: "True"
  fullName: Benday.Common.Testing.CheckAssertion<T>.WithMessage
  fullName.vb: Benday.Common.Testing.CheckAssertion(Of T).WithMessage
  nameWithType: CheckAssertion<T>.WithMessage
  nameWithType.vb: CheckAssertion(Of T).WithMessage
- uid: Benday.Common.Testing.CheckCollectionAssertion`1
  name: CheckCollectionAssertion<T>
  href: api/Benday.Common.Testing.CheckCollectionAssertion-1.html
  commentId: T:Benday.Common.Testing.CheckCollectionAssertion`1
  name.vb: CheckCollectionAssertion(Of T)
  fullName: Benday.Common.Testing.CheckCollectionAssertion<T>
  fullName.vb: Benday.Common.Testing.CheckCollectionAssertion(Of T)
  nameWithType: CheckCollectionAssertion<T>
  nameWithType.vb: CheckCollectionAssertion(Of T)
- uid: Benday.Common.Testing.CheckCollectionAssertion`1.#ctor(`0)
  name: CheckCollectionAssertion(T)
  href: api/Benday.Common.Testing.CheckCollectionAssertion-1.html#Benday_Common_Testing_CheckCollectionAssertion_1__ctor__0_
  commentId: M:Benday.Common.Testing.CheckCollectionAssertion`1.#ctor(`0)
  name.vb: New(T)
  fullName: Benday.Common.Testing.CheckCollectionAssertion<T>.CheckCollectionAssertion(T)
  fullName.vb: Benday.Common.Testing.CheckCollectionAssertion(Of T).New(T)
  nameWithType: CheckCollectionAssertion<T>.CheckCollectionAssertion(T)
  nameWithType.vb: CheckCollectionAssertion(Of T).New(T)
- uid: Benday.Common.Testing.CheckCollectionAssertion`1.#ctor*
  name: CheckCollectionAssertion
  href: api/Benday.Common.Testing.CheckCollectionAssertion-1.html#Benday_Common_Testing_CheckCollectionAssertion_1__ctor_
  commentId: Overload:Benday.Common.Testing.CheckCollectionAssertion`1.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Benday.Common.Testing.CheckCollectionAssertion<T>.CheckCollectionAssertion
  fullName.vb: Benday.Common.Testing.CheckCollectionAssertion(Of T).New
  nameWithType: CheckCollectionAssertion<T>.CheckCollectionAssertion
  nameWithType.vb: CheckCollectionAssertion(Of T).New
- uid: Benday.Common.Testing.CheckExtensions
  name: CheckExtensions
  href: api/Benday.Common.Testing.CheckExtensions.html
  commentId: T:Benday.Common.Testing.CheckExtensions
  fullName: Benday.Common.Testing.CheckExtensions
  nameWithType: CheckExtensions
- uid: Benday.Common.Testing.CheckExtensions.CheckThat(System.String)
  name: CheckThat(string)
  href: api/Benday.Common.Testing.CheckExtensions.html#Benday_Common_Testing_CheckExtensions_CheckThat_System_String_
  commentId: M:Benday.Common.Testing.CheckExtensions.CheckThat(System.String)
  name.vb: CheckThat(String)
  fullName: Benday.Common.Testing.CheckExtensions.CheckThat(string)
  fullName.vb: Benday.Common.Testing.CheckExtensions.CheckThat(String)
  nameWithType: CheckExtensions.CheckThat(string)
  nameWithType.vb: CheckExtensions.CheckThat(String)
- uid: Benday.Common.Testing.CheckExtensions.CheckThat*
  name: CheckThat
  href: api/Benday.Common.Testing.CheckExtensions.html#Benday_Common_Testing_CheckExtensions_CheckThat_
  commentId: Overload:Benday.Common.Testing.CheckExtensions.CheckThat
  isSpec: "True"
  fullName: Benday.Common.Testing.CheckExtensions.CheckThat
  nameWithType: CheckExtensions.CheckThat
- uid: Benday.Common.Testing.CheckExtensions.CheckThatCollection*
  name: CheckThatCollection
  href: api/Benday.Common.Testing.CheckExtensions.html#Benday_Common_Testing_CheckExtensions_CheckThatCollection_
  commentId: Overload:Benday.Common.Testing.CheckExtensions.CheckThatCollection
  isSpec: "True"
  fullName: Benday.Common.Testing.CheckExtensions.CheckThatCollection
  nameWithType: CheckExtensions.CheckThatCollection
- uid: Benday.Common.Testing.CheckExtensions.CheckThatCollection``1(``0)
  name: CheckThatCollection<T>(T)
  href: api/Benday.Common.Testing.CheckExtensions.html#Benday_Common_Testing_CheckExtensions_CheckThatCollection__1___0_
  commentId: M:Benday.Common.Testing.CheckExtensions.CheckThatCollection``1(``0)
  name.vb: CheckThatCollection(Of T)(T)
  fullName: Benday.Common.Testing.CheckExtensions.CheckThatCollection<T>(T)
  fullName.vb: Benday.Common.Testing.CheckExtensions.CheckThatCollection(Of T)(T)
  nameWithType: CheckExtensions.CheckThatCollection<T>(T)
  nameWithType.vb: CheckExtensions.CheckThatCollection(Of T)(T)
- uid: Benday.Common.Testing.CheckExtensions.CheckThatNullable(System.String)
  name: CheckThatNullable(string?)
  href: api/Benday.Common.Testing.CheckExtensions.html#Benday_Common_Testing_CheckExtensions_CheckThatNullable_System_String_
  commentId: M:Benday.Common.Testing.CheckExtensions.CheckThatNullable(System.String)
  name.vb: CheckThatNullable(String)
  fullName: Benday.Common.Testing.CheckExtensions.CheckThatNullable(string?)
  fullName.vb: Benday.Common.Testing.CheckExtensions.CheckThatNullable(String)
  nameWithType: CheckExtensions.CheckThatNullable(string?)
  nameWithType.vb: CheckExtensions.CheckThatNullable(String)
- uid: Benday.Common.Testing.CheckExtensions.CheckThatNullable(System.String[])
  name: CheckThatNullable(string?[])
  href: api/Benday.Common.Testing.CheckExtensions.html#Benday_Common_Testing_CheckExtensions_CheckThatNullable_System_String___
  commentId: M:Benday.Common.Testing.CheckExtensions.CheckThatNullable(System.String[])
  name.vb: CheckThatNullable(String())
  fullName: Benday.Common.Testing.CheckExtensions.CheckThatNullable(string?[])
  fullName.vb: Benday.Common.Testing.CheckExtensions.CheckThatNullable(String())
  nameWithType: CheckExtensions.CheckThatNullable(string?[])
  nameWithType.vb: CheckExtensions.CheckThatNullable(String())
- uid: Benday.Common.Testing.CheckExtensions.CheckThatNullable*
  name: CheckThatNullable
  href: api/Benday.Common.Testing.CheckExtensions.html#Benday_Common_Testing_CheckExtensions_CheckThatNullable_
  commentId: Overload:Benday.Common.Testing.CheckExtensions.CheckThatNullable
  isSpec: "True"
  fullName: Benday.Common.Testing.CheckExtensions.CheckThatNullable
  nameWithType: CheckExtensions.CheckThatNullable
- uid: Benday.Common.Testing.CheckExtensions.CheckThat``1(``0[])
  name: CheckThat<T>(T[])
  href: api/Benday.Common.Testing.CheckExtensions.html#Benday_Common_Testing_CheckExtensions_CheckThat__1___0___
  commentId: M:Benday.Common.Testing.CheckExtensions.CheckThat``1(``0[])
  name.vb: CheckThat(Of T)(T())
  fullName: Benday.Common.Testing.CheckExtensions.CheckThat<T>(T[])
  fullName.vb: Benday.Common.Testing.CheckExtensions.CheckThat(Of T)(T())
  nameWithType: CheckExtensions.CheckThat<T>(T[])
  nameWithType.vb: CheckExtensions.CheckThat(Of T)(T())
- uid: Benday.Common.Testing.ICheckArrayAssertion`1
  name: ICheckArrayAssertion<T>
  href: api/Benday.Common.Testing.ICheckArrayAssertion-1.html
  commentId: T:Benday.Common.Testing.ICheckArrayAssertion`1
  name.vb: ICheckArrayAssertion(Of T)
  fullName: Benday.Common.Testing.ICheckArrayAssertion<T>
  fullName.vb: Benday.Common.Testing.ICheckArrayAssertion(Of T)
  nameWithType: ICheckArrayAssertion<T>
  nameWithType.vb: ICheckArrayAssertion(Of T)
- uid: Benday.Common.Testing.ICheckAssertionForNullableType`1
  name: ICheckAssertionForNullableType<T>
  href: api/Benday.Common.Testing.ICheckAssertionForNullableType-1.html
  commentId: T:Benday.Common.Testing.ICheckAssertionForNullableType`1
  name.vb: ICheckAssertionForNullableType(Of T)
  fullName: Benday.Common.Testing.ICheckAssertionForNullableType<T>
  fullName.vb: Benday.Common.Testing.ICheckAssertionForNullableType(Of T)
  nameWithType: ICheckAssertionForNullableType<T>
  nameWithType.vb: ICheckAssertionForNullableType(Of T)
- uid: Benday.Common.Testing.ICheckAssertion`1
  name: ICheckAssertion<T>
  href: api/Benday.Common.Testing.ICheckAssertion-1.html
  commentId: T:Benday.Common.Testing.ICheckAssertion`1
  name.vb: ICheckAssertion(Of T)
  fullName: Benday.Common.Testing.ICheckAssertion<T>
  fullName.vb: Benday.Common.Testing.ICheckAssertion(Of T)
  nameWithType: ICheckAssertion<T>
  nameWithType.vb: ICheckAssertion(Of T)
- uid: Benday.Common.Testing.ICheckAssertion`1.FailureMessage
  name: FailureMessage
  href: api/Benday.Common.Testing.ICheckAssertion-1.html#Benday_Common_Testing_ICheckAssertion_1_FailureMessage
  commentId: P:Benday.Common.Testing.ICheckAssertion`1.FailureMessage
  fullName: Benday.Common.Testing.ICheckAssertion<T>.FailureMessage
  fullName.vb: Benday.Common.Testing.ICheckAssertion(Of T).FailureMessage
  nameWithType: ICheckAssertion<T>.FailureMessage
  nameWithType.vb: ICheckAssertion(Of T).FailureMessage
- uid: Benday.Common.Testing.ICheckAssertion`1.FailureMessage*
  name: FailureMessage
  href: api/Benday.Common.Testing.ICheckAssertion-1.html#Benday_Common_Testing_ICheckAssertion_1_FailureMessage_
  commentId: Overload:Benday.Common.Testing.ICheckAssertion`1.FailureMessage
  isSpec: "True"
  fullName: Benday.Common.Testing.ICheckAssertion<T>.FailureMessage
  fullName.vb: Benday.Common.Testing.ICheckAssertion(Of T).FailureMessage
  nameWithType: ICheckAssertion<T>.FailureMessage
  nameWithType.vb: ICheckAssertion(Of T).FailureMessage
- uid: Benday.Common.Testing.ICheckAssertion`1.Input
  name: Input
  href: api/Benday.Common.Testing.ICheckAssertion-1.html#Benday_Common_Testing_ICheckAssertion_1_Input
  commentId: P:Benday.Common.Testing.ICheckAssertion`1.Input
  fullName: Benday.Common.Testing.ICheckAssertion<T>.Input
  fullName.vb: Benday.Common.Testing.ICheckAssertion(Of T).Input
  nameWithType: ICheckAssertion<T>.Input
  nameWithType.vb: ICheckAssertion(Of T).Input
- uid: Benday.Common.Testing.ICheckAssertion`1.Input*
  name: Input
  href: api/Benday.Common.Testing.ICheckAssertion-1.html#Benday_Common_Testing_ICheckAssertion_1_Input_
  commentId: Overload:Benday.Common.Testing.ICheckAssertion`1.Input
  isSpec: "True"
  fullName: Benday.Common.Testing.ICheckAssertion<T>.Input
  fullName.vb: Benday.Common.Testing.ICheckAssertion(Of T).Input
  nameWithType: ICheckAssertion<T>.Input
  nameWithType.vb: ICheckAssertion(Of T).Input
- uid: Benday.Common.Testing.ICheckAssertion`1.WithMessage(System.String)
  name: WithMessage(string)
  href: api/Benday.Common.Testing.ICheckAssertion-1.html#Benday_Common_Testing_ICheckAssertion_1_WithMessage_System_String_
  commentId: M:Benday.Common.Testing.ICheckAssertion`1.WithMessage(System.String)
  name.vb: WithMessage(String)
  fullName: Benday.Common.Testing.ICheckAssertion<T>.WithMessage(string)
  fullName.vb: Benday.Common.Testing.ICheckAssertion(Of T).WithMessage(String)
  nameWithType: ICheckAssertion<T>.WithMessage(string)
  nameWithType.vb: ICheckAssertion(Of T).WithMessage(String)
- uid: Benday.Common.Testing.ICheckAssertion`1.WithMessage*
  name: WithMessage
  href: api/Benday.Common.Testing.ICheckAssertion-1.html#Benday_Common_Testing_ICheckAssertion_1_WithMessage_
  commentId: Overload:Benday.Common.Testing.ICheckAssertion`1.WithMessage
  isSpec: "True"
  fullName: Benday.Common.Testing.ICheckAssertion<T>.WithMessage
  fullName.vb: Benday.Common.Testing.ICheckAssertion(Of T).WithMessage
  nameWithType: ICheckAssertion<T>.WithMessage
  nameWithType.vb: ICheckAssertion(Of T).WithMessage
- uid: Benday.Common.Testing.ICheckCollectionAssertion`1
  name: ICheckCollectionAssertion<T>
  href: api/Benday.Common.Testing.ICheckCollectionAssertion-1.html
  commentId: T:Benday.Common.Testing.ICheckCollectionAssertion`1
  name.vb: ICheckCollectionAssertion(Of T)
  fullName: Benday.Common.Testing.ICheckCollectionAssertion<T>
  fullName.vb: Benday.Common.Testing.ICheckCollectionAssertion(Of T)
  nameWithType: ICheckCollectionAssertion<T>
  nameWithType.vb: ICheckCollectionAssertion(Of T)
- uid: Benday.Common.Testing.IEnumerableAssertionExtensions
  name: IEnumerableAssertionExtensions
  href: api/Benday.Common.Testing.IEnumerableAssertionExtensions.html
  commentId: T:Benday.Common.Testing.IEnumerableAssertionExtensions
  fullName: Benday.Common.Testing.IEnumerableAssertionExtensions
  nameWithType: IEnumerableAssertionExtensions
- uid: Benday.Common.Testing.IEnumerableAssertionExtensions.AllItemsAreNotNull*
  name: AllItemsAreNotNull
  href: api/Benday.Common.Testing.IEnumerableAssertionExtensions.html#Benday_Common_Testing_IEnumerableAssertionExtensions_AllItemsAreNotNull_
  commentId: Overload:Benday.Common.Testing.IEnumerableAssertionExtensions.AllItemsAreNotNull
  isSpec: "True"
  fullName: Benday.Common.Testing.IEnumerableAssertionExtensions.AllItemsAreNotNull
  nameWithType: IEnumerableAssertionExtensions.AllItemsAreNotNull
- uid: Benday.Common.Testing.IEnumerableAssertionExtensions.AllItemsAreNotNull``1(Benday.Common.Testing.ICheckCollectionAssertion{System.Collections.Generic.IEnumerable{``0}},System.String)
  name: AllItemsAreNotNull<T>(ICheckCollectionAssertion<IEnumerable<T?>>, string?)
  href: api/Benday.Common.Testing.IEnumerableAssertionExtensions.html#Benday_Common_Testing_IEnumerableAssertionExtensions_AllItemsAreNotNull__1_Benday_Common_Testing_ICheckCollectionAssertion_System_Collections_Generic_IEnumerable___0___System_String_
  commentId: M:Benday.Common.Testing.IEnumerableAssertionExtensions.AllItemsAreNotNull``1(Benday.Common.Testing.ICheckCollectionAssertion{System.Collections.Generic.IEnumerable{``0}},System.String)
  name.vb: AllItemsAreNotNull(Of T)(ICheckCollectionAssertion(Of IEnumerable(Of T)), String)
  fullName: Benday.Common.Testing.IEnumerableAssertionExtensions.AllItemsAreNotNull<T>(Benday.Common.Testing.ICheckCollectionAssertion<System.Collections.Generic.IEnumerable<T?>>, string?)
  fullName.vb: Benday.Common.Testing.IEnumerableAssertionExtensions.AllItemsAreNotNull(Of T)(Benday.Common.Testing.ICheckCollectionAssertion(Of System.Collections.Generic.IEnumerable(Of T)), String)
  nameWithType: IEnumerableAssertionExtensions.AllItemsAreNotNull<T>(ICheckCollectionAssertion<IEnumerable<T?>>, string?)
  nameWithType.vb: IEnumerableAssertionExtensions.AllItemsAreNotNull(Of T)(ICheckCollectionAssertion(Of IEnumerable(Of T)), String)
- uid: Benday.Common.Testing.IEnumerableAssertionExtensions.AllItemsAreUnique*
  name: AllItemsAreUnique
  href: api/Benday.Common.Testing.IEnumerableAssertionExtensions.html#Benday_Common_Testing_IEnumerableAssertionExtensions_AllItemsAreUnique_
  commentId: Overload:Benday.Common.Testing.IEnumerableAssertionExtensions.AllItemsAreUnique
  isSpec: "True"
  fullName: Benday.Common.Testing.IEnumerableAssertionExtensions.AllItemsAreUnique
  nameWithType: IEnumerableAssertionExtensions.AllItemsAreUnique
- uid: Benday.Common.Testing.IEnumerableAssertionExtensions.AllItemsAreUnique``1(Benday.Common.Testing.ICheckCollectionAssertion{System.Collections.Generic.IEnumerable{``0}},System.String)
  name: AllItemsAreUnique<T>(ICheckCollectionAssertion<IEnumerable<T>>, string?)
  href: api/Benday.Common.Testing.IEnumerableAssertionExtensions.html#Benday_Common_Testing_IEnumerableAssertionExtensions_AllItemsAreUnique__1_Benday_Common_Testing_ICheckCollectionAssertion_System_Collections_Generic_IEnumerable___0___System_String_
  commentId: M:Benday.Common.Testing.IEnumerableAssertionExtensions.AllItemsAreUnique``1(Benday.Common.Testing.ICheckCollectionAssertion{System.Collections.Generic.IEnumerable{``0}},System.String)
  name.vb: AllItemsAreUnique(Of T)(ICheckCollectionAssertion(Of IEnumerable(Of T)), String)
  fullName: Benday.Common.Testing.IEnumerableAssertionExtensions.AllItemsAreUnique<T>(Benday.Common.Testing.ICheckCollectionAssertion<System.Collections.Generic.IEnumerable<T>>, string?)
  fullName.vb: Benday.Common.Testing.IEnumerableAssertionExtensions.AllItemsAreUnique(Of T)(Benday.Common.Testing.ICheckCollectionAssertion(Of System.Collections.Generic.IEnumerable(Of T)), String)
  nameWithType: IEnumerableAssertionExtensions.AllItemsAreUnique<T>(ICheckCollectionAssertion<IEnumerable<T>>, string?)
  nameWithType.vb: IEnumerableAssertionExtensions.AllItemsAreUnique(Of T)(ICheckCollectionAssertion(Of IEnumerable(Of T)), String)
- uid: Benday.Common.Testing.IEnumerableAssertionExtensions.Contains*
  name: Contains
  href: api/Benday.Common.Testing.IEnumerableAssertionExtensions.html#Benday_Common_Testing_IEnumerableAssertionExtensions_Contains_
  commentId: Overload:Benday.Common.Testing.IEnumerableAssertionExtensions.Contains
  isSpec: "True"
  fullName: Benday.Common.Testing.IEnumerableAssertionExtensions.Contains
  nameWithType: IEnumerableAssertionExtensions.Contains
- uid: Benday.Common.Testing.IEnumerableAssertionExtensions.Contains``1(Benday.Common.Testing.ICheckCollectionAssertion{System.Collections.Generic.IEnumerable{``0}},``0,System.String)
  name: Contains<T>(ICheckCollectionAssertion<IEnumerable<T>>, T, string?)
  href: api/Benday.Common.Testing.IEnumerableAssertionExtensions.html#Benday_Common_Testing_IEnumerableAssertionExtensions_Contains__1_Benday_Common_Testing_ICheckCollectionAssertion_System_Collections_Generic_IEnumerable___0_____0_System_String_
  commentId: M:Benday.Common.Testing.IEnumerableAssertionExtensions.Contains``1(Benday.Common.Testing.ICheckCollectionAssertion{System.Collections.Generic.IEnumerable{``0}},``0,System.String)
  name.vb: Contains(Of T)(ICheckCollectionAssertion(Of IEnumerable(Of T)), T, String)
  fullName: Benday.Common.Testing.IEnumerableAssertionExtensions.Contains<T>(Benday.Common.Testing.ICheckCollectionAssertion<System.Collections.Generic.IEnumerable<T>>, T, string?)
  fullName.vb: Benday.Common.Testing.IEnumerableAssertionExtensions.Contains(Of T)(Benday.Common.Testing.ICheckCollectionAssertion(Of System.Collections.Generic.IEnumerable(Of T)), T, String)
  nameWithType: IEnumerableAssertionExtensions.Contains<T>(ICheckCollectionAssertion<IEnumerable<T>>, T, string?)
  nameWithType.vb: IEnumerableAssertionExtensions.Contains(Of T)(ICheckCollectionAssertion(Of IEnumerable(Of T)), T, String)
- uid: Benday.Common.Testing.IEnumerableAssertionExtensions.DoesNotContain*
  name: DoesNotContain
  href: api/Benday.Common.Testing.IEnumerableAssertionExtensions.html#Benday_Common_Testing_IEnumerableAssertionExtensions_DoesNotContain_
  commentId: Overload:Benday.Common.Testing.IEnumerableAssertionExtensions.DoesNotContain
  isSpec: "True"
  fullName: Benday.Common.Testing.IEnumerableAssertionExtensions.DoesNotContain
  nameWithType: IEnumerableAssertionExtensions.DoesNotContain
- uid: Benday.Common.Testing.IEnumerableAssertionExtensions.DoesNotContain``1(Benday.Common.Testing.ICheckCollectionAssertion{System.Collections.Generic.IEnumerable{``0}},``0,System.String)
  name: DoesNotContain<T>(ICheckCollectionAssertion<IEnumerable<T>>, T, string?)
  href: api/Benday.Common.Testing.IEnumerableAssertionExtensions.html#Benday_Common_Testing_IEnumerableAssertionExtensions_DoesNotContain__1_Benday_Common_Testing_ICheckCollectionAssertion_System_Collections_Generic_IEnumerable___0_____0_System_String_
  commentId: M:Benday.Common.Testing.IEnumerableAssertionExtensions.DoesNotContain``1(Benday.Common.Testing.ICheckCollectionAssertion{System.Collections.Generic.IEnumerable{``0}},``0,System.String)
  name.vb: DoesNotContain(Of T)(ICheckCollectionAssertion(Of IEnumerable(Of T)), T, String)
  fullName: Benday.Common.Testing.IEnumerableAssertionExtensions.DoesNotContain<T>(Benday.Common.Testing.ICheckCollectionAssertion<System.Collections.Generic.IEnumerable<T>>, T, string?)
  fullName.vb: Benday.Common.Testing.IEnumerableAssertionExtensions.DoesNotContain(Of T)(Benday.Common.Testing.ICheckCollectionAssertion(Of System.Collections.Generic.IEnumerable(Of T)), T, String)
  nameWithType: IEnumerableAssertionExtensions.DoesNotContain<T>(ICheckCollectionAssertion<IEnumerable<T>>, T, string?)
  nameWithType.vb: IEnumerableAssertionExtensions.DoesNotContain(Of T)(ICheckCollectionAssertion(Of IEnumerable(Of T)), T, String)
- uid: Benday.Common.Testing.IEnumerableAssertionExtensions.IsEqualTo*
  name: IsEqualTo
  href: api/Benday.Common.Testing.IEnumerableAssertionExtensions.html#Benday_Common_Testing_IEnumerableAssertionExtensions_IsEqualTo_
  commentId: Overload:Benday.Common.Testing.IEnumerableAssertionExtensions.IsEqualTo
  isSpec: "True"
  fullName: Benday.Common.Testing.IEnumerableAssertionExtensions.IsEqualTo
  nameWithType: IEnumerableAssertionExtensions.IsEqualTo
- uid: Benday.Common.Testing.IEnumerableAssertionExtensions.IsEqualTo``1(Benday.Common.Testing.ICheckCollectionAssertion{System.Collections.Generic.IEnumerable{``0}},System.Collections.Generic.IEnumerable{``0},System.String)
  name: IsEqualTo<T>(ICheckCollectionAssertion<IEnumerable<T>>, IEnumerable<T>, string?)
  href: api/Benday.Common.Testing.IEnumerableAssertionExtensions.html#Benday_Common_Testing_IEnumerableAssertionExtensions_IsEqualTo__1_Benday_Common_Testing_ICheckCollectionAssertion_System_Collections_Generic_IEnumerable___0___System_Collections_Generic_IEnumerable___0__System_String_
  commentId: M:Benday.Common.Testing.IEnumerableAssertionExtensions.IsEqualTo``1(Benday.Common.Testing.ICheckCollectionAssertion{System.Collections.Generic.IEnumerable{``0}},System.Collections.Generic.IEnumerable{``0},System.String)
  name.vb: IsEqualTo(Of T)(ICheckCollectionAssertion(Of IEnumerable(Of T)), IEnumerable(Of T), String)
  fullName: Benday.Common.Testing.IEnumerableAssertionExtensions.IsEqualTo<T>(Benday.Common.Testing.ICheckCollectionAssertion<System.Collections.Generic.IEnumerable<T>>, System.Collections.Generic.IEnumerable<T>, string?)
  fullName.vb: Benday.Common.Testing.IEnumerableAssertionExtensions.IsEqualTo(Of T)(Benday.Common.Testing.ICheckCollectionAssertion(Of System.Collections.Generic.IEnumerable(Of T)), System.Collections.Generic.IEnumerable(Of T), String)
  nameWithType: IEnumerableAssertionExtensions.IsEqualTo<T>(ICheckCollectionAssertion<IEnumerable<T>>, IEnumerable<T>, string?)
  nameWithType.vb: IEnumerableAssertionExtensions.IsEqualTo(Of T)(ICheckCollectionAssertion(Of IEnumerable(Of T)), IEnumerable(Of T), String)
- uid: Benday.Common.Testing.IEnumerableAssertionExtensions.IsEquivalentTo*
  name: IsEquivalentTo
  href: api/Benday.Common.Testing.IEnumerableAssertionExtensions.html#Benday_Common_Testing_IEnumerableAssertionExtensions_IsEquivalentTo_
  commentId: Overload:Benday.Common.Testing.IEnumerableAssertionExtensions.IsEquivalentTo
  isSpec: "True"
  fullName: Benday.Common.Testing.IEnumerableAssertionExtensions.IsEquivalentTo
  nameWithType: IEnumerableAssertionExtensions.IsEquivalentTo
- uid: Benday.Common.Testing.IEnumerableAssertionExtensions.IsEquivalentTo``1(Benday.Common.Testing.ICheckCollectionAssertion{System.Collections.Generic.IEnumerable{``0}},System.Collections.Generic.IEnumerable{``0},System.String)
  name: IsEquivalentTo<T>(ICheckCollectionAssertion<IEnumerable<T>>, IEnumerable<T>, string?)
  href: api/Benday.Common.Testing.IEnumerableAssertionExtensions.html#Benday_Common_Testing_IEnumerableAssertionExtensions_IsEquivalentTo__1_Benday_Common_Testing_ICheckCollectionAssertion_System_Collections_Generic_IEnumerable___0___System_Collections_Generic_IEnumerable___0__System_String_
  commentId: M:Benday.Common.Testing.IEnumerableAssertionExtensions.IsEquivalentTo``1(Benday.Common.Testing.ICheckCollectionAssertion{System.Collections.Generic.IEnumerable{``0}},System.Collections.Generic.IEnumerable{``0},System.String)
  name.vb: IsEquivalentTo(Of T)(ICheckCollectionAssertion(Of IEnumerable(Of T)), IEnumerable(Of T), String)
  fullName: Benday.Common.Testing.IEnumerableAssertionExtensions.IsEquivalentTo<T>(Benday.Common.Testing.ICheckCollectionAssertion<System.Collections.Generic.IEnumerable<T>>, System.Collections.Generic.IEnumerable<T>, string?)
  fullName.vb: Benday.Common.Testing.IEnumerableAssertionExtensions.IsEquivalentTo(Of T)(Benday.Common.Testing.ICheckCollectionAssertion(Of System.Collections.Generic.IEnumerable(Of T)), System.Collections.Generic.IEnumerable(Of T), String)
  nameWithType: IEnumerableAssertionExtensions.IsEquivalentTo<T>(ICheckCollectionAssertion<IEnumerable<T>>, IEnumerable<T>, string?)
  nameWithType.vb: IEnumerableAssertionExtensions.IsEquivalentTo(Of T)(ICheckCollectionAssertion(Of IEnumerable(Of T)), IEnumerable(Of T), String)
- uid: Benday.Common.Testing.IEnumerableAssertionExtensions.IsNotEqualTo*
  name: IsNotEqualTo
  href: api/Benday.Common.Testing.IEnumerableAssertionExtensions.html#Benday_Common_Testing_IEnumerableAssertionExtensions_IsNotEqualTo_
  commentId: Overload:Benday.Common.Testing.IEnumerableAssertionExtensions.IsNotEqualTo
  isSpec: "True"
  fullName: Benday.Common.Testing.IEnumerableAssertionExtensions.IsNotEqualTo
  nameWithType: IEnumerableAssertionExtensions.IsNotEqualTo
- uid: Benday.Common.Testing.IEnumerableAssertionExtensions.IsNotEqualTo``1(Benday.Common.Testing.ICheckCollectionAssertion{System.Collections.Generic.IEnumerable{``0}},System.Collections.Generic.IEnumerable{``0},System.String)
  name: IsNotEqualTo<T>(ICheckCollectionAssertion<IEnumerable<T>>, IEnumerable<T>, string?)
  href: api/Benday.Common.Testing.IEnumerableAssertionExtensions.html#Benday_Common_Testing_IEnumerableAssertionExtensions_IsNotEqualTo__1_Benday_Common_Testing_ICheckCollectionAssertion_System_Collections_Generic_IEnumerable___0___System_Collections_Generic_IEnumerable___0__System_String_
  commentId: M:Benday.Common.Testing.IEnumerableAssertionExtensions.IsNotEqualTo``1(Benday.Common.Testing.ICheckCollectionAssertion{System.Collections.Generic.IEnumerable{``0}},System.Collections.Generic.IEnumerable{``0},System.String)
  name.vb: IsNotEqualTo(Of T)(ICheckCollectionAssertion(Of IEnumerable(Of T)), IEnumerable(Of T), String)
  fullName: Benday.Common.Testing.IEnumerableAssertionExtensions.IsNotEqualTo<T>(Benday.Common.Testing.ICheckCollectionAssertion<System.Collections.Generic.IEnumerable<T>>, System.Collections.Generic.IEnumerable<T>, string?)
  fullName.vb: Benday.Common.Testing.IEnumerableAssertionExtensions.IsNotEqualTo(Of T)(Benday.Common.Testing.ICheckCollectionAssertion(Of System.Collections.Generic.IEnumerable(Of T)), System.Collections.Generic.IEnumerable(Of T), String)
  nameWithType: IEnumerableAssertionExtensions.IsNotEqualTo<T>(ICheckCollectionAssertion<IEnumerable<T>>, IEnumerable<T>, string?)
  nameWithType.vb: IEnumerableAssertionExtensions.IsNotEqualTo(Of T)(ICheckCollectionAssertion(Of IEnumerable(Of T)), IEnumerable(Of T), String)
- uid: Benday.Common.Testing.IEnumerableAssertionExtensions.IsNotEquivalentTo*
  name: IsNotEquivalentTo
  href: api/Benday.Common.Testing.IEnumerableAssertionExtensions.html#Benday_Common_Testing_IEnumerableAssertionExtensions_IsNotEquivalentTo_
  commentId: Overload:Benday.Common.Testing.IEnumerableAssertionExtensions.IsNotEquivalentTo
  isSpec: "True"
  fullName: Benday.Common.Testing.IEnumerableAssertionExtensions.IsNotEquivalentTo
  nameWithType: IEnumerableAssertionExtensions.IsNotEquivalentTo
- uid: Benday.Common.Testing.IEnumerableAssertionExtensions.IsNotEquivalentTo``1(Benday.Common.Testing.ICheckCollectionAssertion{System.Collections.Generic.IEnumerable{``0}},System.Collections.Generic.IEnumerable{``0},System.String)
  name: IsNotEquivalentTo<T>(ICheckCollectionAssertion<IEnumerable<T>>, IEnumerable<T>, string?)
  href: api/Benday.Common.Testing.IEnumerableAssertionExtensions.html#Benday_Common_Testing_IEnumerableAssertionExtensions_IsNotEquivalentTo__1_Benday_Common_Testing_ICheckCollectionAssertion_System_Collections_Generic_IEnumerable___0___System_Collections_Generic_IEnumerable___0__System_String_
  commentId: M:Benday.Common.Testing.IEnumerableAssertionExtensions.IsNotEquivalentTo``1(Benday.Common.Testing.ICheckCollectionAssertion{System.Collections.Generic.IEnumerable{``0}},System.Collections.Generic.IEnumerable{``0},System.String)
  name.vb: IsNotEquivalentTo(Of T)(ICheckCollectionAssertion(Of IEnumerable(Of T)), IEnumerable(Of T), String)
  fullName: Benday.Common.Testing.IEnumerableAssertionExtensions.IsNotEquivalentTo<T>(Benday.Common.Testing.ICheckCollectionAssertion<System.Collections.Generic.IEnumerable<T>>, System.Collections.Generic.IEnumerable<T>, string?)
  fullName.vb: Benday.Common.Testing.IEnumerableAssertionExtensions.IsNotEquivalentTo(Of T)(Benday.Common.Testing.ICheckCollectionAssertion(Of System.Collections.Generic.IEnumerable(Of T)), System.Collections.Generic.IEnumerable(Of T), String)
  nameWithType: IEnumerableAssertionExtensions.IsNotEquivalentTo<T>(ICheckCollectionAssertion<IEnumerable<T>>, IEnumerable<T>, string?)
  nameWithType.vb: IEnumerableAssertionExtensions.IsNotEquivalentTo(Of T)(ICheckCollectionAssertion(Of IEnumerable(Of T)), IEnumerable(Of T), String)
- uid: Benday.Common.Testing.IEnumerableAssertionExtensions.IsSubsetOf*
  name: IsSubsetOf
  href: api/Benday.Common.Testing.IEnumerableAssertionExtensions.html#Benday_Common_Testing_IEnumerableAssertionExtensions_IsSubsetOf_
  commentId: Overload:Benday.Common.Testing.IEnumerableAssertionExtensions.IsSubsetOf
  isSpec: "True"
  fullName: Benday.Common.Testing.IEnumerableAssertionExtensions.IsSubsetOf
  nameWithType: IEnumerableAssertionExtensions.IsSubsetOf
- uid: Benday.Common.Testing.IEnumerableAssertionExtensions.IsSubsetOf``1(Benday.Common.Testing.ICheckCollectionAssertion{System.Collections.Generic.IEnumerable{``0}},System.Collections.Generic.IEnumerable{``0},System.String)
  name: IsSubsetOf<T>(ICheckCollectionAssertion<IEnumerable<T>>, IEnumerable<T>, string?)
  href: api/Benday.Common.Testing.IEnumerableAssertionExtensions.html#Benday_Common_Testing_IEnumerableAssertionExtensions_IsSubsetOf__1_Benday_Common_Testing_ICheckCollectionAssertion_System_Collections_Generic_IEnumerable___0___System_Collections_Generic_IEnumerable___0__System_String_
  commentId: M:Benday.Common.Testing.IEnumerableAssertionExtensions.IsSubsetOf``1(Benday.Common.Testing.ICheckCollectionAssertion{System.Collections.Generic.IEnumerable{``0}},System.Collections.Generic.IEnumerable{``0},System.String)
  name.vb: IsSubsetOf(Of T)(ICheckCollectionAssertion(Of IEnumerable(Of T)), IEnumerable(Of T), String)
  fullName: Benday.Common.Testing.IEnumerableAssertionExtensions.IsSubsetOf<T>(Benday.Common.Testing.ICheckCollectionAssertion<System.Collections.Generic.IEnumerable<T>>, System.Collections.Generic.IEnumerable<T>, string?)
  fullName.vb: Benday.Common.Testing.IEnumerableAssertionExtensions.IsSubsetOf(Of T)(Benday.Common.Testing.ICheckCollectionAssertion(Of System.Collections.Generic.IEnumerable(Of T)), System.Collections.Generic.IEnumerable(Of T), String)
  nameWithType: IEnumerableAssertionExtensions.IsSubsetOf<T>(ICheckCollectionAssertion<IEnumerable<T>>, IEnumerable<T>, string?)
  nameWithType.vb: IEnumerableAssertionExtensions.IsSubsetOf(Of T)(ICheckCollectionAssertion(Of IEnumerable(Of T)), IEnumerable(Of T), String)
- uid: Benday.Common.Testing.IEnumerableAssertionExtensions.IsSupersetOf*
  name: IsSupersetOf
  href: api/Benday.Common.Testing.IEnumerableAssertionExtensions.html#Benday_Common_Testing_IEnumerableAssertionExtensions_IsSupersetOf_
  commentId: Overload:Benday.Common.Testing.IEnumerableAssertionExtensions.IsSupersetOf
  isSpec: "True"
  fullName: Benday.Common.Testing.IEnumerableAssertionExtensions.IsSupersetOf
  nameWithType: IEnumerableAssertionExtensions.IsSupersetOf
- uid: Benday.Common.Testing.IEnumerableAssertionExtensions.IsSupersetOf``1(Benday.Common.Testing.ICheckCollectionAssertion{System.Collections.Generic.IEnumerable{``0}},System.Collections.Generic.IEnumerable{``0},System.String)
  name: IsSupersetOf<T>(ICheckCollectionAssertion<IEnumerable<T>>, IEnumerable<T>, string?)
  href: api/Benday.Common.Testing.IEnumerableAssertionExtensions.html#Benday_Common_Testing_IEnumerableAssertionExtensions_IsSupersetOf__1_Benday_Common_Testing_ICheckCollectionAssertion_System_Collections_Generic_IEnumerable___0___System_Collections_Generic_IEnumerable___0__System_String_
  commentId: M:Benday.Common.Testing.IEnumerableAssertionExtensions.IsSupersetOf``1(Benday.Common.Testing.ICheckCollectionAssertion{System.Collections.Generic.IEnumerable{``0}},System.Collections.Generic.IEnumerable{``0},System.String)
  name.vb: IsSupersetOf(Of T)(ICheckCollectionAssertion(Of IEnumerable(Of T)), IEnumerable(Of T), String)
  fullName: Benday.Common.Testing.IEnumerableAssertionExtensions.IsSupersetOf<T>(Benday.Common.Testing.ICheckCollectionAssertion<System.Collections.Generic.IEnumerable<T>>, System.Collections.Generic.IEnumerable<T>, string?)
  fullName.vb: Benday.Common.Testing.IEnumerableAssertionExtensions.IsSupersetOf(Of T)(Benday.Common.Testing.ICheckCollectionAssertion(Of System.Collections.Generic.IEnumerable(Of T)), System.Collections.Generic.IEnumerable(Of T), String)
  nameWithType: IEnumerableAssertionExtensions.IsSupersetOf<T>(ICheckCollectionAssertion<IEnumerable<T>>, IEnumerable<T>, string?)
  nameWithType.vb: IEnumerableAssertionExtensions.IsSupersetOf(Of T)(ICheckCollectionAssertion(Of IEnumerable(Of T)), IEnumerable(Of T), String)
- uid: Benday.Common.Testing.IListAssertionExtensions
  name: IListAssertionExtensions
  href: api/Benday.Common.Testing.IListAssertionExtensions.html
  commentId: T:Benday.Common.Testing.IListAssertionExtensions
  fullName: Benday.Common.Testing.IListAssertionExtensions
  nameWithType: IListAssertionExtensions
- uid: Benday.Common.Testing.IListAssertionExtensions.AllItemsAreNotNull*
  name: AllItemsAreNotNull
  href: api/Benday.Common.Testing.IListAssertionExtensions.html#Benday_Common_Testing_IListAssertionExtensions_AllItemsAreNotNull_
  commentId: Overload:Benday.Common.Testing.IListAssertionExtensions.AllItemsAreNotNull
  isSpec: "True"
  fullName: Benday.Common.Testing.IListAssertionExtensions.AllItemsAreNotNull
  nameWithType: IListAssertionExtensions.AllItemsAreNotNull
- uid: Benday.Common.Testing.IListAssertionExtensions.AllItemsAreNotNull``1(Benday.Common.Testing.ICheckCollectionAssertion{System.Collections.Generic.IList{``0}},System.String)
  name: AllItemsAreNotNull<T>(ICheckCollectionAssertion<IList<T?>>, string?)
  href: api/Benday.Common.Testing.IListAssertionExtensions.html#Benday_Common_Testing_IListAssertionExtensions_AllItemsAreNotNull__1_Benday_Common_Testing_ICheckCollectionAssertion_System_Collections_Generic_IList___0___System_String_
  commentId: M:Benday.Common.Testing.IListAssertionExtensions.AllItemsAreNotNull``1(Benday.Common.Testing.ICheckCollectionAssertion{System.Collections.Generic.IList{``0}},System.String)
  name.vb: AllItemsAreNotNull(Of T)(ICheckCollectionAssertion(Of IList(Of T)), String)
  fullName: Benday.Common.Testing.IListAssertionExtensions.AllItemsAreNotNull<T>(Benday.Common.Testing.ICheckCollectionAssertion<System.Collections.Generic.IList<T?>>, string?)
  fullName.vb: Benday.Common.Testing.IListAssertionExtensions.AllItemsAreNotNull(Of T)(Benday.Common.Testing.ICheckCollectionAssertion(Of System.Collections.Generic.IList(Of T)), String)
  nameWithType: IListAssertionExtensions.AllItemsAreNotNull<T>(ICheckCollectionAssertion<IList<T?>>, string?)
  nameWithType.vb: IListAssertionExtensions.AllItemsAreNotNull(Of T)(ICheckCollectionAssertion(Of IList(Of T)), String)
- uid: Benday.Common.Testing.IListAssertionExtensions.AllItemsAreUnique*
  name: AllItemsAreUnique
  href: api/Benday.Common.Testing.IListAssertionExtensions.html#Benday_Common_Testing_IListAssertionExtensions_AllItemsAreUnique_
  commentId: Overload:Benday.Common.Testing.IListAssertionExtensions.AllItemsAreUnique
  isSpec: "True"
  fullName: Benday.Common.Testing.IListAssertionExtensions.AllItemsAreUnique
  nameWithType: IListAssertionExtensions.AllItemsAreUnique
- uid: Benday.Common.Testing.IListAssertionExtensions.AllItemsAreUnique``1(Benday.Common.Testing.ICheckCollectionAssertion{System.Collections.Generic.IList{``0}},System.String)
  name: AllItemsAreUnique<T>(ICheckCollectionAssertion<IList<T>>, string?)
  href: api/Benday.Common.Testing.IListAssertionExtensions.html#Benday_Common_Testing_IListAssertionExtensions_AllItemsAreUnique__1_Benday_Common_Testing_ICheckCollectionAssertion_System_Collections_Generic_IList___0___System_String_
  commentId: M:Benday.Common.Testing.IListAssertionExtensions.AllItemsAreUnique``1(Benday.Common.Testing.ICheckCollectionAssertion{System.Collections.Generic.IList{``0}},System.String)
  name.vb: AllItemsAreUnique(Of T)(ICheckCollectionAssertion(Of IList(Of T)), String)
  fullName: Benday.Common.Testing.IListAssertionExtensions.AllItemsAreUnique<T>(Benday.Common.Testing.ICheckCollectionAssertion<System.Collections.Generic.IList<T>>, string?)
  fullName.vb: Benday.Common.Testing.IListAssertionExtensions.AllItemsAreUnique(Of T)(Benday.Common.Testing.ICheckCollectionAssertion(Of System.Collections.Generic.IList(Of T)), String)
  nameWithType: IListAssertionExtensions.AllItemsAreUnique<T>(ICheckCollectionAssertion<IList<T>>, string?)
  nameWithType.vb: IListAssertionExtensions.AllItemsAreUnique(Of T)(ICheckCollectionAssertion(Of IList(Of T)), String)
- uid: Benday.Common.Testing.IListAssertionExtensions.Contains*
  name: Contains
  href: api/Benday.Common.Testing.IListAssertionExtensions.html#Benday_Common_Testing_IListAssertionExtensions_Contains_
  commentId: Overload:Benday.Common.Testing.IListAssertionExtensions.Contains
  isSpec: "True"
  fullName: Benday.Common.Testing.IListAssertionExtensions.Contains
  nameWithType: IListAssertionExtensions.Contains
- uid: Benday.Common.Testing.IListAssertionExtensions.Contains``1(Benday.Common.Testing.ICheckCollectionAssertion{System.Collections.Generic.IList{``0}},``0,System.String)
  name: Contains<T>(ICheckCollectionAssertion<IList<T>>, T, string?)
  href: api/Benday.Common.Testing.IListAssertionExtensions.html#Benday_Common_Testing_IListAssertionExtensions_Contains__1_Benday_Common_Testing_ICheckCollectionAssertion_System_Collections_Generic_IList___0_____0_System_String_
  commentId: M:Benday.Common.Testing.IListAssertionExtensions.Contains``1(Benday.Common.Testing.ICheckCollectionAssertion{System.Collections.Generic.IList{``0}},``0,System.String)
  name.vb: Contains(Of T)(ICheckCollectionAssertion(Of IList(Of T)), T, String)
  fullName: Benday.Common.Testing.IListAssertionExtensions.Contains<T>(Benday.Common.Testing.ICheckCollectionAssertion<System.Collections.Generic.IList<T>>, T, string?)
  fullName.vb: Benday.Common.Testing.IListAssertionExtensions.Contains(Of T)(Benday.Common.Testing.ICheckCollectionAssertion(Of System.Collections.Generic.IList(Of T)), T, String)
  nameWithType: IListAssertionExtensions.Contains<T>(ICheckCollectionAssertion<IList<T>>, T, string?)
  nameWithType.vb: IListAssertionExtensions.Contains(Of T)(ICheckCollectionAssertion(Of IList(Of T)), T, String)
- uid: Benday.Common.Testing.IListAssertionExtensions.DoesNotContain*
  name: DoesNotContain
  href: api/Benday.Common.Testing.IListAssertionExtensions.html#Benday_Common_Testing_IListAssertionExtensions_DoesNotContain_
  commentId: Overload:Benday.Common.Testing.IListAssertionExtensions.DoesNotContain
  isSpec: "True"
  fullName: Benday.Common.Testing.IListAssertionExtensions.DoesNotContain
  nameWithType: IListAssertionExtensions.DoesNotContain
- uid: Benday.Common.Testing.IListAssertionExtensions.DoesNotContain``1(Benday.Common.Testing.ICheckCollectionAssertion{System.Collections.Generic.IList{``0}},``0,System.String)
  name: DoesNotContain<T>(ICheckCollectionAssertion<IList<T>>, T, string?)
  href: api/Benday.Common.Testing.IListAssertionExtensions.html#Benday_Common_Testing_IListAssertionExtensions_DoesNotContain__1_Benday_Common_Testing_ICheckCollectionAssertion_System_Collections_Generic_IList___0_____0_System_String_
  commentId: M:Benday.Common.Testing.IListAssertionExtensions.DoesNotContain``1(Benday.Common.Testing.ICheckCollectionAssertion{System.Collections.Generic.IList{``0}},``0,System.String)
  name.vb: DoesNotContain(Of T)(ICheckCollectionAssertion(Of IList(Of T)), T, String)
  fullName: Benday.Common.Testing.IListAssertionExtensions.DoesNotContain<T>(Benday.Common.Testing.ICheckCollectionAssertion<System.Collections.Generic.IList<T>>, T, string?)
  fullName.vb: Benday.Common.Testing.IListAssertionExtensions.DoesNotContain(Of T)(Benday.Common.Testing.ICheckCollectionAssertion(Of System.Collections.Generic.IList(Of T)), T, String)
  nameWithType: IListAssertionExtensions.DoesNotContain<T>(ICheckCollectionAssertion<IList<T>>, T, string?)
  nameWithType.vb: IListAssertionExtensions.DoesNotContain(Of T)(ICheckCollectionAssertion(Of IList(Of T)), T, String)
- uid: Benday.Common.Testing.IListAssertionExtensions.IsEqualTo*
  name: IsEqualTo
  href: api/Benday.Common.Testing.IListAssertionExtensions.html#Benday_Common_Testing_IListAssertionExtensions_IsEqualTo_
  commentId: Overload:Benday.Common.Testing.IListAssertionExtensions.IsEqualTo
  isSpec: "True"
  fullName: Benday.Common.Testing.IListAssertionExtensions.IsEqualTo
  nameWithType: IListAssertionExtensions.IsEqualTo
- uid: Benday.Common.Testing.IListAssertionExtensions.IsEqualTo``1(Benday.Common.Testing.ICheckCollectionAssertion{System.Collections.Generic.IList{``0}},System.Collections.Generic.IList{``0},System.String)
  name: IsEqualTo<T>(ICheckCollectionAssertion<IList<T>>, IList<T>, string?)
  href: api/Benday.Common.Testing.IListAssertionExtensions.html#Benday_Common_Testing_IListAssertionExtensions_IsEqualTo__1_Benday_Common_Testing_ICheckCollectionAssertion_System_Collections_Generic_IList___0___System_Collections_Generic_IList___0__System_String_
  commentId: M:Benday.Common.Testing.IListAssertionExtensions.IsEqualTo``1(Benday.Common.Testing.ICheckCollectionAssertion{System.Collections.Generic.IList{``0}},System.Collections.Generic.IList{``0},System.String)
  name.vb: IsEqualTo(Of T)(ICheckCollectionAssertion(Of IList(Of T)), IList(Of T), String)
  fullName: Benday.Common.Testing.IListAssertionExtensions.IsEqualTo<T>(Benday.Common.Testing.ICheckCollectionAssertion<System.Collections.Generic.IList<T>>, System.Collections.Generic.IList<T>, string?)
  fullName.vb: Benday.Common.Testing.IListAssertionExtensions.IsEqualTo(Of T)(Benday.Common.Testing.ICheckCollectionAssertion(Of System.Collections.Generic.IList(Of T)), System.Collections.Generic.IList(Of T), String)
  nameWithType: IListAssertionExtensions.IsEqualTo<T>(ICheckCollectionAssertion<IList<T>>, IList<T>, string?)
  nameWithType.vb: IListAssertionExtensions.IsEqualTo(Of T)(ICheckCollectionAssertion(Of IList(Of T)), IList(Of T), String)
- uid: Benday.Common.Testing.IListAssertionExtensions.IsEquivalentTo*
  name: IsEquivalentTo
  href: api/Benday.Common.Testing.IListAssertionExtensions.html#Benday_Common_Testing_IListAssertionExtensions_IsEquivalentTo_
  commentId: Overload:Benday.Common.Testing.IListAssertionExtensions.IsEquivalentTo
  isSpec: "True"
  fullName: Benday.Common.Testing.IListAssertionExtensions.IsEquivalentTo
  nameWithType: IListAssertionExtensions.IsEquivalentTo
- uid: Benday.Common.Testing.IListAssertionExtensions.IsEquivalentTo``1(Benday.Common.Testing.ICheckCollectionAssertion{System.Collections.Generic.IList{``0}},System.Collections.Generic.IList{``0},System.String)
  name: IsEquivalentTo<T>(ICheckCollectionAssertion<IList<T>>, IList<T>, string?)
  href: api/Benday.Common.Testing.IListAssertionExtensions.html#Benday_Common_Testing_IListAssertionExtensions_IsEquivalentTo__1_Benday_Common_Testing_ICheckCollectionAssertion_System_Collections_Generic_IList___0___System_Collections_Generic_IList___0__System_String_
  commentId: M:Benday.Common.Testing.IListAssertionExtensions.IsEquivalentTo``1(Benday.Common.Testing.ICheckCollectionAssertion{System.Collections.Generic.IList{``0}},System.Collections.Generic.IList{``0},System.String)
  name.vb: IsEquivalentTo(Of T)(ICheckCollectionAssertion(Of IList(Of T)), IList(Of T), String)
  fullName: Benday.Common.Testing.IListAssertionExtensions.IsEquivalentTo<T>(Benday.Common.Testing.ICheckCollectionAssertion<System.Collections.Generic.IList<T>>, System.Collections.Generic.IList<T>, string?)
  fullName.vb: Benday.Common.Testing.IListAssertionExtensions.IsEquivalentTo(Of T)(Benday.Common.Testing.ICheckCollectionAssertion(Of System.Collections.Generic.IList(Of T)), System.Collections.Generic.IList(Of T), String)
  nameWithType: IListAssertionExtensions.IsEquivalentTo<T>(ICheckCollectionAssertion<IList<T>>, IList<T>, string?)
  nameWithType.vb: IListAssertionExtensions.IsEquivalentTo(Of T)(ICheckCollectionAssertion(Of IList(Of T)), IList(Of T), String)
- uid: Benday.Common.Testing.IListAssertionExtensions.IsNotEqualTo*
  name: IsNotEqualTo
  href: api/Benday.Common.Testing.IListAssertionExtensions.html#Benday_Common_Testing_IListAssertionExtensions_IsNotEqualTo_
  commentId: Overload:Benday.Common.Testing.IListAssertionExtensions.IsNotEqualTo
  isSpec: "True"
  fullName: Benday.Common.Testing.IListAssertionExtensions.IsNotEqualTo
  nameWithType: IListAssertionExtensions.IsNotEqualTo
- uid: Benday.Common.Testing.IListAssertionExtensions.IsNotEqualTo``1(Benday.Common.Testing.ICheckCollectionAssertion{System.Collections.Generic.IList{``0}},System.Collections.Generic.IList{``0},System.String)
  name: IsNotEqualTo<T>(ICheckCollectionAssertion<IList<T>>, IList<T>, string?)
  href: api/Benday.Common.Testing.IListAssertionExtensions.html#Benday_Common_Testing_IListAssertionExtensions_IsNotEqualTo__1_Benday_Common_Testing_ICheckCollectionAssertion_System_Collections_Generic_IList___0___System_Collections_Generic_IList___0__System_String_
  commentId: M:Benday.Common.Testing.IListAssertionExtensions.IsNotEqualTo``1(Benday.Common.Testing.ICheckCollectionAssertion{System.Collections.Generic.IList{``0}},System.Collections.Generic.IList{``0},System.String)
  name.vb: IsNotEqualTo(Of T)(ICheckCollectionAssertion(Of IList(Of T)), IList(Of T), String)
  fullName: Benday.Common.Testing.IListAssertionExtensions.IsNotEqualTo<T>(Benday.Common.Testing.ICheckCollectionAssertion<System.Collections.Generic.IList<T>>, System.Collections.Generic.IList<T>, string?)
  fullName.vb: Benday.Common.Testing.IListAssertionExtensions.IsNotEqualTo(Of T)(Benday.Common.Testing.ICheckCollectionAssertion(Of System.Collections.Generic.IList(Of T)), System.Collections.Generic.IList(Of T), String)
  nameWithType: IListAssertionExtensions.IsNotEqualTo<T>(ICheckCollectionAssertion<IList<T>>, IList<T>, string?)
  nameWithType.vb: IListAssertionExtensions.IsNotEqualTo(Of T)(ICheckCollectionAssertion(Of IList(Of T)), IList(Of T), String)
- uid: Benday.Common.Testing.IListAssertionExtensions.IsNotEquivalentTo*
  name: IsNotEquivalentTo
  href: api/Benday.Common.Testing.IListAssertionExtensions.html#Benday_Common_Testing_IListAssertionExtensions_IsNotEquivalentTo_
  commentId: Overload:Benday.Common.Testing.IListAssertionExtensions.IsNotEquivalentTo
  isSpec: "True"
  fullName: Benday.Common.Testing.IListAssertionExtensions.IsNotEquivalentTo
  nameWithType: IListAssertionExtensions.IsNotEquivalentTo
- uid: Benday.Common.Testing.IListAssertionExtensions.IsNotEquivalentTo``1(Benday.Common.Testing.ICheckCollectionAssertion{System.Collections.Generic.IList{``0}},System.Collections.Generic.IList{``0},System.String)
  name: IsNotEquivalentTo<T>(ICheckCollectionAssertion<IList<T>>, IList<T>, string?)
  href: api/Benday.Common.Testing.IListAssertionExtensions.html#Benday_Common_Testing_IListAssertionExtensions_IsNotEquivalentTo__1_Benday_Common_Testing_ICheckCollectionAssertion_System_Collections_Generic_IList___0___System_Collections_Generic_IList___0__System_String_
  commentId: M:Benday.Common.Testing.IListAssertionExtensions.IsNotEquivalentTo``1(Benday.Common.Testing.ICheckCollectionAssertion{System.Collections.Generic.IList{``0}},System.Collections.Generic.IList{``0},System.String)
  name.vb: IsNotEquivalentTo(Of T)(ICheckCollectionAssertion(Of IList(Of T)), IList(Of T), String)
  fullName: Benday.Common.Testing.IListAssertionExtensions.IsNotEquivalentTo<T>(Benday.Common.Testing.ICheckCollectionAssertion<System.Collections.Generic.IList<T>>, System.Collections.Generic.IList<T>, string?)
  fullName.vb: Benday.Common.Testing.IListAssertionExtensions.IsNotEquivalentTo(Of T)(Benday.Common.Testing.ICheckCollectionAssertion(Of System.Collections.Generic.IList(Of T)), System.Collections.Generic.IList(Of T), String)
  nameWithType: IListAssertionExtensions.IsNotEquivalentTo<T>(ICheckCollectionAssertion<IList<T>>, IList<T>, string?)
  nameWithType.vb: IListAssertionExtensions.IsNotEquivalentTo(Of T)(ICheckCollectionAssertion(Of IList(Of T)), IList(Of T), String)
- uid: Benday.Common.Testing.IListAssertionExtensions.IsSubsetOf*
  name: IsSubsetOf
  href: api/Benday.Common.Testing.IListAssertionExtensions.html#Benday_Common_Testing_IListAssertionExtensions_IsSubsetOf_
  commentId: Overload:Benday.Common.Testing.IListAssertionExtensions.IsSubsetOf
  isSpec: "True"
  fullName: Benday.Common.Testing.IListAssertionExtensions.IsSubsetOf
  nameWithType: IListAssertionExtensions.IsSubsetOf
- uid: Benday.Common.Testing.IListAssertionExtensions.IsSubsetOf``1(Benday.Common.Testing.ICheckCollectionAssertion{System.Collections.Generic.IList{``0}},System.Collections.Generic.IList{``0},System.String)
  name: IsSubsetOf<T>(ICheckCollectionAssertion<IList<T>>, IList<T>, string?)
  href: api/Benday.Common.Testing.IListAssertionExtensions.html#Benday_Common_Testing_IListAssertionExtensions_IsSubsetOf__1_Benday_Common_Testing_ICheckCollectionAssertion_System_Collections_Generic_IList___0___System_Collections_Generic_IList___0__System_String_
  commentId: M:Benday.Common.Testing.IListAssertionExtensions.IsSubsetOf``1(Benday.Common.Testing.ICheckCollectionAssertion{System.Collections.Generic.IList{``0}},System.Collections.Generic.IList{``0},System.String)
  name.vb: IsSubsetOf(Of T)(ICheckCollectionAssertion(Of IList(Of T)), IList(Of T), String)
  fullName: Benday.Common.Testing.IListAssertionExtensions.IsSubsetOf<T>(Benday.Common.Testing.ICheckCollectionAssertion<System.Collections.Generic.IList<T>>, System.Collections.Generic.IList<T>, string?)
  fullName.vb: Benday.Common.Testing.IListAssertionExtensions.IsSubsetOf(Of T)(Benday.Common.Testing.ICheckCollectionAssertion(Of System.Collections.Generic.IList(Of T)), System.Collections.Generic.IList(Of T), String)
  nameWithType: IListAssertionExtensions.IsSubsetOf<T>(ICheckCollectionAssertion<IList<T>>, IList<T>, string?)
  nameWithType.vb: IListAssertionExtensions.IsSubsetOf(Of T)(ICheckCollectionAssertion(Of IList(Of T)), IList(Of T), String)
- uid: Benday.Common.Testing.IListAssertionExtensions.IsSupersetOf*
  name: IsSupersetOf
  href: api/Benday.Common.Testing.IListAssertionExtensions.html#Benday_Common_Testing_IListAssertionExtensions_IsSupersetOf_
  commentId: Overload:Benday.Common.Testing.IListAssertionExtensions.IsSupersetOf
  isSpec: "True"
  fullName: Benday.Common.Testing.IListAssertionExtensions.IsSupersetOf
  nameWithType: IListAssertionExtensions.IsSupersetOf
- uid: Benday.Common.Testing.IListAssertionExtensions.IsSupersetOf``1(Benday.Common.Testing.ICheckCollectionAssertion{System.Collections.Generic.IList{``0}},System.Collections.Generic.IList{``0},System.String)
  name: IsSupersetOf<T>(ICheckCollectionAssertion<IList<T>>, IList<T>, string?)
  href: api/Benday.Common.Testing.IListAssertionExtensions.html#Benday_Common_Testing_IListAssertionExtensions_IsSupersetOf__1_Benday_Common_Testing_ICheckCollectionAssertion_System_Collections_Generic_IList___0___System_Collections_Generic_IList___0__System_String_
  commentId: M:Benday.Common.Testing.IListAssertionExtensions.IsSupersetOf``1(Benday.Common.Testing.ICheckCollectionAssertion{System.Collections.Generic.IList{``0}},System.Collections.Generic.IList{``0},System.String)
  name.vb: IsSupersetOf(Of T)(ICheckCollectionAssertion(Of IList(Of T)), IList(Of T), String)
  fullName: Benday.Common.Testing.IListAssertionExtensions.IsSupersetOf<T>(Benday.Common.Testing.ICheckCollectionAssertion<System.Collections.Generic.IList<T>>, System.Collections.Generic.IList<T>, string?)
  fullName.vb: Benday.Common.Testing.IListAssertionExtensions.IsSupersetOf(Of T)(Benday.Common.Testing.ICheckCollectionAssertion(Of System.Collections.Generic.IList(Of T)), System.Collections.Generic.IList(Of T), String)
  nameWithType: IListAssertionExtensions.IsSupersetOf<T>(ICheckCollectionAssertion<IList<T>>, IList<T>, string?)
  nameWithType.vb: IListAssertionExtensions.IsSupersetOf(Of T)(ICheckCollectionAssertion(Of IList(Of T)), IList(Of T), String)
- uid: Benday.Common.Testing.ListAssertionExtensions
  name: ListAssertionExtensions
  href: api/Benday.Common.Testing.ListAssertionExtensions.html
  commentId: T:Benday.Common.Testing.ListAssertionExtensions
  fullName: Benday.Common.Testing.ListAssertionExtensions
  nameWithType: ListAssertionExtensions
- uid: Benday.Common.Testing.ListAssertionExtensions.AllItemsAreNotNull*
  name: AllItemsAreNotNull
  href: api/Benday.Common.Testing.ListAssertionExtensions.html#Benday_Common_Testing_ListAssertionExtensions_AllItemsAreNotNull_
  commentId: Overload:Benday.Common.Testing.ListAssertionExtensions.AllItemsAreNotNull
  isSpec: "True"
  fullName: Benday.Common.Testing.ListAssertionExtensions.AllItemsAreNotNull
  nameWithType: ListAssertionExtensions.AllItemsAreNotNull
- uid: Benday.Common.Testing.ListAssertionExtensions.AllItemsAreNotNull``1(Benday.Common.Testing.ICheckCollectionAssertion{System.Collections.Generic.List{``0}},System.String)
  name: AllItemsAreNotNull<T>(ICheckCollectionAssertion<List<T?>>, string?)
  href: api/Benday.Common.Testing.ListAssertionExtensions.html#Benday_Common_Testing_ListAssertionExtensions_AllItemsAreNotNull__1_Benday_Common_Testing_ICheckCollectionAssertion_System_Collections_Generic_List___0___System_String_
  commentId: M:Benday.Common.Testing.ListAssertionExtensions.AllItemsAreNotNull``1(Benday.Common.Testing.ICheckCollectionAssertion{System.Collections.Generic.List{``0}},System.String)
  name.vb: AllItemsAreNotNull(Of T)(ICheckCollectionAssertion(Of List(Of T)), String)
  fullName: Benday.Common.Testing.ListAssertionExtensions.AllItemsAreNotNull<T>(Benday.Common.Testing.ICheckCollectionAssertion<System.Collections.Generic.List<T?>>, string?)
  fullName.vb: Benday.Common.Testing.ListAssertionExtensions.AllItemsAreNotNull(Of T)(Benday.Common.Testing.ICheckCollectionAssertion(Of System.Collections.Generic.List(Of T)), String)
  nameWithType: ListAssertionExtensions.AllItemsAreNotNull<T>(ICheckCollectionAssertion<List<T?>>, string?)
  nameWithType.vb: ListAssertionExtensions.AllItemsAreNotNull(Of T)(ICheckCollectionAssertion(Of List(Of T)), String)
- uid: Benday.Common.Testing.ListAssertionExtensions.AllItemsAreUnique*
  name: AllItemsAreUnique
  href: api/Benday.Common.Testing.ListAssertionExtensions.html#Benday_Common_Testing_ListAssertionExtensions_AllItemsAreUnique_
  commentId: Overload:Benday.Common.Testing.ListAssertionExtensions.AllItemsAreUnique
  isSpec: "True"
  fullName: Benday.Common.Testing.ListAssertionExtensions.AllItemsAreUnique
  nameWithType: ListAssertionExtensions.AllItemsAreUnique
- uid: Benday.Common.Testing.ListAssertionExtensions.AllItemsAreUnique``1(Benday.Common.Testing.ICheckCollectionAssertion{System.Collections.Generic.List{``0}},System.String)
  name: AllItemsAreUnique<T>(ICheckCollectionAssertion<List<T>>, string?)
  href: api/Benday.Common.Testing.ListAssertionExtensions.html#Benday_Common_Testing_ListAssertionExtensions_AllItemsAreUnique__1_Benday_Common_Testing_ICheckCollectionAssertion_System_Collections_Generic_List___0___System_String_
  commentId: M:Benday.Common.Testing.ListAssertionExtensions.AllItemsAreUnique``1(Benday.Common.Testing.ICheckCollectionAssertion{System.Collections.Generic.List{``0}},System.String)
  name.vb: AllItemsAreUnique(Of T)(ICheckCollectionAssertion(Of List(Of T)), String)
  fullName: Benday.Common.Testing.ListAssertionExtensions.AllItemsAreUnique<T>(Benday.Common.Testing.ICheckCollectionAssertion<System.Collections.Generic.List<T>>, string?)
  fullName.vb: Benday.Common.Testing.ListAssertionExtensions.AllItemsAreUnique(Of T)(Benday.Common.Testing.ICheckCollectionAssertion(Of System.Collections.Generic.List(Of T)), String)
  nameWithType: ListAssertionExtensions.AllItemsAreUnique<T>(ICheckCollectionAssertion<List<T>>, string?)
  nameWithType.vb: ListAssertionExtensions.AllItemsAreUnique(Of T)(ICheckCollectionAssertion(Of List(Of T)), String)
- uid: Benday.Common.Testing.ListAssertionExtensions.Contains*
  name: Contains
  href: api/Benday.Common.Testing.ListAssertionExtensions.html#Benday_Common_Testing_ListAssertionExtensions_Contains_
  commentId: Overload:Benday.Common.Testing.ListAssertionExtensions.Contains
  isSpec: "True"
  fullName: Benday.Common.Testing.ListAssertionExtensions.Contains
  nameWithType: ListAssertionExtensions.Contains
- uid: Benday.Common.Testing.ListAssertionExtensions.Contains``1(Benday.Common.Testing.ICheckCollectionAssertion{System.Collections.Generic.List{``0}},``0,System.String)
  name: Contains<T>(ICheckCollectionAssertion<List<T>>, T, string?)
  href: api/Benday.Common.Testing.ListAssertionExtensions.html#Benday_Common_Testing_ListAssertionExtensions_Contains__1_Benday_Common_Testing_ICheckCollectionAssertion_System_Collections_Generic_List___0_____0_System_String_
  commentId: M:Benday.Common.Testing.ListAssertionExtensions.Contains``1(Benday.Common.Testing.ICheckCollectionAssertion{System.Collections.Generic.List{``0}},``0,System.String)
  name.vb: Contains(Of T)(ICheckCollectionAssertion(Of List(Of T)), T, String)
  fullName: Benday.Common.Testing.ListAssertionExtensions.Contains<T>(Benday.Common.Testing.ICheckCollectionAssertion<System.Collections.Generic.List<T>>, T, string?)
  fullName.vb: Benday.Common.Testing.ListAssertionExtensions.Contains(Of T)(Benday.Common.Testing.ICheckCollectionAssertion(Of System.Collections.Generic.List(Of T)), T, String)
  nameWithType: ListAssertionExtensions.Contains<T>(ICheckCollectionAssertion<List<T>>, T, string?)
  nameWithType.vb: ListAssertionExtensions.Contains(Of T)(ICheckCollectionAssertion(Of List(Of T)), T, String)
- uid: Benday.Common.Testing.ListAssertionExtensions.DoesNotContain*
  name: DoesNotContain
  href: api/Benday.Common.Testing.ListAssertionExtensions.html#Benday_Common_Testing_ListAssertionExtensions_DoesNotContain_
  commentId: Overload:Benday.Common.Testing.ListAssertionExtensions.DoesNotContain
  isSpec: "True"
  fullName: Benday.Common.Testing.ListAssertionExtensions.DoesNotContain
  nameWithType: ListAssertionExtensions.DoesNotContain
- uid: Benday.Common.Testing.ListAssertionExtensions.DoesNotContain``1(Benday.Common.Testing.ICheckCollectionAssertion{System.Collections.Generic.List{``0}},``0,System.String)
  name: DoesNotContain<T>(ICheckCollectionAssertion<List<T>>, T, string?)
  href: api/Benday.Common.Testing.ListAssertionExtensions.html#Benday_Common_Testing_ListAssertionExtensions_DoesNotContain__1_Benday_Common_Testing_ICheckCollectionAssertion_System_Collections_Generic_List___0_____0_System_String_
  commentId: M:Benday.Common.Testing.ListAssertionExtensions.DoesNotContain``1(Benday.Common.Testing.ICheckCollectionAssertion{System.Collections.Generic.List{``0}},``0,System.String)
  name.vb: DoesNotContain(Of T)(ICheckCollectionAssertion(Of List(Of T)), T, String)
  fullName: Benday.Common.Testing.ListAssertionExtensions.DoesNotContain<T>(Benday.Common.Testing.ICheckCollectionAssertion<System.Collections.Generic.List<T>>, T, string?)
  fullName.vb: Benday.Common.Testing.ListAssertionExtensions.DoesNotContain(Of T)(Benday.Common.Testing.ICheckCollectionAssertion(Of System.Collections.Generic.List(Of T)), T, String)
  nameWithType: ListAssertionExtensions.DoesNotContain<T>(ICheckCollectionAssertion<List<T>>, T, string?)
  nameWithType.vb: ListAssertionExtensions.DoesNotContain(Of T)(ICheckCollectionAssertion(Of List(Of T)), T, String)
- uid: Benday.Common.Testing.ListAssertionExtensions.IsEqualTo*
  name: IsEqualTo
  href: api/Benday.Common.Testing.ListAssertionExtensions.html#Benday_Common_Testing_ListAssertionExtensions_IsEqualTo_
  commentId: Overload:Benday.Common.Testing.ListAssertionExtensions.IsEqualTo
  isSpec: "True"
  fullName: Benday.Common.Testing.ListAssertionExtensions.IsEqualTo
  nameWithType: ListAssertionExtensions.IsEqualTo
- uid: Benday.Common.Testing.ListAssertionExtensions.IsEqualTo``1(Benday.Common.Testing.ICheckCollectionAssertion{System.Collections.Generic.List{``0}},System.Collections.Generic.List{``0},System.String)
  name: IsEqualTo<T>(ICheckCollectionAssertion<List<T>>, List<T>, string?)
  href: api/Benday.Common.Testing.ListAssertionExtensions.html#Benday_Common_Testing_ListAssertionExtensions_IsEqualTo__1_Benday_Common_Testing_ICheckCollectionAssertion_System_Collections_Generic_List___0___System_Collections_Generic_List___0__System_String_
  commentId: M:Benday.Common.Testing.ListAssertionExtensions.IsEqualTo``1(Benday.Common.Testing.ICheckCollectionAssertion{System.Collections.Generic.List{``0}},System.Collections.Generic.List{``0},System.String)
  name.vb: IsEqualTo(Of T)(ICheckCollectionAssertion(Of List(Of T)), List(Of T), String)
  fullName: Benday.Common.Testing.ListAssertionExtensions.IsEqualTo<T>(Benday.Common.Testing.ICheckCollectionAssertion<System.Collections.Generic.List<T>>, System.Collections.Generic.List<T>, string?)
  fullName.vb: Benday.Common.Testing.ListAssertionExtensions.IsEqualTo(Of T)(Benday.Common.Testing.ICheckCollectionAssertion(Of System.Collections.Generic.List(Of T)), System.Collections.Generic.List(Of T), String)
  nameWithType: ListAssertionExtensions.IsEqualTo<T>(ICheckCollectionAssertion<List<T>>, List<T>, string?)
  nameWithType.vb: ListAssertionExtensions.IsEqualTo(Of T)(ICheckCollectionAssertion(Of List(Of T)), List(Of T), String)
- uid: Benday.Common.Testing.ListAssertionExtensions.IsEquivalentTo*
  name: IsEquivalentTo
  href: api/Benday.Common.Testing.ListAssertionExtensions.html#Benday_Common_Testing_ListAssertionExtensions_IsEquivalentTo_
  commentId: Overload:Benday.Common.Testing.ListAssertionExtensions.IsEquivalentTo
  isSpec: "True"
  fullName: Benday.Common.Testing.ListAssertionExtensions.IsEquivalentTo
  nameWithType: ListAssertionExtensions.IsEquivalentTo
- uid: Benday.Common.Testing.ListAssertionExtensions.IsEquivalentTo``1(Benday.Common.Testing.ICheckCollectionAssertion{System.Collections.Generic.List{``0}},System.Collections.Generic.List{``0},System.String)
  name: IsEquivalentTo<T>(ICheckCollectionAssertion<List<T>>, List<T>, string?)
  href: api/Benday.Common.Testing.ListAssertionExtensions.html#Benday_Common_Testing_ListAssertionExtensions_IsEquivalentTo__1_Benday_Common_Testing_ICheckCollectionAssertion_System_Collections_Generic_List___0___System_Collections_Generic_List___0__System_String_
  commentId: M:Benday.Common.Testing.ListAssertionExtensions.IsEquivalentTo``1(Benday.Common.Testing.ICheckCollectionAssertion{System.Collections.Generic.List{``0}},System.Collections.Generic.List{``0},System.String)
  name.vb: IsEquivalentTo(Of T)(ICheckCollectionAssertion(Of List(Of T)), List(Of T), String)
  fullName: Benday.Common.Testing.ListAssertionExtensions.IsEquivalentTo<T>(Benday.Common.Testing.ICheckCollectionAssertion<System.Collections.Generic.List<T>>, System.Collections.Generic.List<T>, string?)
  fullName.vb: Benday.Common.Testing.ListAssertionExtensions.IsEquivalentTo(Of T)(Benday.Common.Testing.ICheckCollectionAssertion(Of System.Collections.Generic.List(Of T)), System.Collections.Generic.List(Of T), String)
  nameWithType: ListAssertionExtensions.IsEquivalentTo<T>(ICheckCollectionAssertion<List<T>>, List<T>, string?)
  nameWithType.vb: ListAssertionExtensions.IsEquivalentTo(Of T)(ICheckCollectionAssertion(Of List(Of T)), List(Of T), String)
- uid: Benday.Common.Testing.ListAssertionExtensions.IsNotEqualTo*
  name: IsNotEqualTo
  href: api/Benday.Common.Testing.ListAssertionExtensions.html#Benday_Common_Testing_ListAssertionExtensions_IsNotEqualTo_
  commentId: Overload:Benday.Common.Testing.ListAssertionExtensions.IsNotEqualTo
  isSpec: "True"
  fullName: Benday.Common.Testing.ListAssertionExtensions.IsNotEqualTo
  nameWithType: ListAssertionExtensions.IsNotEqualTo
- uid: Benday.Common.Testing.ListAssertionExtensions.IsNotEqualTo``1(Benday.Common.Testing.ICheckCollectionAssertion{System.Collections.Generic.List{``0}},System.Collections.Generic.List{``0},System.String)
  name: IsNotEqualTo<T>(ICheckCollectionAssertion<List<T>>, List<T>, string?)
  href: api/Benday.Common.Testing.ListAssertionExtensions.html#Benday_Common_Testing_ListAssertionExtensions_IsNotEqualTo__1_Benday_Common_Testing_ICheckCollectionAssertion_System_Collections_Generic_List___0___System_Collections_Generic_List___0__System_String_
  commentId: M:Benday.Common.Testing.ListAssertionExtensions.IsNotEqualTo``1(Benday.Common.Testing.ICheckCollectionAssertion{System.Collections.Generic.List{``0}},System.Collections.Generic.List{``0},System.String)
  name.vb: IsNotEqualTo(Of T)(ICheckCollectionAssertion(Of List(Of T)), List(Of T), String)
  fullName: Benday.Common.Testing.ListAssertionExtensions.IsNotEqualTo<T>(Benday.Common.Testing.ICheckCollectionAssertion<System.Collections.Generic.List<T>>, System.Collections.Generic.List<T>, string?)
  fullName.vb: Benday.Common.Testing.ListAssertionExtensions.IsNotEqualTo(Of T)(Benday.Common.Testing.ICheckCollectionAssertion(Of System.Collections.Generic.List(Of T)), System.Collections.Generic.List(Of T), String)
  nameWithType: ListAssertionExtensions.IsNotEqualTo<T>(ICheckCollectionAssertion<List<T>>, List<T>, string?)
  nameWithType.vb: ListAssertionExtensions.IsNotEqualTo(Of T)(ICheckCollectionAssertion(Of List(Of T)), List(Of T), String)
- uid: Benday.Common.Testing.ListAssertionExtensions.IsNotEquivalentTo*
  name: IsNotEquivalentTo
  href: api/Benday.Common.Testing.ListAssertionExtensions.html#Benday_Common_Testing_ListAssertionExtensions_IsNotEquivalentTo_
  commentId: Overload:Benday.Common.Testing.ListAssertionExtensions.IsNotEquivalentTo
  isSpec: "True"
  fullName: Benday.Common.Testing.ListAssertionExtensions.IsNotEquivalentTo
  nameWithType: ListAssertionExtensions.IsNotEquivalentTo
- uid: Benday.Common.Testing.ListAssertionExtensions.IsNotEquivalentTo``1(Benday.Common.Testing.ICheckCollectionAssertion{System.Collections.Generic.List{``0}},System.Collections.Generic.List{``0},System.String)
  name: IsNotEquivalentTo<T>(ICheckCollectionAssertion<List<T>>, List<T>, string?)
  href: api/Benday.Common.Testing.ListAssertionExtensions.html#Benday_Common_Testing_ListAssertionExtensions_IsNotEquivalentTo__1_Benday_Common_Testing_ICheckCollectionAssertion_System_Collections_Generic_List___0___System_Collections_Generic_List___0__System_String_
  commentId: M:Benday.Common.Testing.ListAssertionExtensions.IsNotEquivalentTo``1(Benday.Common.Testing.ICheckCollectionAssertion{System.Collections.Generic.List{``0}},System.Collections.Generic.List{``0},System.String)
  name.vb: IsNotEquivalentTo(Of T)(ICheckCollectionAssertion(Of List(Of T)), List(Of T), String)
  fullName: Benday.Common.Testing.ListAssertionExtensions.IsNotEquivalentTo<T>(Benday.Common.Testing.ICheckCollectionAssertion<System.Collections.Generic.List<T>>, System.Collections.Generic.List<T>, string?)
  fullName.vb: Benday.Common.Testing.ListAssertionExtensions.IsNotEquivalentTo(Of T)(Benday.Common.Testing.ICheckCollectionAssertion(Of System.Collections.Generic.List(Of T)), System.Collections.Generic.List(Of T), String)
  nameWithType: ListAssertionExtensions.IsNotEquivalentTo<T>(ICheckCollectionAssertion<List<T>>, List<T>, string?)
  nameWithType.vb: ListAssertionExtensions.IsNotEquivalentTo(Of T)(ICheckCollectionAssertion(Of List(Of T)), List(Of T), String)
- uid: Benday.Common.Testing.ListAssertionExtensions.IsSubsetOf*
  name: IsSubsetOf
  href: api/Benday.Common.Testing.ListAssertionExtensions.html#Benday_Common_Testing_ListAssertionExtensions_IsSubsetOf_
  commentId: Overload:Benday.Common.Testing.ListAssertionExtensions.IsSubsetOf
  isSpec: "True"
  fullName: Benday.Common.Testing.ListAssertionExtensions.IsSubsetOf
  nameWithType: ListAssertionExtensions.IsSubsetOf
- uid: Benday.Common.Testing.ListAssertionExtensions.IsSubsetOf``1(Benday.Common.Testing.ICheckCollectionAssertion{System.Collections.Generic.List{``0}},System.Collections.Generic.List{``0},System.String)
  name: IsSubsetOf<T>(ICheckCollectionAssertion<List<T>>, List<T>, string?)
  href: api/Benday.Common.Testing.ListAssertionExtensions.html#Benday_Common_Testing_ListAssertionExtensions_IsSubsetOf__1_Benday_Common_Testing_ICheckCollectionAssertion_System_Collections_Generic_List___0___System_Collections_Generic_List___0__System_String_
  commentId: M:Benday.Common.Testing.ListAssertionExtensions.IsSubsetOf``1(Benday.Common.Testing.ICheckCollectionAssertion{System.Collections.Generic.List{``0}},System.Collections.Generic.List{``0},System.String)
  name.vb: IsSubsetOf(Of T)(ICheckCollectionAssertion(Of List(Of T)), List(Of T), String)
  fullName: Benday.Common.Testing.ListAssertionExtensions.IsSubsetOf<T>(Benday.Common.Testing.ICheckCollectionAssertion<System.Collections.Generic.List<T>>, System.Collections.Generic.List<T>, string?)
  fullName.vb: Benday.Common.Testing.ListAssertionExtensions.IsSubsetOf(Of T)(Benday.Common.Testing.ICheckCollectionAssertion(Of System.Collections.Generic.List(Of T)), System.Collections.Generic.List(Of T), String)
  nameWithType: ListAssertionExtensions.IsSubsetOf<T>(ICheckCollectionAssertion<List<T>>, List<T>, string?)
  nameWithType.vb: ListAssertionExtensions.IsSubsetOf(Of T)(ICheckCollectionAssertion(Of List(Of T)), List(Of T), String)
- uid: Benday.Common.Testing.ListAssertionExtensions.IsSupersetOf*
  name: IsSupersetOf
  href: api/Benday.Common.Testing.ListAssertionExtensions.html#Benday_Common_Testing_ListAssertionExtensions_IsSupersetOf_
  commentId: Overload:Benday.Common.Testing.ListAssertionExtensions.IsSupersetOf
  isSpec: "True"
  fullName: Benday.Common.Testing.ListAssertionExtensions.IsSupersetOf
  nameWithType: ListAssertionExtensions.IsSupersetOf
- uid: Benday.Common.Testing.ListAssertionExtensions.IsSupersetOf``1(Benday.Common.Testing.ICheckCollectionAssertion{System.Collections.Generic.List{``0}},System.Collections.Generic.List{``0},System.String)
  name: IsSupersetOf<T>(ICheckCollectionAssertion<List<T>>, List<T>, string?)
  href: api/Benday.Common.Testing.ListAssertionExtensions.html#Benday_Common_Testing_ListAssertionExtensions_IsSupersetOf__1_Benday_Common_Testing_ICheckCollectionAssertion_System_Collections_Generic_List___0___System_Collections_Generic_List___0__System_String_
  commentId: M:Benday.Common.Testing.ListAssertionExtensions.IsSupersetOf``1(Benday.Common.Testing.ICheckCollectionAssertion{System.Collections.Generic.List{``0}},System.Collections.Generic.List{``0},System.String)
  name.vb: IsSupersetOf(Of T)(ICheckCollectionAssertion(Of List(Of T)), List(Of T), String)
  fullName: Benday.Common.Testing.ListAssertionExtensions.IsSupersetOf<T>(Benday.Common.Testing.ICheckCollectionAssertion<System.Collections.Generic.List<T>>, System.Collections.Generic.List<T>, string?)
  fullName.vb: Benday.Common.Testing.ListAssertionExtensions.IsSupersetOf(Of T)(Benday.Common.Testing.ICheckCollectionAssertion(Of System.Collections.Generic.List(Of T)), System.Collections.Generic.List(Of T), String)
  nameWithType: ListAssertionExtensions.IsSupersetOf<T>(ICheckCollectionAssertion<List<T>>, List<T>, string?)
  nameWithType.vb: ListAssertionExtensions.IsSupersetOf(Of T)(ICheckCollectionAssertion(Of List(Of T)), List(Of T), String)
- uid: Benday.Common.Testing.MockCreationResult`1
  name: MockCreationResult<T>
  href: api/Benday.Common.Testing.MockCreationResult-1.html
  commentId: T:Benday.Common.Testing.MockCreationResult`1
  name.vb: MockCreationResult(Of T)
  fullName: Benday.Common.Testing.MockCreationResult<T>
  fullName.vb: Benday.Common.Testing.MockCreationResult(Of T)
  nameWithType: MockCreationResult<T>
  nameWithType.vb: MockCreationResult(Of T)
- uid: Benday.Common.Testing.MockCreationResult`1.GetMock*
  name: GetMock
  href: api/Benday.Common.Testing.MockCreationResult-1.html#Benday_Common_Testing_MockCreationResult_1_GetMock_
  commentId: Overload:Benday.Common.Testing.MockCreationResult`1.GetMock
  isSpec: "True"
  fullName: Benday.Common.Testing.MockCreationResult<T>.GetMock
  fullName.vb: Benday.Common.Testing.MockCreationResult(Of T).GetMock
  nameWithType: MockCreationResult<T>.GetMock
  nameWithType.vb: MockCreationResult(Of T).GetMock
- uid: Benday.Common.Testing.MockCreationResult`1.GetMock``1
  name: GetMock<TMock>()
  href: api/Benday.Common.Testing.MockCreationResult-1.html#Benday_Common_Testing_MockCreationResult_1_GetMock__1
  commentId: M:Benday.Common.Testing.MockCreationResult`1.GetMock``1
  name.vb: GetMock(Of TMock)()
  fullName: Benday.Common.Testing.MockCreationResult<T>.GetMock<TMock>()
  fullName.vb: Benday.Common.Testing.MockCreationResult(Of T).GetMock(Of TMock)()
  nameWithType: MockCreationResult<T>.GetMock<TMock>()
  nameWithType.vb: MockCreationResult(Of T).GetMock(Of TMock)()
- uid: Benday.Common.Testing.MockCreationResult`1.GetRequiredMock*
  name: GetRequiredMock
  href: api/Benday.Common.Testing.MockCreationResult-1.html#Benday_Common_Testing_MockCreationResult_1_GetRequiredMock_
  commentId: Overload:Benday.Common.Testing.MockCreationResult`1.GetRequiredMock
  isSpec: "True"
  fullName: Benday.Common.Testing.MockCreationResult<T>.GetRequiredMock
  fullName.vb: Benday.Common.Testing.MockCreationResult(Of T).GetRequiredMock
  nameWithType: MockCreationResult<T>.GetRequiredMock
  nameWithType.vb: MockCreationResult(Of T).GetRequiredMock
- uid: Benday.Common.Testing.MockCreationResult`1.GetRequiredMock``1
  name: GetRequiredMock<TMock>()
  href: api/Benday.Common.Testing.MockCreationResult-1.html#Benday_Common_Testing_MockCreationResult_1_GetRequiredMock__1
  commentId: M:Benday.Common.Testing.MockCreationResult`1.GetRequiredMock``1
  name.vb: GetRequiredMock(Of TMock)()
  fullName: Benday.Common.Testing.MockCreationResult<T>.GetRequiredMock<TMock>()
  fullName.vb: Benday.Common.Testing.MockCreationResult(Of T).GetRequiredMock(Of TMock)()
  nameWithType: MockCreationResult<T>.GetRequiredMock<TMock>()
  nameWithType.vb: MockCreationResult(Of T).GetRequiredMock(Of TMock)()
- uid: Benday.Common.Testing.MockCreationResult`1.Instance
  name: Instance
  href: api/Benday.Common.Testing.MockCreationResult-1.html#Benday_Common_Testing_MockCreationResult_1_Instance
  commentId: P:Benday.Common.Testing.MockCreationResult`1.Instance
  fullName: Benday.Common.Testing.MockCreationResult<T>.Instance
  fullName.vb: Benday.Common.Testing.MockCreationResult(Of T).Instance
  nameWithType: MockCreationResult<T>.Instance
  nameWithType.vb: MockCreationResult(Of T).Instance
- uid: Benday.Common.Testing.MockCreationResult`1.Instance*
  name: Instance
  href: api/Benday.Common.Testing.MockCreationResult-1.html#Benday_Common_Testing_MockCreationResult_1_Instance_
  commentId: Overload:Benday.Common.Testing.MockCreationResult`1.Instance
  isSpec: "True"
  fullName: Benday.Common.Testing.MockCreationResult<T>.Instance
  fullName.vb: Benday.Common.Testing.MockCreationResult(Of T).Instance
  nameWithType: MockCreationResult<T>.Instance
  nameWithType.vb: MockCreationResult(Of T).Instance
- uid: Benday.Common.Testing.MockCreationResult`1.Mocks
  name: Mocks
  href: api/Benday.Common.Testing.MockCreationResult-1.html#Benday_Common_Testing_MockCreationResult_1_Mocks
  commentId: P:Benday.Common.Testing.MockCreationResult`1.Mocks
  fullName: Benday.Common.Testing.MockCreationResult<T>.Mocks
  fullName.vb: Benday.Common.Testing.MockCreationResult(Of T).Mocks
  nameWithType: MockCreationResult<T>.Mocks
  nameWithType.vb: MockCreationResult(Of T).Mocks
- uid: Benday.Common.Testing.MockCreationResult`1.Mocks*
  name: Mocks
  href: api/Benday.Common.Testing.MockCreationResult-1.html#Benday_Common_Testing_MockCreationResult_1_Mocks_
  commentId: Overload:Benday.Common.Testing.MockCreationResult`1.Mocks
  isSpec: "True"
  fullName: Benday.Common.Testing.MockCreationResult<T>.Mocks
  fullName.vb: Benday.Common.Testing.MockCreationResult(Of T).Mocks
  nameWithType: MockCreationResult<T>.Mocks
  nameWithType.vb: MockCreationResult(Of T).Mocks
- uid: Benday.Common.Testing.MockUtility
  name: MockUtility
  href: api/Benday.Common.Testing.MockUtility.html
  commentId: T:Benday.Common.Testing.MockUtility
  fullName: Benday.Common.Testing.MockUtility
  nameWithType: MockUtility
- uid: Benday.Common.Testing.MockUtility.CreateInstance*
  name: CreateInstance
  href: api/Benday.Common.Testing.MockUtility.html#Benday_Common_Testing_MockUtility_CreateInstance_
  commentId: Overload:Benday.Common.Testing.MockUtility.CreateInstance
  isSpec: "True"
  fullName: Benday.Common.Testing.MockUtility.CreateInstance
  nameWithType: MockUtility.CreateInstance
- uid: Benday.Common.Testing.MockUtility.CreateInstance``1
  name: CreateInstance<T>()
  href: api/Benday.Common.Testing.MockUtility.html#Benday_Common_Testing_MockUtility_CreateInstance__1
  commentId: M:Benday.Common.Testing.MockUtility.CreateInstance``1
  name.vb: CreateInstance(Of T)()
  fullName: Benday.Common.Testing.MockUtility.CreateInstance<T>()
  fullName.vb: Benday.Common.Testing.MockUtility.CreateInstance(Of T)()
  nameWithType: MockUtility.CreateInstance<T>()
  nameWithType.vb: MockUtility.CreateInstance(Of T)()
- uid: Benday.Common.Testing.NullableStringAssertionExtensions
  name: NullableStringAssertionExtensions
  href: api/Benday.Common.Testing.NullableStringAssertionExtensions.html
  commentId: T:Benday.Common.Testing.NullableStringAssertionExtensions
  fullName: Benday.Common.Testing.NullableStringAssertionExtensions
  nameWithType: NullableStringAssertionExtensions
- uid: Benday.Common.Testing.NullableStringAssertionExtensions.Contains(Benday.Common.Testing.ICheckAssertionForNullableType{System.String},System.String,System.String)
  name: Contains(ICheckAssertionForNullableType<string?>, string, string?)
  href: api/Benday.Common.Testing.NullableStringAssertionExtensions.html#Benday_Common_Testing_NullableStringAssertionExtensions_Contains_Benday_Common_Testing_ICheckAssertionForNullableType_System_String__System_String_System_String_
  commentId: M:Benday.Common.Testing.NullableStringAssertionExtensions.Contains(Benday.Common.Testing.ICheckAssertionForNullableType{System.String},System.String,System.String)
  name.vb: Contains(ICheckAssertionForNullableType(Of String), String, String)
  fullName: Benday.Common.Testing.NullableStringAssertionExtensions.Contains(Benday.Common.Testing.ICheckAssertionForNullableType<string?>, string, string?)
  fullName.vb: Benday.Common.Testing.NullableStringAssertionExtensions.Contains(Benday.Common.Testing.ICheckAssertionForNullableType(Of String), String, String)
  nameWithType: NullableStringAssertionExtensions.Contains(ICheckAssertionForNullableType<string?>, string, string?)
  nameWithType.vb: NullableStringAssertionExtensions.Contains(ICheckAssertionForNullableType(Of String), String, String)
- uid: Benday.Common.Testing.NullableStringAssertionExtensions.Contains*
  name: Contains
  href: api/Benday.Common.Testing.NullableStringAssertionExtensions.html#Benday_Common_Testing_NullableStringAssertionExtensions_Contains_
  commentId: Overload:Benday.Common.Testing.NullableStringAssertionExtensions.Contains
  isSpec: "True"
  fullName: Benday.Common.Testing.NullableStringAssertionExtensions.Contains
  nameWithType: NullableStringAssertionExtensions.Contains
- uid: Benday.Common.Testing.NullableStringAssertionExtensions.ContainsCaseInsensitive(Benday.Common.Testing.ICheckAssertionForNullableType{System.String},System.String,System.String)
  name: ContainsCaseInsensitive(ICheckAssertionForNullableType<string?>, string, string?)
  href: api/Benday.Common.Testing.NullableStringAssertionExtensions.html#Benday_Common_Testing_NullableStringAssertionExtensions_ContainsCaseInsensitive_Benday_Common_Testing_ICheckAssertionForNullableType_System_String__System_String_System_String_
  commentId: M:Benday.Common.Testing.NullableStringAssertionExtensions.ContainsCaseInsensitive(Benday.Common.Testing.ICheckAssertionForNullableType{System.String},System.String,System.String)
  name.vb: ContainsCaseInsensitive(ICheckAssertionForNullableType(Of String), String, String)
  fullName: Benday.Common.Testing.NullableStringAssertionExtensions.ContainsCaseInsensitive(Benday.Common.Testing.ICheckAssertionForNullableType<string?>, string, string?)
  fullName.vb: Benday.Common.Testing.NullableStringAssertionExtensions.ContainsCaseInsensitive(Benday.Common.Testing.ICheckAssertionForNullableType(Of String), String, String)
  nameWithType: NullableStringAssertionExtensions.ContainsCaseInsensitive(ICheckAssertionForNullableType<string?>, string, string?)
  nameWithType.vb: NullableStringAssertionExtensions.ContainsCaseInsensitive(ICheckAssertionForNullableType(Of String), String, String)
- uid: Benday.Common.Testing.NullableStringAssertionExtensions.ContainsCaseInsensitive*
  name: ContainsCaseInsensitive
  href: api/Benday.Common.Testing.NullableStringAssertionExtensions.html#Benday_Common_Testing_NullableStringAssertionExtensions_ContainsCaseInsensitive_
  commentId: Overload:Benday.Common.Testing.NullableStringAssertionExtensions.ContainsCaseInsensitive
  isSpec: "True"
  fullName: Benday.Common.Testing.NullableStringAssertionExtensions.ContainsCaseInsensitive
  nameWithType: NullableStringAssertionExtensions.ContainsCaseInsensitive
- uid: Benday.Common.Testing.NullableStringAssertionExtensions.DoesNotContain(Benday.Common.Testing.ICheckAssertionForNullableType{System.String},System.String,System.String)
  name: DoesNotContain(ICheckAssertionForNullableType<string?>, string, string?)
  href: api/Benday.Common.Testing.NullableStringAssertionExtensions.html#Benday_Common_Testing_NullableStringAssertionExtensions_DoesNotContain_Benday_Common_Testing_ICheckAssertionForNullableType_System_String__System_String_System_String_
  commentId: M:Benday.Common.Testing.NullableStringAssertionExtensions.DoesNotContain(Benday.Common.Testing.ICheckAssertionForNullableType{System.String},System.String,System.String)
  name.vb: DoesNotContain(ICheckAssertionForNullableType(Of String), String, String)
  fullName: Benday.Common.Testing.NullableStringAssertionExtensions.DoesNotContain(Benday.Common.Testing.ICheckAssertionForNullableType<string?>, string, string?)
  fullName.vb: Benday.Common.Testing.NullableStringAssertionExtensions.DoesNotContain(Benday.Common.Testing.ICheckAssertionForNullableType(Of String), String, String)
  nameWithType: NullableStringAssertionExtensions.DoesNotContain(ICheckAssertionForNullableType<string?>, string, string?)
  nameWithType.vb: NullableStringAssertionExtensions.DoesNotContain(ICheckAssertionForNullableType(Of String), String, String)
- uid: Benday.Common.Testing.NullableStringAssertionExtensions.DoesNotContain*
  name: DoesNotContain
  href: api/Benday.Common.Testing.NullableStringAssertionExtensions.html#Benday_Common_Testing_NullableStringAssertionExtensions_DoesNotContain_
  commentId: Overload:Benday.Common.Testing.NullableStringAssertionExtensions.DoesNotContain
  isSpec: "True"
  fullName: Benday.Common.Testing.NullableStringAssertionExtensions.DoesNotContain
  nameWithType: NullableStringAssertionExtensions.DoesNotContain
- uid: Benday.Common.Testing.NullableStringAssertionExtensions.DoesNotContainCaseInsensitive(Benday.Common.Testing.ICheckAssertionForNullableType{System.String},System.String,System.String)
  name: DoesNotContainCaseInsensitive(ICheckAssertionForNullableType<string?>, string, string?)
  href: api/Benday.Common.Testing.NullableStringAssertionExtensions.html#Benday_Common_Testing_NullableStringAssertionExtensions_DoesNotContainCaseInsensitive_Benday_Common_Testing_ICheckAssertionForNullableType_System_String__System_String_System_String_
  commentId: M:Benday.Common.Testing.NullableStringAssertionExtensions.DoesNotContainCaseInsensitive(Benday.Common.Testing.ICheckAssertionForNullableType{System.String},System.String,System.String)
  name.vb: DoesNotContainCaseInsensitive(ICheckAssertionForNullableType(Of String), String, String)
  fullName: Benday.Common.Testing.NullableStringAssertionExtensions.DoesNotContainCaseInsensitive(Benday.Common.Testing.ICheckAssertionForNullableType<string?>, string, string?)
  fullName.vb: Benday.Common.Testing.NullableStringAssertionExtensions.DoesNotContainCaseInsensitive(Benday.Common.Testing.ICheckAssertionForNullableType(Of String), String, String)
  nameWithType: NullableStringAssertionExtensions.DoesNotContainCaseInsensitive(ICheckAssertionForNullableType<string?>, string, string?)
  nameWithType.vb: NullableStringAssertionExtensions.DoesNotContainCaseInsensitive(ICheckAssertionForNullableType(Of String), String, String)
- uid: Benday.Common.Testing.NullableStringAssertionExtensions.DoesNotContainCaseInsensitive*
  name: DoesNotContainCaseInsensitive
  href: api/Benday.Common.Testing.NullableStringAssertionExtensions.html#Benday_Common_Testing_NullableStringAssertionExtensions_DoesNotContainCaseInsensitive_
  commentId: Overload:Benday.Common.Testing.NullableStringAssertionExtensions.DoesNotContainCaseInsensitive
  isSpec: "True"
  fullName: Benday.Common.Testing.NullableStringAssertionExtensions.DoesNotContainCaseInsensitive
  nameWithType: NullableStringAssertionExtensions.DoesNotContainCaseInsensitive
- uid: Benday.Common.Testing.NullableStringAssertionExtensions.DoesNotEndWith(Benday.Common.Testing.ICheckAssertionForNullableType{System.String},System.String,System.String)
  name: DoesNotEndWith(ICheckAssertionForNullableType<string?>, string, string?)
  href: api/Benday.Common.Testing.NullableStringAssertionExtensions.html#Benday_Common_Testing_NullableStringAssertionExtensions_DoesNotEndWith_Benday_Common_Testing_ICheckAssertionForNullableType_System_String__System_String_System_String_
  commentId: M:Benday.Common.Testing.NullableStringAssertionExtensions.DoesNotEndWith(Benday.Common.Testing.ICheckAssertionForNullableType{System.String},System.String,System.String)
  name.vb: DoesNotEndWith(ICheckAssertionForNullableType(Of String), String, String)
  fullName: Benday.Common.Testing.NullableStringAssertionExtensions.DoesNotEndWith(Benday.Common.Testing.ICheckAssertionForNullableType<string?>, string, string?)
  fullName.vb: Benday.Common.Testing.NullableStringAssertionExtensions.DoesNotEndWith(Benday.Common.Testing.ICheckAssertionForNullableType(Of String), String, String)
  nameWithType: NullableStringAssertionExtensions.DoesNotEndWith(ICheckAssertionForNullableType<string?>, string, string?)
  nameWithType.vb: NullableStringAssertionExtensions.DoesNotEndWith(ICheckAssertionForNullableType(Of String), String, String)
- uid: Benday.Common.Testing.NullableStringAssertionExtensions.DoesNotEndWith*
  name: DoesNotEndWith
  href: api/Benday.Common.Testing.NullableStringAssertionExtensions.html#Benday_Common_Testing_NullableStringAssertionExtensions_DoesNotEndWith_
  commentId: Overload:Benday.Common.Testing.NullableStringAssertionExtensions.DoesNotEndWith
  isSpec: "True"
  fullName: Benday.Common.Testing.NullableStringAssertionExtensions.DoesNotEndWith
  nameWithType: NullableStringAssertionExtensions.DoesNotEndWith
- uid: Benday.Common.Testing.NullableStringAssertionExtensions.DoesNotEndWithCaseInsensitive(Benday.Common.Testing.ICheckAssertionForNullableType{System.String},System.String,System.String)
  name: DoesNotEndWithCaseInsensitive(ICheckAssertionForNullableType<string?>, string, string?)
  href: api/Benday.Common.Testing.NullableStringAssertionExtensions.html#Benday_Common_Testing_NullableStringAssertionExtensions_DoesNotEndWithCaseInsensitive_Benday_Common_Testing_ICheckAssertionForNullableType_System_String__System_String_System_String_
  commentId: M:Benday.Common.Testing.NullableStringAssertionExtensions.DoesNotEndWithCaseInsensitive(Benday.Common.Testing.ICheckAssertionForNullableType{System.String},System.String,System.String)
  name.vb: DoesNotEndWithCaseInsensitive(ICheckAssertionForNullableType(Of String), String, String)
  fullName: Benday.Common.Testing.NullableStringAssertionExtensions.DoesNotEndWithCaseInsensitive(Benday.Common.Testing.ICheckAssertionForNullableType<string?>, string, string?)
  fullName.vb: Benday.Common.Testing.NullableStringAssertionExtensions.DoesNotEndWithCaseInsensitive(Benday.Common.Testing.ICheckAssertionForNullableType(Of String), String, String)
  nameWithType: NullableStringAssertionExtensions.DoesNotEndWithCaseInsensitive(ICheckAssertionForNullableType<string?>, string, string?)
  nameWithType.vb: NullableStringAssertionExtensions.DoesNotEndWithCaseInsensitive(ICheckAssertionForNullableType(Of String), String, String)
- uid: Benday.Common.Testing.NullableStringAssertionExtensions.DoesNotEndWithCaseInsensitive*
  name: DoesNotEndWithCaseInsensitive
  href: api/Benday.Common.Testing.NullableStringAssertionExtensions.html#Benday_Common_Testing_NullableStringAssertionExtensions_DoesNotEndWithCaseInsensitive_
  commentId: Overload:Benday.Common.Testing.NullableStringAssertionExtensions.DoesNotEndWithCaseInsensitive
  isSpec: "True"
  fullName: Benday.Common.Testing.NullableStringAssertionExtensions.DoesNotEndWithCaseInsensitive
  nameWithType: NullableStringAssertionExtensions.DoesNotEndWithCaseInsensitive
- uid: Benday.Common.Testing.NullableStringAssertionExtensions.DoesNotStartWith(Benday.Common.Testing.ICheckAssertionForNullableType{System.String},System.String,System.String)
  name: DoesNotStartWith(ICheckAssertionForNullableType<string?>, string, string?)
  href: api/Benday.Common.Testing.NullableStringAssertionExtensions.html#Benday_Common_Testing_NullableStringAssertionExtensions_DoesNotStartWith_Benday_Common_Testing_ICheckAssertionForNullableType_System_String__System_String_System_String_
  commentId: M:Benday.Common.Testing.NullableStringAssertionExtensions.DoesNotStartWith(Benday.Common.Testing.ICheckAssertionForNullableType{System.String},System.String,System.String)
  name.vb: DoesNotStartWith(ICheckAssertionForNullableType(Of String), String, String)
  fullName: Benday.Common.Testing.NullableStringAssertionExtensions.DoesNotStartWith(Benday.Common.Testing.ICheckAssertionForNullableType<string?>, string, string?)
  fullName.vb: Benday.Common.Testing.NullableStringAssertionExtensions.DoesNotStartWith(Benday.Common.Testing.ICheckAssertionForNullableType(Of String), String, String)
  nameWithType: NullableStringAssertionExtensions.DoesNotStartWith(ICheckAssertionForNullableType<string?>, string, string?)
  nameWithType.vb: NullableStringAssertionExtensions.DoesNotStartWith(ICheckAssertionForNullableType(Of String), String, String)
- uid: Benday.Common.Testing.NullableStringAssertionExtensions.DoesNotStartWith*
  name: DoesNotStartWith
  href: api/Benday.Common.Testing.NullableStringAssertionExtensions.html#Benday_Common_Testing_NullableStringAssertionExtensions_DoesNotStartWith_
  commentId: Overload:Benday.Common.Testing.NullableStringAssertionExtensions.DoesNotStartWith
  isSpec: "True"
  fullName: Benday.Common.Testing.NullableStringAssertionExtensions.DoesNotStartWith
  nameWithType: NullableStringAssertionExtensions.DoesNotStartWith
- uid: Benday.Common.Testing.NullableStringAssertionExtensions.DoesNotStartWithCaseInsensitive(Benday.Common.Testing.ICheckAssertionForNullableType{System.String},System.String,System.String)
  name: DoesNotStartWithCaseInsensitive(ICheckAssertionForNullableType<string?>, string, string?)
  href: api/Benday.Common.Testing.NullableStringAssertionExtensions.html#Benday_Common_Testing_NullableStringAssertionExtensions_DoesNotStartWithCaseInsensitive_Benday_Common_Testing_ICheckAssertionForNullableType_System_String__System_String_System_String_
  commentId: M:Benday.Common.Testing.NullableStringAssertionExtensions.DoesNotStartWithCaseInsensitive(Benday.Common.Testing.ICheckAssertionForNullableType{System.String},System.String,System.String)
  name.vb: DoesNotStartWithCaseInsensitive(ICheckAssertionForNullableType(Of String), String, String)
  fullName: Benday.Common.Testing.NullableStringAssertionExtensions.DoesNotStartWithCaseInsensitive(Benday.Common.Testing.ICheckAssertionForNullableType<string?>, string, string?)
  fullName.vb: Benday.Common.Testing.NullableStringAssertionExtensions.DoesNotStartWithCaseInsensitive(Benday.Common.Testing.ICheckAssertionForNullableType(Of String), String, String)
  nameWithType: NullableStringAssertionExtensions.DoesNotStartWithCaseInsensitive(ICheckAssertionForNullableType<string?>, string, string?)
  nameWithType.vb: NullableStringAssertionExtensions.DoesNotStartWithCaseInsensitive(ICheckAssertionForNullableType(Of String), String, String)
- uid: Benday.Common.Testing.NullableStringAssertionExtensions.DoesNotStartWithCaseInsensitive*
  name: DoesNotStartWithCaseInsensitive
  href: api/Benday.Common.Testing.NullableStringAssertionExtensions.html#Benday_Common_Testing_NullableStringAssertionExtensions_DoesNotStartWithCaseInsensitive_
  commentId: Overload:Benday.Common.Testing.NullableStringAssertionExtensions.DoesNotStartWithCaseInsensitive
  isSpec: "True"
  fullName: Benday.Common.Testing.NullableStringAssertionExtensions.DoesNotStartWithCaseInsensitive
  nameWithType: NullableStringAssertionExtensions.DoesNotStartWithCaseInsensitive
- uid: Benday.Common.Testing.NullableStringAssertionExtensions.EndsWith(Benday.Common.Testing.ICheckAssertionForNullableType{System.String},System.String,System.String)
  name: EndsWith(ICheckAssertionForNullableType<string?>, string, string?)
  href: api/Benday.Common.Testing.NullableStringAssertionExtensions.html#Benday_Common_Testing_NullableStringAssertionExtensions_EndsWith_Benday_Common_Testing_ICheckAssertionForNullableType_System_String__System_String_System_String_
  commentId: M:Benday.Common.Testing.NullableStringAssertionExtensions.EndsWith(Benday.Common.Testing.ICheckAssertionForNullableType{System.String},System.String,System.String)
  name.vb: EndsWith(ICheckAssertionForNullableType(Of String), String, String)
  fullName: Benday.Common.Testing.NullableStringAssertionExtensions.EndsWith(Benday.Common.Testing.ICheckAssertionForNullableType<string?>, string, string?)
  fullName.vb: Benday.Common.Testing.NullableStringAssertionExtensions.EndsWith(Benday.Common.Testing.ICheckAssertionForNullableType(Of String), String, String)
  nameWithType: NullableStringAssertionExtensions.EndsWith(ICheckAssertionForNullableType<string?>, string, string?)
  nameWithType.vb: NullableStringAssertionExtensions.EndsWith(ICheckAssertionForNullableType(Of String), String, String)
- uid: Benday.Common.Testing.NullableStringAssertionExtensions.EndsWith*
  name: EndsWith
  href: api/Benday.Common.Testing.NullableStringAssertionExtensions.html#Benday_Common_Testing_NullableStringAssertionExtensions_EndsWith_
  commentId: Overload:Benday.Common.Testing.NullableStringAssertionExtensions.EndsWith
  isSpec: "True"
  fullName: Benday.Common.Testing.NullableStringAssertionExtensions.EndsWith
  nameWithType: NullableStringAssertionExtensions.EndsWith
- uid: Benday.Common.Testing.NullableStringAssertionExtensions.EndsWithCaseInsensitive(Benday.Common.Testing.ICheckAssertionForNullableType{System.String},System.String,System.String)
  name: EndsWithCaseInsensitive(ICheckAssertionForNullableType<string?>, string, string?)
  href: api/Benday.Common.Testing.NullableStringAssertionExtensions.html#Benday_Common_Testing_NullableStringAssertionExtensions_EndsWithCaseInsensitive_Benday_Common_Testing_ICheckAssertionForNullableType_System_String__System_String_System_String_
  commentId: M:Benday.Common.Testing.NullableStringAssertionExtensions.EndsWithCaseInsensitive(Benday.Common.Testing.ICheckAssertionForNullableType{System.String},System.String,System.String)
  name.vb: EndsWithCaseInsensitive(ICheckAssertionForNullableType(Of String), String, String)
  fullName: Benday.Common.Testing.NullableStringAssertionExtensions.EndsWithCaseInsensitive(Benday.Common.Testing.ICheckAssertionForNullableType<string?>, string, string?)
  fullName.vb: Benday.Common.Testing.NullableStringAssertionExtensions.EndsWithCaseInsensitive(Benday.Common.Testing.ICheckAssertionForNullableType(Of String), String, String)
  nameWithType: NullableStringAssertionExtensions.EndsWithCaseInsensitive(ICheckAssertionForNullableType<string?>, string, string?)
  nameWithType.vb: NullableStringAssertionExtensions.EndsWithCaseInsensitive(ICheckAssertionForNullableType(Of String), String, String)
- uid: Benday.Common.Testing.NullableStringAssertionExtensions.EndsWithCaseInsensitive*
  name: EndsWithCaseInsensitive
  href: api/Benday.Common.Testing.NullableStringAssertionExtensions.html#Benday_Common_Testing_NullableStringAssertionExtensions_EndsWithCaseInsensitive_
  commentId: Overload:Benday.Common.Testing.NullableStringAssertionExtensions.EndsWithCaseInsensitive
  isSpec: "True"
  fullName: Benday.Common.Testing.NullableStringAssertionExtensions.EndsWithCaseInsensitive
  nameWithType: NullableStringAssertionExtensions.EndsWithCaseInsensitive
- uid: Benday.Common.Testing.NullableStringAssertionExtensions.IsEqualCaseInsensitiveTo(Benday.Common.Testing.ICheckAssertionForNullableType{System.String},System.String,System.String)
  name: IsEqualCaseInsensitiveTo(ICheckAssertionForNullableType<string?>, string?, string?)
  href: api/Benday.Common.Testing.NullableStringAssertionExtensions.html#Benday_Common_Testing_NullableStringAssertionExtensions_IsEqualCaseInsensitiveTo_Benday_Common_Testing_ICheckAssertionForNullableType_System_String__System_String_System_String_
  commentId: M:Benday.Common.Testing.NullableStringAssertionExtensions.IsEqualCaseInsensitiveTo(Benday.Common.Testing.ICheckAssertionForNullableType{System.String},System.String,System.String)
  name.vb: IsEqualCaseInsensitiveTo(ICheckAssertionForNullableType(Of String), String, String)
  fullName: Benday.Common.Testing.NullableStringAssertionExtensions.IsEqualCaseInsensitiveTo(Benday.Common.Testing.ICheckAssertionForNullableType<string?>, string?, string?)
  fullName.vb: Benday.Common.Testing.NullableStringAssertionExtensions.IsEqualCaseInsensitiveTo(Benday.Common.Testing.ICheckAssertionForNullableType(Of String), String, String)
  nameWithType: NullableStringAssertionExtensions.IsEqualCaseInsensitiveTo(ICheckAssertionForNullableType<string?>, string?, string?)
  nameWithType.vb: NullableStringAssertionExtensions.IsEqualCaseInsensitiveTo(ICheckAssertionForNullableType(Of String), String, String)
- uid: Benday.Common.Testing.NullableStringAssertionExtensions.IsEqualCaseInsensitiveTo*
  name: IsEqualCaseInsensitiveTo
  href: api/Benday.Common.Testing.NullableStringAssertionExtensions.html#Benday_Common_Testing_NullableStringAssertionExtensions_IsEqualCaseInsensitiveTo_
  commentId: Overload:Benday.Common.Testing.NullableStringAssertionExtensions.IsEqualCaseInsensitiveTo
  isSpec: "True"
  fullName: Benday.Common.Testing.NullableStringAssertionExtensions.IsEqualCaseInsensitiveTo
  nameWithType: NullableStringAssertionExtensions.IsEqualCaseInsensitiveTo
- uid: Benday.Common.Testing.NullableStringAssertionExtensions.IsEqualTo(Benday.Common.Testing.ICheckAssertionForNullableType{System.String},System.String,System.String)
  name: IsEqualTo(ICheckAssertionForNullableType<string?>, string?, string?)
  href: api/Benday.Common.Testing.NullableStringAssertionExtensions.html#Benday_Common_Testing_NullableStringAssertionExtensions_IsEqualTo_Benday_Common_Testing_ICheckAssertionForNullableType_System_String__System_String_System_String_
  commentId: M:Benday.Common.Testing.NullableStringAssertionExtensions.IsEqualTo(Benday.Common.Testing.ICheckAssertionForNullableType{System.String},System.String,System.String)
  name.vb: IsEqualTo(ICheckAssertionForNullableType(Of String), String, String)
  fullName: Benday.Common.Testing.NullableStringAssertionExtensions.IsEqualTo(Benday.Common.Testing.ICheckAssertionForNullableType<string?>, string?, string?)
  fullName.vb: Benday.Common.Testing.NullableStringAssertionExtensions.IsEqualTo(Benday.Common.Testing.ICheckAssertionForNullableType(Of String), String, String)
  nameWithType: NullableStringAssertionExtensions.IsEqualTo(ICheckAssertionForNullableType<string?>, string?, string?)
  nameWithType.vb: NullableStringAssertionExtensions.IsEqualTo(ICheckAssertionForNullableType(Of String), String, String)
- uid: Benday.Common.Testing.NullableStringAssertionExtensions.IsEqualTo*
  name: IsEqualTo
  href: api/Benday.Common.Testing.NullableStringAssertionExtensions.html#Benday_Common_Testing_NullableStringAssertionExtensions_IsEqualTo_
  commentId: Overload:Benday.Common.Testing.NullableStringAssertionExtensions.IsEqualTo
  isSpec: "True"
  fullName: Benday.Common.Testing.NullableStringAssertionExtensions.IsEqualTo
  nameWithType: NullableStringAssertionExtensions.IsEqualTo
- uid: Benday.Common.Testing.NullableStringAssertionExtensions.IsNotEqualTo(Benday.Common.Testing.ICheckAssertionForNullableType{System.String},System.String,System.String)
  name: IsNotEqualTo(ICheckAssertionForNullableType<string?>, string?, string?)
  href: api/Benday.Common.Testing.NullableStringAssertionExtensions.html#Benday_Common_Testing_NullableStringAssertionExtensions_IsNotEqualTo_Benday_Common_Testing_ICheckAssertionForNullableType_System_String__System_String_System_String_
  commentId: M:Benday.Common.Testing.NullableStringAssertionExtensions.IsNotEqualTo(Benday.Common.Testing.ICheckAssertionForNullableType{System.String},System.String,System.String)
  name.vb: IsNotEqualTo(ICheckAssertionForNullableType(Of String), String, String)
  fullName: Benday.Common.Testing.NullableStringAssertionExtensions.IsNotEqualTo(Benday.Common.Testing.ICheckAssertionForNullableType<string?>, string?, string?)
  fullName.vb: Benday.Common.Testing.NullableStringAssertionExtensions.IsNotEqualTo(Benday.Common.Testing.ICheckAssertionForNullableType(Of String), String, String)
  nameWithType: NullableStringAssertionExtensions.IsNotEqualTo(ICheckAssertionForNullableType<string?>, string?, string?)
  nameWithType.vb: NullableStringAssertionExtensions.IsNotEqualTo(ICheckAssertionForNullableType(Of String), String, String)
- uid: Benday.Common.Testing.NullableStringAssertionExtensions.IsNotEqualTo*
  name: IsNotEqualTo
  href: api/Benday.Common.Testing.NullableStringAssertionExtensions.html#Benday_Common_Testing_NullableStringAssertionExtensions_IsNotEqualTo_
  commentId: Overload:Benday.Common.Testing.NullableStringAssertionExtensions.IsNotEqualTo
  isSpec: "True"
  fullName: Benday.Common.Testing.NullableStringAssertionExtensions.IsNotEqualTo
  nameWithType: NullableStringAssertionExtensions.IsNotEqualTo
- uid: Benday.Common.Testing.NullableStringAssertionExtensions.IsNotNullOrEmpty(Benday.Common.Testing.ICheckAssertionForNullableType{System.String},System.String)
  name: IsNotNullOrEmpty(ICheckAssertionForNullableType<string?>, string?)
  href: api/Benday.Common.Testing.NullableStringAssertionExtensions.html#Benday_Common_Testing_NullableStringAssertionExtensions_IsNotNullOrEmpty_Benday_Common_Testing_ICheckAssertionForNullableType_System_String__System_String_
  commentId: M:Benday.Common.Testing.NullableStringAssertionExtensions.IsNotNullOrEmpty(Benday.Common.Testing.ICheckAssertionForNullableType{System.String},System.String)
  name.vb: IsNotNullOrEmpty(ICheckAssertionForNullableType(Of String), String)
  fullName: Benday.Common.Testing.NullableStringAssertionExtensions.IsNotNullOrEmpty(Benday.Common.Testing.ICheckAssertionForNullableType<string?>, string?)
  fullName.vb: Benday.Common.Testing.NullableStringAssertionExtensions.IsNotNullOrEmpty(Benday.Common.Testing.ICheckAssertionForNullableType(Of String), String)
  nameWithType: NullableStringAssertionExtensions.IsNotNullOrEmpty(ICheckAssertionForNullableType<string?>, string?)
  nameWithType.vb: NullableStringAssertionExtensions.IsNotNullOrEmpty(ICheckAssertionForNullableType(Of String), String)
- uid: Benday.Common.Testing.NullableStringAssertionExtensions.IsNotNullOrEmpty*
  name: IsNotNullOrEmpty
  href: api/Benday.Common.Testing.NullableStringAssertionExtensions.html#Benday_Common_Testing_NullableStringAssertionExtensions_IsNotNullOrEmpty_
  commentId: Overload:Benday.Common.Testing.NullableStringAssertionExtensions.IsNotNullOrEmpty
  isSpec: "True"
  fullName: Benday.Common.Testing.NullableStringAssertionExtensions.IsNotNullOrEmpty
  nameWithType: NullableStringAssertionExtensions.IsNotNullOrEmpty
- uid: Benday.Common.Testing.NullableStringAssertionExtensions.IsNotNullOrWhitespace(Benday.Common.Testing.ICheckAssertionForNullableType{System.String},System.String)
  name: IsNotNullOrWhitespace(ICheckAssertionForNullableType<string?>, string?)
  href: api/Benday.Common.Testing.NullableStringAssertionExtensions.html#Benday_Common_Testing_NullableStringAssertionExtensions_IsNotNullOrWhitespace_Benday_Common_Testing_ICheckAssertionForNullableType_System_String__System_String_
  commentId: M:Benday.Common.Testing.NullableStringAssertionExtensions.IsNotNullOrWhitespace(Benday.Common.Testing.ICheckAssertionForNullableType{System.String},System.String)
  name.vb: IsNotNullOrWhitespace(ICheckAssertionForNullableType(Of String), String)
  fullName: Benday.Common.Testing.NullableStringAssertionExtensions.IsNotNullOrWhitespace(Benday.Common.Testing.ICheckAssertionForNullableType<string?>, string?)
  fullName.vb: Benday.Common.Testing.NullableStringAssertionExtensions.IsNotNullOrWhitespace(Benday.Common.Testing.ICheckAssertionForNullableType(Of String), String)
  nameWithType: NullableStringAssertionExtensions.IsNotNullOrWhitespace(ICheckAssertionForNullableType<string?>, string?)
  nameWithType.vb: NullableStringAssertionExtensions.IsNotNullOrWhitespace(ICheckAssertionForNullableType(Of String), String)
- uid: Benday.Common.Testing.NullableStringAssertionExtensions.IsNotNullOrWhitespace*
  name: IsNotNullOrWhitespace
  href: api/Benday.Common.Testing.NullableStringAssertionExtensions.html#Benday_Common_Testing_NullableStringAssertionExtensions_IsNotNullOrWhitespace_
  commentId: Overload:Benday.Common.Testing.NullableStringAssertionExtensions.IsNotNullOrWhitespace
  isSpec: "True"
  fullName: Benday.Common.Testing.NullableStringAssertionExtensions.IsNotNullOrWhitespace
  nameWithType: NullableStringAssertionExtensions.IsNotNullOrWhitespace
- uid: Benday.Common.Testing.NullableStringAssertionExtensions.StartsWith(Benday.Common.Testing.ICheckAssertionForNullableType{System.String},System.String,System.String)
  name: StartsWith(ICheckAssertionForNullableType<string?>, string, string?)
  href: api/Benday.Common.Testing.NullableStringAssertionExtensions.html#Benday_Common_Testing_NullableStringAssertionExtensions_StartsWith_Benday_Common_Testing_ICheckAssertionForNullableType_System_String__System_String_System_String_
  commentId: M:Benday.Common.Testing.NullableStringAssertionExtensions.StartsWith(Benday.Common.Testing.ICheckAssertionForNullableType{System.String},System.String,System.String)
  name.vb: StartsWith(ICheckAssertionForNullableType(Of String), String, String)
  fullName: Benday.Common.Testing.NullableStringAssertionExtensions.StartsWith(Benday.Common.Testing.ICheckAssertionForNullableType<string?>, string, string?)
  fullName.vb: Benday.Common.Testing.NullableStringAssertionExtensions.StartsWith(Benday.Common.Testing.ICheckAssertionForNullableType(Of String), String, String)
  nameWithType: NullableStringAssertionExtensions.StartsWith(ICheckAssertionForNullableType<string?>, string, string?)
  nameWithType.vb: NullableStringAssertionExtensions.StartsWith(ICheckAssertionForNullableType(Of String), String, String)
- uid: Benday.Common.Testing.NullableStringAssertionExtensions.StartsWith*
  name: StartsWith
  href: api/Benday.Common.Testing.NullableStringAssertionExtensions.html#Benday_Common_Testing_NullableStringAssertionExtensions_StartsWith_
  commentId: Overload:Benday.Common.Testing.NullableStringAssertionExtensions.StartsWith
  isSpec: "True"
  fullName: Benday.Common.Testing.NullableStringAssertionExtensions.StartsWith
  nameWithType: NullableStringAssertionExtensions.StartsWith
- uid: Benday.Common.Testing.NullableStringAssertionExtensions.StartsWithCaseInsensitive(Benday.Common.Testing.ICheckAssertionForNullableType{System.String},System.String,System.String)
  name: StartsWithCaseInsensitive(ICheckAssertionForNullableType<string?>, string, string?)
  href: api/Benday.Common.Testing.NullableStringAssertionExtensions.html#Benday_Common_Testing_NullableStringAssertionExtensions_StartsWithCaseInsensitive_Benday_Common_Testing_ICheckAssertionForNullableType_System_String__System_String_System_String_
  commentId: M:Benday.Common.Testing.NullableStringAssertionExtensions.StartsWithCaseInsensitive(Benday.Common.Testing.ICheckAssertionForNullableType{System.String},System.String,System.String)
  name.vb: StartsWithCaseInsensitive(ICheckAssertionForNullableType(Of String), String, String)
  fullName: Benday.Common.Testing.NullableStringAssertionExtensions.StartsWithCaseInsensitive(Benday.Common.Testing.ICheckAssertionForNullableType<string?>, string, string?)
  fullName.vb: Benday.Common.Testing.NullableStringAssertionExtensions.StartsWithCaseInsensitive(Benday.Common.Testing.ICheckAssertionForNullableType(Of String), String, String)
  nameWithType: NullableStringAssertionExtensions.StartsWithCaseInsensitive(ICheckAssertionForNullableType<string?>, string, string?)
  nameWithType.vb: NullableStringAssertionExtensions.StartsWithCaseInsensitive(ICheckAssertionForNullableType(Of String), String, String)
- uid: Benday.Common.Testing.NullableStringAssertionExtensions.StartsWithCaseInsensitive*
  name: StartsWithCaseInsensitive
  href: api/Benday.Common.Testing.NullableStringAssertionExtensions.html#Benday_Common_Testing_NullableStringAssertionExtensions_StartsWithCaseInsensitive_
  commentId: Overload:Benday.Common.Testing.NullableStringAssertionExtensions.StartsWithCaseInsensitive
  isSpec: "True"
  fullName: Benday.Common.Testing.NullableStringAssertionExtensions.StartsWithCaseInsensitive
  nameWithType: NullableStringAssertionExtensions.StartsWithCaseInsensitive
- uid: Benday.Common.Testing.StringAssertionExtensions
  name: StringAssertionExtensions
  href: api/Benday.Common.Testing.StringAssertionExtensions.html
  commentId: T:Benday.Common.Testing.StringAssertionExtensions
  fullName: Benday.Common.Testing.StringAssertionExtensions
  nameWithType: StringAssertionExtensions
- uid: Benday.Common.Testing.StringAssertionExtensions.AllItemsAreNotNull(Benday.Common.Testing.ICheckAssertionForNullableType{System.String[]})
  name: AllItemsAreNotNull(ICheckAssertionForNullableType<string?[]>)
  href: api/Benday.Common.Testing.StringAssertionExtensions.html#Benday_Common_Testing_StringAssertionExtensions_AllItemsAreNotNull_Benday_Common_Testing_ICheckAssertionForNullableType_System_String____
  commentId: M:Benday.Common.Testing.StringAssertionExtensions.AllItemsAreNotNull(Benday.Common.Testing.ICheckAssertionForNullableType{System.String[]})
  name.vb: AllItemsAreNotNull(ICheckAssertionForNullableType(Of String()))
  fullName: Benday.Common.Testing.StringAssertionExtensions.AllItemsAreNotNull(Benday.Common.Testing.ICheckAssertionForNullableType<string?[]>)
  fullName.vb: Benday.Common.Testing.StringAssertionExtensions.AllItemsAreNotNull(Benday.Common.Testing.ICheckAssertionForNullableType(Of String()))
  nameWithType: StringAssertionExtensions.AllItemsAreNotNull(ICheckAssertionForNullableType<string?[]>)
  nameWithType.vb: StringAssertionExtensions.AllItemsAreNotNull(ICheckAssertionForNullableType(Of String()))
- uid: Benday.Common.Testing.StringAssertionExtensions.AllItemsAreNotNull*
  name: AllItemsAreNotNull
  href: api/Benday.Common.Testing.StringAssertionExtensions.html#Benday_Common_Testing_StringAssertionExtensions_AllItemsAreNotNull_
  commentId: Overload:Benday.Common.Testing.StringAssertionExtensions.AllItemsAreNotNull
  isSpec: "True"
  fullName: Benday.Common.Testing.StringAssertionExtensions.AllItemsAreNotNull
  nameWithType: StringAssertionExtensions.AllItemsAreNotNull
- uid: Benday.Common.Testing.StringAssertionExtensions.Contains(Benday.Common.Testing.ICheckAssertion{System.String},System.String,System.String)
  name: Contains(ICheckAssertion<string>, string, string?)
  href: api/Benday.Common.Testing.StringAssertionExtensions.html#Benday_Common_Testing_StringAssertionExtensions_Contains_Benday_Common_Testing_ICheckAssertion_System_String__System_String_System_String_
  commentId: M:Benday.Common.Testing.StringAssertionExtensions.Contains(Benday.Common.Testing.ICheckAssertion{System.String},System.String,System.String)
  name.vb: Contains(ICheckAssertion(Of String), String, String)
  fullName: Benday.Common.Testing.StringAssertionExtensions.Contains(Benday.Common.Testing.ICheckAssertion<string>, string, string?)
  fullName.vb: Benday.Common.Testing.StringAssertionExtensions.Contains(Benday.Common.Testing.ICheckAssertion(Of String), String, String)
  nameWithType: StringAssertionExtensions.Contains(ICheckAssertion<string>, string, string?)
  nameWithType.vb: StringAssertionExtensions.Contains(ICheckAssertion(Of String), String, String)
- uid: Benday.Common.Testing.StringAssertionExtensions.Contains*
  name: Contains
  href: api/Benday.Common.Testing.StringAssertionExtensions.html#Benday_Common_Testing_StringAssertionExtensions_Contains_
  commentId: Overload:Benday.Common.Testing.StringAssertionExtensions.Contains
  isSpec: "True"
  fullName: Benday.Common.Testing.StringAssertionExtensions.Contains
  nameWithType: StringAssertionExtensions.Contains
- uid: Benday.Common.Testing.StringAssertionExtensions.ContainsCaseInsensitive(Benday.Common.Testing.ICheckAssertion{System.String},System.String,System.String)
  name: ContainsCaseInsensitive(ICheckAssertion<string>, string, string?)
  href: api/Benday.Common.Testing.StringAssertionExtensions.html#Benday_Common_Testing_StringAssertionExtensions_ContainsCaseInsensitive_Benday_Common_Testing_ICheckAssertion_System_String__System_String_System_String_
  commentId: M:Benday.Common.Testing.StringAssertionExtensions.ContainsCaseInsensitive(Benday.Common.Testing.ICheckAssertion{System.String},System.String,System.String)
  name.vb: ContainsCaseInsensitive(ICheckAssertion(Of String), String, String)
  fullName: Benday.Common.Testing.StringAssertionExtensions.ContainsCaseInsensitive(Benday.Common.Testing.ICheckAssertion<string>, string, string?)
  fullName.vb: Benday.Common.Testing.StringAssertionExtensions.ContainsCaseInsensitive(Benday.Common.Testing.ICheckAssertion(Of String), String, String)
  nameWithType: StringAssertionExtensions.ContainsCaseInsensitive(ICheckAssertion<string>, string, string?)
  nameWithType.vb: StringAssertionExtensions.ContainsCaseInsensitive(ICheckAssertion(Of String), String, String)
- uid: Benday.Common.Testing.StringAssertionExtensions.ContainsCaseInsensitive*
  name: ContainsCaseInsensitive
  href: api/Benday.Common.Testing.StringAssertionExtensions.html#Benday_Common_Testing_StringAssertionExtensions_ContainsCaseInsensitive_
  commentId: Overload:Benday.Common.Testing.StringAssertionExtensions.ContainsCaseInsensitive
  isSpec: "True"
  fullName: Benday.Common.Testing.StringAssertionExtensions.ContainsCaseInsensitive
  nameWithType: StringAssertionExtensions.ContainsCaseInsensitive
- uid: Benday.Common.Testing.StringAssertionExtensions.DoesNotContain(Benday.Common.Testing.ICheckAssertion{System.String},System.String,System.String)
  name: DoesNotContain(ICheckAssertion<string>, string, string?)
  href: api/Benday.Common.Testing.StringAssertionExtensions.html#Benday_Common_Testing_StringAssertionExtensions_DoesNotContain_Benday_Common_Testing_ICheckAssertion_System_String__System_String_System_String_
  commentId: M:Benday.Common.Testing.StringAssertionExtensions.DoesNotContain(Benday.Common.Testing.ICheckAssertion{System.String},System.String,System.String)
  name.vb: DoesNotContain(ICheckAssertion(Of String), String, String)
  fullName: Benday.Common.Testing.StringAssertionExtensions.DoesNotContain(Benday.Common.Testing.ICheckAssertion<string>, string, string?)
  fullName.vb: Benday.Common.Testing.StringAssertionExtensions.DoesNotContain(Benday.Common.Testing.ICheckAssertion(Of String), String, String)
  nameWithType: StringAssertionExtensions.DoesNotContain(ICheckAssertion<string>, string, string?)
  nameWithType.vb: StringAssertionExtensions.DoesNotContain(ICheckAssertion(Of String), String, String)
- uid: Benday.Common.Testing.StringAssertionExtensions.DoesNotContain*
  name: DoesNotContain
  href: api/Benday.Common.Testing.StringAssertionExtensions.html#Benday_Common_Testing_StringAssertionExtensions_DoesNotContain_
  commentId: Overload:Benday.Common.Testing.StringAssertionExtensions.DoesNotContain
  isSpec: "True"
  fullName: Benday.Common.Testing.StringAssertionExtensions.DoesNotContain
  nameWithType: StringAssertionExtensions.DoesNotContain
- uid: Benday.Common.Testing.StringAssertionExtensions.DoesNotContainCaseInsensitive(Benday.Common.Testing.ICheckAssertion{System.String},System.String,System.String)
  name: DoesNotContainCaseInsensitive(ICheckAssertion<string>, string, string?)
  href: api/Benday.Common.Testing.StringAssertionExtensions.html#Benday_Common_Testing_StringAssertionExtensions_DoesNotContainCaseInsensitive_Benday_Common_Testing_ICheckAssertion_System_String__System_String_System_String_
  commentId: M:Benday.Common.Testing.StringAssertionExtensions.DoesNotContainCaseInsensitive(Benday.Common.Testing.ICheckAssertion{System.String},System.String,System.String)
  name.vb: DoesNotContainCaseInsensitive(ICheckAssertion(Of String), String, String)
  fullName: Benday.Common.Testing.StringAssertionExtensions.DoesNotContainCaseInsensitive(Benday.Common.Testing.ICheckAssertion<string>, string, string?)
  fullName.vb: Benday.Common.Testing.StringAssertionExtensions.DoesNotContainCaseInsensitive(Benday.Common.Testing.ICheckAssertion(Of String), String, String)
  nameWithType: StringAssertionExtensions.DoesNotContainCaseInsensitive(ICheckAssertion<string>, string, string?)
  nameWithType.vb: StringAssertionExtensions.DoesNotContainCaseInsensitive(ICheckAssertion(Of String), String, String)
- uid: Benday.Common.Testing.StringAssertionExtensions.DoesNotContainCaseInsensitive*
  name: DoesNotContainCaseInsensitive
  href: api/Benday.Common.Testing.StringAssertionExtensions.html#Benday_Common_Testing_StringAssertionExtensions_DoesNotContainCaseInsensitive_
  commentId: Overload:Benday.Common.Testing.StringAssertionExtensions.DoesNotContainCaseInsensitive
  isSpec: "True"
  fullName: Benday.Common.Testing.StringAssertionExtensions.DoesNotContainCaseInsensitive
  nameWithType: StringAssertionExtensions.DoesNotContainCaseInsensitive
- uid: Benday.Common.Testing.StringAssertionExtensions.DoesNotEndWith(Benday.Common.Testing.ICheckAssertion{System.String},System.String,System.String)
  name: DoesNotEndWith(ICheckAssertion<string>, string, string?)
  href: api/Benday.Common.Testing.StringAssertionExtensions.html#Benday_Common_Testing_StringAssertionExtensions_DoesNotEndWith_Benday_Common_Testing_ICheckAssertion_System_String__System_String_System_String_
  commentId: M:Benday.Common.Testing.StringAssertionExtensions.DoesNotEndWith(Benday.Common.Testing.ICheckAssertion{System.String},System.String,System.String)
  name.vb: DoesNotEndWith(ICheckAssertion(Of String), String, String)
  fullName: Benday.Common.Testing.StringAssertionExtensions.DoesNotEndWith(Benday.Common.Testing.ICheckAssertion<string>, string, string?)
  fullName.vb: Benday.Common.Testing.StringAssertionExtensions.DoesNotEndWith(Benday.Common.Testing.ICheckAssertion(Of String), String, String)
  nameWithType: StringAssertionExtensions.DoesNotEndWith(ICheckAssertion<string>, string, string?)
  nameWithType.vb: StringAssertionExtensions.DoesNotEndWith(ICheckAssertion(Of String), String, String)
- uid: Benday.Common.Testing.StringAssertionExtensions.DoesNotEndWith*
  name: DoesNotEndWith
  href: api/Benday.Common.Testing.StringAssertionExtensions.html#Benday_Common_Testing_StringAssertionExtensions_DoesNotEndWith_
  commentId: Overload:Benday.Common.Testing.StringAssertionExtensions.DoesNotEndWith
  isSpec: "True"
  fullName: Benday.Common.Testing.StringAssertionExtensions.DoesNotEndWith
  nameWithType: StringAssertionExtensions.DoesNotEndWith
- uid: Benday.Common.Testing.StringAssertionExtensions.DoesNotEndWithCaseInsensitive(Benday.Common.Testing.ICheckAssertion{System.String},System.String,System.String)
  name: DoesNotEndWithCaseInsensitive(ICheckAssertion<string>, string, string?)
  href: api/Benday.Common.Testing.StringAssertionExtensions.html#Benday_Common_Testing_StringAssertionExtensions_DoesNotEndWithCaseInsensitive_Benday_Common_Testing_ICheckAssertion_System_String__System_String_System_String_
  commentId: M:Benday.Common.Testing.StringAssertionExtensions.DoesNotEndWithCaseInsensitive(Benday.Common.Testing.ICheckAssertion{System.String},System.String,System.String)
  name.vb: DoesNotEndWithCaseInsensitive(ICheckAssertion(Of String), String, String)
  fullName: Benday.Common.Testing.StringAssertionExtensions.DoesNotEndWithCaseInsensitive(Benday.Common.Testing.ICheckAssertion<string>, string, string?)
  fullName.vb: Benday.Common.Testing.StringAssertionExtensions.DoesNotEndWithCaseInsensitive(Benday.Common.Testing.ICheckAssertion(Of String), String, String)
  nameWithType: StringAssertionExtensions.DoesNotEndWithCaseInsensitive(ICheckAssertion<string>, string, string?)
  nameWithType.vb: StringAssertionExtensions.DoesNotEndWithCaseInsensitive(ICheckAssertion(Of String), String, String)
- uid: Benday.Common.Testing.StringAssertionExtensions.DoesNotEndWithCaseInsensitive*
  name: DoesNotEndWithCaseInsensitive
  href: api/Benday.Common.Testing.StringAssertionExtensions.html#Benday_Common_Testing_StringAssertionExtensions_DoesNotEndWithCaseInsensitive_
  commentId: Overload:Benday.Common.Testing.StringAssertionExtensions.DoesNotEndWithCaseInsensitive
  isSpec: "True"
  fullName: Benday.Common.Testing.StringAssertionExtensions.DoesNotEndWithCaseInsensitive
  nameWithType: StringAssertionExtensions.DoesNotEndWithCaseInsensitive
- uid: Benday.Common.Testing.StringAssertionExtensions.DoesNotStartWith(Benday.Common.Testing.ICheckAssertion{System.String},System.String,System.String)
  name: DoesNotStartWith(ICheckAssertion<string>, string, string?)
  href: api/Benday.Common.Testing.StringAssertionExtensions.html#Benday_Common_Testing_StringAssertionExtensions_DoesNotStartWith_Benday_Common_Testing_ICheckAssertion_System_String__System_String_System_String_
  commentId: M:Benday.Common.Testing.StringAssertionExtensions.DoesNotStartWith(Benday.Common.Testing.ICheckAssertion{System.String},System.String,System.String)
  name.vb: DoesNotStartWith(ICheckAssertion(Of String), String, String)
  fullName: Benday.Common.Testing.StringAssertionExtensions.DoesNotStartWith(Benday.Common.Testing.ICheckAssertion<string>, string, string?)
  fullName.vb: Benday.Common.Testing.StringAssertionExtensions.DoesNotStartWith(Benday.Common.Testing.ICheckAssertion(Of String), String, String)
  nameWithType: StringAssertionExtensions.DoesNotStartWith(ICheckAssertion<string>, string, string?)
  nameWithType.vb: StringAssertionExtensions.DoesNotStartWith(ICheckAssertion(Of String), String, String)
- uid: Benday.Common.Testing.StringAssertionExtensions.DoesNotStartWith*
  name: DoesNotStartWith
  href: api/Benday.Common.Testing.StringAssertionExtensions.html#Benday_Common_Testing_StringAssertionExtensions_DoesNotStartWith_
  commentId: Overload:Benday.Common.Testing.StringAssertionExtensions.DoesNotStartWith
  isSpec: "True"
  fullName: Benday.Common.Testing.StringAssertionExtensions.DoesNotStartWith
  nameWithType: StringAssertionExtensions.DoesNotStartWith
- uid: Benday.Common.Testing.StringAssertionExtensions.DoesNotStartWithCaseInsensitive(Benday.Common.Testing.ICheckAssertion{System.String},System.String,System.String)
  name: DoesNotStartWithCaseInsensitive(ICheckAssertion<string>, string, string?)
  href: api/Benday.Common.Testing.StringAssertionExtensions.html#Benday_Common_Testing_StringAssertionExtensions_DoesNotStartWithCaseInsensitive_Benday_Common_Testing_ICheckAssertion_System_String__System_String_System_String_
  commentId: M:Benday.Common.Testing.StringAssertionExtensions.DoesNotStartWithCaseInsensitive(Benday.Common.Testing.ICheckAssertion{System.String},System.String,System.String)
  name.vb: DoesNotStartWithCaseInsensitive(ICheckAssertion(Of String), String, String)
  fullName: Benday.Common.Testing.StringAssertionExtensions.DoesNotStartWithCaseInsensitive(Benday.Common.Testing.ICheckAssertion<string>, string, string?)
  fullName.vb: Benday.Common.Testing.StringAssertionExtensions.DoesNotStartWithCaseInsensitive(Benday.Common.Testing.ICheckAssertion(Of String), String, String)
  nameWithType: StringAssertionExtensions.DoesNotStartWithCaseInsensitive(ICheckAssertion<string>, string, string?)
  nameWithType.vb: StringAssertionExtensions.DoesNotStartWithCaseInsensitive(ICheckAssertion(Of String), String, String)
- uid: Benday.Common.Testing.StringAssertionExtensions.DoesNotStartWithCaseInsensitive*
  name: DoesNotStartWithCaseInsensitive
  href: api/Benday.Common.Testing.StringAssertionExtensions.html#Benday_Common_Testing_StringAssertionExtensions_DoesNotStartWithCaseInsensitive_
  commentId: Overload:Benday.Common.Testing.StringAssertionExtensions.DoesNotStartWithCaseInsensitive
  isSpec: "True"
  fullName: Benday.Common.Testing.StringAssertionExtensions.DoesNotStartWithCaseInsensitive
  nameWithType: StringAssertionExtensions.DoesNotStartWithCaseInsensitive
- uid: Benday.Common.Testing.StringAssertionExtensions.EndsWith(Benday.Common.Testing.ICheckAssertion{System.String},System.String,System.String)
  name: EndsWith(ICheckAssertion<string>, string, string?)
  href: api/Benday.Common.Testing.StringAssertionExtensions.html#Benday_Common_Testing_StringAssertionExtensions_EndsWith_Benday_Common_Testing_ICheckAssertion_System_String__System_String_System_String_
  commentId: M:Benday.Common.Testing.StringAssertionExtensions.EndsWith(Benday.Common.Testing.ICheckAssertion{System.String},System.String,System.String)
  name.vb: EndsWith(ICheckAssertion(Of String), String, String)
  fullName: Benday.Common.Testing.StringAssertionExtensions.EndsWith(Benday.Common.Testing.ICheckAssertion<string>, string, string?)
  fullName.vb: Benday.Common.Testing.StringAssertionExtensions.EndsWith(Benday.Common.Testing.ICheckAssertion(Of String), String, String)
  nameWithType: StringAssertionExtensions.EndsWith(ICheckAssertion<string>, string, string?)
  nameWithType.vb: StringAssertionExtensions.EndsWith(ICheckAssertion(Of String), String, String)
- uid: Benday.Common.Testing.StringAssertionExtensions.EndsWith*
  name: EndsWith
  href: api/Benday.Common.Testing.StringAssertionExtensions.html#Benday_Common_Testing_StringAssertionExtensions_EndsWith_
  commentId: Overload:Benday.Common.Testing.StringAssertionExtensions.EndsWith
  isSpec: "True"
  fullName: Benday.Common.Testing.StringAssertionExtensions.EndsWith
  nameWithType: StringAssertionExtensions.EndsWith
- uid: Benday.Common.Testing.StringAssertionExtensions.EndsWithCaseInsensitive(Benday.Common.Testing.ICheckAssertion{System.String},System.String,System.String)
  name: EndsWithCaseInsensitive(ICheckAssertion<string>, string, string?)
  href: api/Benday.Common.Testing.StringAssertionExtensions.html#Benday_Common_Testing_StringAssertionExtensions_EndsWithCaseInsensitive_Benday_Common_Testing_ICheckAssertion_System_String__System_String_System_String_
  commentId: M:Benday.Common.Testing.StringAssertionExtensions.EndsWithCaseInsensitive(Benday.Common.Testing.ICheckAssertion{System.String},System.String,System.String)
  name.vb: EndsWithCaseInsensitive(ICheckAssertion(Of String), String, String)
  fullName: Benday.Common.Testing.StringAssertionExtensions.EndsWithCaseInsensitive(Benday.Common.Testing.ICheckAssertion<string>, string, string?)
  fullName.vb: Benday.Common.Testing.StringAssertionExtensions.EndsWithCaseInsensitive(Benday.Common.Testing.ICheckAssertion(Of String), String, String)
  nameWithType: StringAssertionExtensions.EndsWithCaseInsensitive(ICheckAssertion<string>, string, string?)
  nameWithType.vb: StringAssertionExtensions.EndsWithCaseInsensitive(ICheckAssertion(Of String), String, String)
- uid: Benday.Common.Testing.StringAssertionExtensions.EndsWithCaseInsensitive*
  name: EndsWithCaseInsensitive
  href: api/Benday.Common.Testing.StringAssertionExtensions.html#Benday_Common_Testing_StringAssertionExtensions_EndsWithCaseInsensitive_
  commentId: Overload:Benday.Common.Testing.StringAssertionExtensions.EndsWithCaseInsensitive
  isSpec: "True"
  fullName: Benday.Common.Testing.StringAssertionExtensions.EndsWithCaseInsensitive
  nameWithType: StringAssertionExtensions.EndsWithCaseInsensitive
- uid: Benday.Common.Testing.StringAssertionExtensions.IsEqualCaseInsensitiveTo(Benday.Common.Testing.ICheckAssertion{System.String},System.String,System.String)
  name: IsEqualCaseInsensitiveTo(ICheckAssertion<string>, string?, string?)
  href: api/Benday.Common.Testing.StringAssertionExtensions.html#Benday_Common_Testing_StringAssertionExtensions_IsEqualCaseInsensitiveTo_Benday_Common_Testing_ICheckAssertion_System_String__System_String_System_String_
  commentId: M:Benday.Common.Testing.StringAssertionExtensions.IsEqualCaseInsensitiveTo(Benday.Common.Testing.ICheckAssertion{System.String},System.String,System.String)
  name.vb: IsEqualCaseInsensitiveTo(ICheckAssertion(Of String), String, String)
  fullName: Benday.Common.Testing.StringAssertionExtensions.IsEqualCaseInsensitiveTo(Benday.Common.Testing.ICheckAssertion<string>, string?, string?)
  fullName.vb: Benday.Common.Testing.StringAssertionExtensions.IsEqualCaseInsensitiveTo(Benday.Common.Testing.ICheckAssertion(Of String), String, String)
  nameWithType: StringAssertionExtensions.IsEqualCaseInsensitiveTo(ICheckAssertion<string>, string?, string?)
  nameWithType.vb: StringAssertionExtensions.IsEqualCaseInsensitiveTo(ICheckAssertion(Of String), String, String)
- uid: Benday.Common.Testing.StringAssertionExtensions.IsEqualCaseInsensitiveTo*
  name: IsEqualCaseInsensitiveTo
  href: api/Benday.Common.Testing.StringAssertionExtensions.html#Benday_Common_Testing_StringAssertionExtensions_IsEqualCaseInsensitiveTo_
  commentId: Overload:Benday.Common.Testing.StringAssertionExtensions.IsEqualCaseInsensitiveTo
  isSpec: "True"
  fullName: Benday.Common.Testing.StringAssertionExtensions.IsEqualCaseInsensitiveTo
  nameWithType: StringAssertionExtensions.IsEqualCaseInsensitiveTo
- uid: Benday.Common.Testing.StringAssertionExtensions.IsEqualTo(Benday.Common.Testing.ICheckAssertion{System.String},System.String,System.String)
  name: IsEqualTo(ICheckAssertion<string>, string, string?)
  href: api/Benday.Common.Testing.StringAssertionExtensions.html#Benday_Common_Testing_StringAssertionExtensions_IsEqualTo_Benday_Common_Testing_ICheckAssertion_System_String__System_String_System_String_
  commentId: M:Benday.Common.Testing.StringAssertionExtensions.IsEqualTo(Benday.Common.Testing.ICheckAssertion{System.String},System.String,System.String)
  name.vb: IsEqualTo(ICheckAssertion(Of String), String, String)
  fullName: Benday.Common.Testing.StringAssertionExtensions.IsEqualTo(Benday.Common.Testing.ICheckAssertion<string>, string, string?)
  fullName.vb: Benday.Common.Testing.StringAssertionExtensions.IsEqualTo(Benday.Common.Testing.ICheckAssertion(Of String), String, String)
  nameWithType: StringAssertionExtensions.IsEqualTo(ICheckAssertion<string>, string, string?)
  nameWithType.vb: StringAssertionExtensions.IsEqualTo(ICheckAssertion(Of String), String, String)
- uid: Benday.Common.Testing.StringAssertionExtensions.IsEqualTo*
  name: IsEqualTo
  href: api/Benday.Common.Testing.StringAssertionExtensions.html#Benday_Common_Testing_StringAssertionExtensions_IsEqualTo_
  commentId: Overload:Benday.Common.Testing.StringAssertionExtensions.IsEqualTo
  isSpec: "True"
  fullName: Benday.Common.Testing.StringAssertionExtensions.IsEqualTo
  nameWithType: StringAssertionExtensions.IsEqualTo
- uid: Benday.Common.Testing.StringAssertionExtensions.IsNotEqualTo(Benday.Common.Testing.ICheckAssertion{System.String},System.String,System.String)
  name: IsNotEqualTo(ICheckAssertion<string>, string?, string?)
  href: api/Benday.Common.Testing.StringAssertionExtensions.html#Benday_Common_Testing_StringAssertionExtensions_IsNotEqualTo_Benday_Common_Testing_ICheckAssertion_System_String__System_String_System_String_
  commentId: M:Benday.Common.Testing.StringAssertionExtensions.IsNotEqualTo(Benday.Common.Testing.ICheckAssertion{System.String},System.String,System.String)
  name.vb: IsNotEqualTo(ICheckAssertion(Of String), String, String)
  fullName: Benday.Common.Testing.StringAssertionExtensions.IsNotEqualTo(Benday.Common.Testing.ICheckAssertion<string>, string?, string?)
  fullName.vb: Benday.Common.Testing.StringAssertionExtensions.IsNotEqualTo(Benday.Common.Testing.ICheckAssertion(Of String), String, String)
  nameWithType: StringAssertionExtensions.IsNotEqualTo(ICheckAssertion<string>, string?, string?)
  nameWithType.vb: StringAssertionExtensions.IsNotEqualTo(ICheckAssertion(Of String), String, String)
- uid: Benday.Common.Testing.StringAssertionExtensions.IsNotEqualTo*
  name: IsNotEqualTo
  href: api/Benday.Common.Testing.StringAssertionExtensions.html#Benday_Common_Testing_StringAssertionExtensions_IsNotEqualTo_
  commentId: Overload:Benday.Common.Testing.StringAssertionExtensions.IsNotEqualTo
  isSpec: "True"
  fullName: Benday.Common.Testing.StringAssertionExtensions.IsNotEqualTo
  nameWithType: StringAssertionExtensions.IsNotEqualTo
- uid: Benday.Common.Testing.StringAssertionExtensions.IsNotNullOrEmpty(Benday.Common.Testing.ICheckAssertion{System.String},System.String)
  name: IsNotNullOrEmpty(ICheckAssertion<string>, string?)
  href: api/Benday.Common.Testing.StringAssertionExtensions.html#Benday_Common_Testing_StringAssertionExtensions_IsNotNullOrEmpty_Benday_Common_Testing_ICheckAssertion_System_String__System_String_
  commentId: M:Benday.Common.Testing.StringAssertionExtensions.IsNotNullOrEmpty(Benday.Common.Testing.ICheckAssertion{System.String},System.String)
  name.vb: IsNotNullOrEmpty(ICheckAssertion(Of String), String)
  fullName: Benday.Common.Testing.StringAssertionExtensions.IsNotNullOrEmpty(Benday.Common.Testing.ICheckAssertion<string>, string?)
  fullName.vb: Benday.Common.Testing.StringAssertionExtensions.IsNotNullOrEmpty(Benday.Common.Testing.ICheckAssertion(Of String), String)
  nameWithType: StringAssertionExtensions.IsNotNullOrEmpty(ICheckAssertion<string>, string?)
  nameWithType.vb: StringAssertionExtensions.IsNotNullOrEmpty(ICheckAssertion(Of String), String)
- uid: Benday.Common.Testing.StringAssertionExtensions.IsNotNullOrEmpty*
  name: IsNotNullOrEmpty
  href: api/Benday.Common.Testing.StringAssertionExtensions.html#Benday_Common_Testing_StringAssertionExtensions_IsNotNullOrEmpty_
  commentId: Overload:Benday.Common.Testing.StringAssertionExtensions.IsNotNullOrEmpty
  isSpec: "True"
  fullName: Benday.Common.Testing.StringAssertionExtensions.IsNotNullOrEmpty
  nameWithType: StringAssertionExtensions.IsNotNullOrEmpty
- uid: Benday.Common.Testing.StringAssertionExtensions.IsNotNullOrWhitespace(Benday.Common.Testing.ICheckAssertion{System.String},System.String)
  name: IsNotNullOrWhitespace(ICheckAssertion<string>, string?)
  href: api/Benday.Common.Testing.StringAssertionExtensions.html#Benday_Common_Testing_StringAssertionExtensions_IsNotNullOrWhitespace_Benday_Common_Testing_ICheckAssertion_System_String__System_String_
  commentId: M:Benday.Common.Testing.StringAssertionExtensions.IsNotNullOrWhitespace(Benday.Common.Testing.ICheckAssertion{System.String},System.String)
  name.vb: IsNotNullOrWhitespace(ICheckAssertion(Of String), String)
  fullName: Benday.Common.Testing.StringAssertionExtensions.IsNotNullOrWhitespace(Benday.Common.Testing.ICheckAssertion<string>, string?)
  fullName.vb: Benday.Common.Testing.StringAssertionExtensions.IsNotNullOrWhitespace(Benday.Common.Testing.ICheckAssertion(Of String), String)
  nameWithType: StringAssertionExtensions.IsNotNullOrWhitespace(ICheckAssertion<string>, string?)
  nameWithType.vb: StringAssertionExtensions.IsNotNullOrWhitespace(ICheckAssertion(Of String), String)
- uid: Benday.Common.Testing.StringAssertionExtensions.IsNotNullOrWhitespace*
  name: IsNotNullOrWhitespace
  href: api/Benday.Common.Testing.StringAssertionExtensions.html#Benday_Common_Testing_StringAssertionExtensions_IsNotNullOrWhitespace_
  commentId: Overload:Benday.Common.Testing.StringAssertionExtensions.IsNotNullOrWhitespace
  isSpec: "True"
  fullName: Benday.Common.Testing.StringAssertionExtensions.IsNotNullOrWhitespace
  nameWithType: StringAssertionExtensions.IsNotNullOrWhitespace
- uid: Benday.Common.Testing.StringAssertionExtensions.StartsWith(Benday.Common.Testing.ICheckAssertion{System.String},System.String,System.String)
  name: StartsWith(ICheckAssertion<string>, string, string?)
  href: api/Benday.Common.Testing.StringAssertionExtensions.html#Benday_Common_Testing_StringAssertionExtensions_StartsWith_Benday_Common_Testing_ICheckAssertion_System_String__System_String_System_String_
  commentId: M:Benday.Common.Testing.StringAssertionExtensions.StartsWith(Benday.Common.Testing.ICheckAssertion{System.String},System.String,System.String)
  name.vb: StartsWith(ICheckAssertion(Of String), String, String)
  fullName: Benday.Common.Testing.StringAssertionExtensions.StartsWith(Benday.Common.Testing.ICheckAssertion<string>, string, string?)
  fullName.vb: Benday.Common.Testing.StringAssertionExtensions.StartsWith(Benday.Common.Testing.ICheckAssertion(Of String), String, String)
  nameWithType: StringAssertionExtensions.StartsWith(ICheckAssertion<string>, string, string?)
  nameWithType.vb: StringAssertionExtensions.StartsWith(ICheckAssertion(Of String), String, String)
- uid: Benday.Common.Testing.StringAssertionExtensions.StartsWith*
  name: StartsWith
  href: api/Benday.Common.Testing.StringAssertionExtensions.html#Benday_Common_Testing_StringAssertionExtensions_StartsWith_
  commentId: Overload:Benday.Common.Testing.StringAssertionExtensions.StartsWith
  isSpec: "True"
  fullName: Benday.Common.Testing.StringAssertionExtensions.StartsWith
  nameWithType: StringAssertionExtensions.StartsWith
- uid: Benday.Common.Testing.StringAssertionExtensions.StartsWithCaseInsensitive(Benday.Common.Testing.ICheckAssertion{System.String},System.String,System.String)
  name: StartsWithCaseInsensitive(ICheckAssertion<string>, string, string?)
  href: api/Benday.Common.Testing.StringAssertionExtensions.html#Benday_Common_Testing_StringAssertionExtensions_StartsWithCaseInsensitive_Benday_Common_Testing_ICheckAssertion_System_String__System_String_System_String_
  commentId: M:Benday.Common.Testing.StringAssertionExtensions.StartsWithCaseInsensitive(Benday.Common.Testing.ICheckAssertion{System.String},System.String,System.String)
  name.vb: StartsWithCaseInsensitive(ICheckAssertion(Of String), String, String)
  fullName: Benday.Common.Testing.StringAssertionExtensions.StartsWithCaseInsensitive(Benday.Common.Testing.ICheckAssertion<string>, string, string?)
  fullName.vb: Benday.Common.Testing.StringAssertionExtensions.StartsWithCaseInsensitive(Benday.Common.Testing.ICheckAssertion(Of String), String, String)
  nameWithType: StringAssertionExtensions.StartsWithCaseInsensitive(ICheckAssertion<string>, string, string?)
  nameWithType.vb: StringAssertionExtensions.StartsWithCaseInsensitive(ICheckAssertion(Of String), String, String)
- uid: Benday.Common.Testing.StringAssertionExtensions.StartsWithCaseInsensitive*
  name: StartsWithCaseInsensitive
  href: api/Benday.Common.Testing.StringAssertionExtensions.html#Benday_Common_Testing_StringAssertionExtensions_StartsWithCaseInsensitive_
  commentId: Overload:Benday.Common.Testing.StringAssertionExtensions.StartsWithCaseInsensitive
  isSpec: "True"
  fullName: Benday.Common.Testing.StringAssertionExtensions.StartsWithCaseInsensitive
  nameWithType: StringAssertionExtensions.StartsWithCaseInsensitive
- uid: Benday.Common.Testing.TestClassBase
  name: TestClassBase
  href: api/Benday.Common.Testing.TestClassBase.html
  commentId: T:Benday.Common.Testing.TestClassBase
  fullName: Benday.Common.Testing.TestClassBase
  nameWithType: TestClassBase
- uid: Benday.Common.Testing.TestClassBase.#ctor(Xunit.Abstractions.ITestOutputHelper)
  name: TestClassBase(ITestOutputHelper)
  href: api/Benday.Common.Testing.TestClassBase.html#Benday_Common_Testing_TestClassBase__ctor_Xunit_Abstractions_ITestOutputHelper_
  commentId: M:Benday.Common.Testing.TestClassBase.#ctor(Xunit.Abstractions.ITestOutputHelper)
  name.vb: New(ITestOutputHelper)
  fullName: Benday.Common.Testing.TestClassBase.TestClassBase(Xunit.Abstractions.ITestOutputHelper)
  fullName.vb: Benday.Common.Testing.TestClassBase.New(Xunit.Abstractions.ITestOutputHelper)
  nameWithType: TestClassBase.TestClassBase(ITestOutputHelper)
  nameWithType.vb: TestClassBase.New(ITestOutputHelper)
- uid: Benday.Common.Testing.TestClassBase.#ctor*
  name: TestClassBase
  href: api/Benday.Common.Testing.TestClassBase.html#Benday_Common_Testing_TestClassBase__ctor_
  commentId: Overload:Benday.Common.Testing.TestClassBase.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Benday.Common.Testing.TestClassBase.TestClassBase
  fullName.vb: Benday.Common.Testing.TestClassBase.New
  nameWithType: TestClassBase.TestClassBase
  nameWithType.vb: TestClassBase.New
- uid: Benday.Common.Testing.TestClassBase.GetPathToSampleFilesDirectory
  name: GetPathToSampleFilesDirectory()
  href: api/Benday.Common.Testing.TestClassBase.html#Benday_Common_Testing_TestClassBase_GetPathToSampleFilesDirectory
  commentId: M:Benday.Common.Testing.TestClassBase.GetPathToSampleFilesDirectory
  fullName: Benday.Common.Testing.TestClassBase.GetPathToSampleFilesDirectory()
  nameWithType: TestClassBase.GetPathToSampleFilesDirectory()
- uid: Benday.Common.Testing.TestClassBase.GetPathToSampleFilesDirectory(System.String)
  name: GetPathToSampleFilesDirectory(string)
  href: api/Benday.Common.Testing.TestClassBase.html#Benday_Common_Testing_TestClassBase_GetPathToSampleFilesDirectory_System_String_
  commentId: M:Benday.Common.Testing.TestClassBase.GetPathToSampleFilesDirectory(System.String)
  name.vb: GetPathToSampleFilesDirectory(String)
  fullName: Benday.Common.Testing.TestClassBase.GetPathToSampleFilesDirectory(string)
  fullName.vb: Benday.Common.Testing.TestClassBase.GetPathToSampleFilesDirectory(String)
  nameWithType: TestClassBase.GetPathToSampleFilesDirectory(string)
  nameWithType.vb: TestClassBase.GetPathToSampleFilesDirectory(String)
- uid: Benday.Common.Testing.TestClassBase.GetPathToSampleFilesDirectory*
  name: GetPathToSampleFilesDirectory
  href: api/Benday.Common.Testing.TestClassBase.html#Benday_Common_Testing_TestClassBase_GetPathToSampleFilesDirectory_
  commentId: Overload:Benday.Common.Testing.TestClassBase.GetPathToSampleFilesDirectory
  isSpec: "True"
  fullName: Benday.Common.Testing.TestClassBase.GetPathToSampleFilesDirectory
  nameWithType: TestClassBase.GetPathToSampleFilesDirectory
- uid: Benday.Common.Testing.TestClassBase.GetPathToTestFile(System.String)
  name: GetPathToTestFile(string)
  href: api/Benday.Common.Testing.TestClassBase.html#Benday_Common_Testing_TestClassBase_GetPathToTestFile_System_String_
  commentId: M:Benday.Common.Testing.TestClassBase.GetPathToTestFile(System.String)
  name.vb: GetPathToTestFile(String)
  fullName: Benday.Common.Testing.TestClassBase.GetPathToTestFile(string)
  fullName.vb: Benday.Common.Testing.TestClassBase.GetPathToTestFile(String)
  nameWithType: TestClassBase.GetPathToTestFile(string)
  nameWithType.vb: TestClassBase.GetPathToTestFile(String)
- uid: Benday.Common.Testing.TestClassBase.GetPathToTestFile*
  name: GetPathToTestFile
  href: api/Benday.Common.Testing.TestClassBase.html#Benday_Common_Testing_TestClassBase_GetPathToTestFile_
  commentId: Overload:Benday.Common.Testing.TestClassBase.GetPathToTestFile
  isSpec: "True"
  fullName: Benday.Common.Testing.TestClassBase.GetPathToTestFile
  nameWithType: TestClassBase.GetPathToTestFile
- uid: Benday.Common.Testing.TestClassBase.GetSampleFilePath(System.String)
  name: GetSampleFilePath(string)
  href: api/Benday.Common.Testing.TestClassBase.html#Benday_Common_Testing_TestClassBase_GetSampleFilePath_System_String_
  commentId: M:Benday.Common.Testing.TestClassBase.GetSampleFilePath(System.String)
  name.vb: GetSampleFilePath(String)
  fullName: Benday.Common.Testing.TestClassBase.GetSampleFilePath(string)
  fullName.vb: Benday.Common.Testing.TestClassBase.GetSampleFilePath(String)
  nameWithType: TestClassBase.GetSampleFilePath(string)
  nameWithType.vb: TestClassBase.GetSampleFilePath(String)
- uid: Benday.Common.Testing.TestClassBase.GetSampleFilePath*
  name: GetSampleFilePath
  href: api/Benday.Common.Testing.TestClassBase.html#Benday_Common_Testing_TestClassBase_GetSampleFilePath_
  commentId: Overload:Benday.Common.Testing.TestClassBase.GetSampleFilePath
  isSpec: "True"
  fullName: Benday.Common.Testing.TestClassBase.GetSampleFilePath
  nameWithType: TestClassBase.GetSampleFilePath
- uid: Benday.Common.Testing.TestClassBase.GetSampleFileText(System.String)
  name: GetSampleFileText(string)
  href: api/Benday.Common.Testing.TestClassBase.html#Benday_Common_Testing_TestClassBase_GetSampleFileText_System_String_
  commentId: M:Benday.Common.Testing.TestClassBase.GetSampleFileText(System.String)
  name.vb: GetSampleFileText(String)
  fullName: Benday.Common.Testing.TestClassBase.GetSampleFileText(string)
  fullName.vb: Benday.Common.Testing.TestClassBase.GetSampleFileText(String)
  nameWithType: TestClassBase.GetSampleFileText(string)
  nameWithType.vb: TestClassBase.GetSampleFileText(String)
- uid: Benday.Common.Testing.TestClassBase.GetSampleFileText*
  name: GetSampleFileText
  href: api/Benday.Common.Testing.TestClassBase.html#Benday_Common_Testing_TestClassBase_GetSampleFileText_
  commentId: Overload:Benday.Common.Testing.TestClassBase.GetSampleFileText
  isSpec: "True"
  fullName: Benday.Common.Testing.TestClassBase.GetSampleFileText
  nameWithType: TestClassBase.GetSampleFileText
- uid: Benday.Common.Testing.TestClassBase.SampleFilesDirectoryName
  name: SampleFilesDirectoryName
  href: api/Benday.Common.Testing.TestClassBase.html#Benday_Common_Testing_TestClassBase_SampleFilesDirectoryName
  commentId: P:Benday.Common.Testing.TestClassBase.SampleFilesDirectoryName
  fullName: Benday.Common.Testing.TestClassBase.SampleFilesDirectoryName
  nameWithType: TestClassBase.SampleFilesDirectoryName
- uid: Benday.Common.Testing.TestClassBase.SampleFilesDirectoryName*
  name: SampleFilesDirectoryName
  href: api/Benday.Common.Testing.TestClassBase.html#Benday_Common_Testing_TestClassBase_SampleFilesDirectoryName_
  commentId: Overload:Benday.Common.Testing.TestClassBase.SampleFilesDirectoryName
  isSpec: "True"
  fullName: Benday.Common.Testing.TestClassBase.SampleFilesDirectoryName
  nameWithType: TestClassBase.SampleFilesDirectoryName
- uid: Benday.Common.Testing.TestClassBase.WriteLine(System.String)
  name: WriteLine(string)
  href: api/Benday.Common.Testing.TestClassBase.html#Benday_Common_Testing_TestClassBase_WriteLine_System_String_
  commentId: M:Benday.Common.Testing.TestClassBase.WriteLine(System.String)
  name.vb: WriteLine(String)
  fullName: Benday.Common.Testing.TestClassBase.WriteLine(string)
  fullName.vb: Benday.Common.Testing.TestClassBase.WriteLine(String)
  nameWithType: TestClassBase.WriteLine(string)
  nameWithType.vb: TestClassBase.WriteLine(String)
- uid: Benday.Common.Testing.TestClassBase.WriteLine*
  name: WriteLine
  href: api/Benday.Common.Testing.TestClassBase.html#Benday_Common_Testing_TestClassBase_WriteLine_
  commentId: Overload:Benday.Common.Testing.TestClassBase.WriteLine
  isSpec: "True"
  fullName: Benday.Common.Testing.TestClassBase.WriteLine
  nameWithType: TestClassBase.WriteLine
- uid: Benday.Common.TypeRegistrationItem`2
  name: TypeRegistrationItem<TService, TImplementation>
  href: api/Benday.Common.TypeRegistrationItem-2.html
  commentId: T:Benday.Common.TypeRegistrationItem`2
  name.vb: TypeRegistrationItem(Of TService, TImplementation)
  fullName: Benday.Common.TypeRegistrationItem<TService, TImplementation>
  fullName.vb: Benday.Common.TypeRegistrationItem(Of TService, TImplementation)
  nameWithType: TypeRegistrationItem<TService, TImplementation>
  nameWithType.vb: TypeRegistrationItem(Of TService, TImplementation)
- uid: Benday.Common.TypeRegistrationItem`2.#ctor(Microsoft.Extensions.DependencyInjection.ServiceLifetime)
  name: TypeRegistrationItem(ServiceLifetime)
  href: api/Benday.Common.TypeRegistrationItem-2.html#Benday_Common_TypeRegistrationItem_2__ctor_Microsoft_Extensions_DependencyInjection_ServiceLifetime_
  commentId: M:Benday.Common.TypeRegistrationItem`2.#ctor(Microsoft.Extensions.DependencyInjection.ServiceLifetime)
  name.vb: New(ServiceLifetime)
  fullName: Benday.Common.TypeRegistrationItem<TService, TImplementation>.TypeRegistrationItem(Microsoft.Extensions.DependencyInjection.ServiceLifetime)
  fullName.vb: Benday.Common.TypeRegistrationItem(Of TService, TImplementation).New(Microsoft.Extensions.DependencyInjection.ServiceLifetime)
  nameWithType: TypeRegistrationItem<TService, TImplementation>.TypeRegistrationItem(ServiceLifetime)
  nameWithType.vb: TypeRegistrationItem(Of TService, TImplementation).New(ServiceLifetime)
- uid: Benday.Common.TypeRegistrationItem`2.#ctor*
  name: TypeRegistrationItem
  href: api/Benday.Common.TypeRegistrationItem-2.html#Benday_Common_TypeRegistrationItem_2__ctor_
  commentId: Overload:Benday.Common.TypeRegistrationItem`2.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Benday.Common.TypeRegistrationItem<TService, TImplementation>.TypeRegistrationItem
  fullName.vb: Benday.Common.TypeRegistrationItem(Of TService, TImplementation).New
  nameWithType: TypeRegistrationItem<TService, TImplementation>.TypeRegistrationItem
  nameWithType.vb: TypeRegistrationItem(Of TService, TImplementation).New
- uid: Benday.Common.TypeRegistrationItem`2.ImplementationType
  name: ImplementationType
  href: api/Benday.Common.TypeRegistrationItem-2.html#Benday_Common_TypeRegistrationItem_2_ImplementationType
  commentId: P:Benday.Common.TypeRegistrationItem`2.ImplementationType
  fullName: Benday.Common.TypeRegistrationItem<TService, TImplementation>.ImplementationType
  fullName.vb: Benday.Common.TypeRegistrationItem(Of TService, TImplementation).ImplementationType
  nameWithType: TypeRegistrationItem<TService, TImplementation>.ImplementationType
  nameWithType.vb: TypeRegistrationItem(Of TService, TImplementation).ImplementationType
- uid: Benday.Common.TypeRegistrationItem`2.ImplementationType*
  name: ImplementationType
  href: api/Benday.Common.TypeRegistrationItem-2.html#Benday_Common_TypeRegistrationItem_2_ImplementationType_
  commentId: Overload:Benday.Common.TypeRegistrationItem`2.ImplementationType
  isSpec: "True"
  fullName: Benday.Common.TypeRegistrationItem<TService, TImplementation>.ImplementationType
  fullName.vb: Benday.Common.TypeRegistrationItem(Of TService, TImplementation).ImplementationType
  nameWithType: TypeRegistrationItem<TService, TImplementation>.ImplementationType
  nameWithType.vb: TypeRegistrationItem(Of TService, TImplementation).ImplementationType
- uid: Benday.Common.TypeRegistrationItem`2.Lifetime
  name: Lifetime
  href: api/Benday.Common.TypeRegistrationItem-2.html#Benday_Common_TypeRegistrationItem_2_Lifetime
  commentId: P:Benday.Common.TypeRegistrationItem`2.Lifetime
  fullName: Benday.Common.TypeRegistrationItem<TService, TImplementation>.Lifetime
  fullName.vb: Benday.Common.TypeRegistrationItem(Of TService, TImplementation).Lifetime
  nameWithType: TypeRegistrationItem<TService, TImplementation>.Lifetime
  nameWithType.vb: TypeRegistrationItem(Of TService, TImplementation).Lifetime
- uid: Benday.Common.TypeRegistrationItem`2.Lifetime*
  name: Lifetime
  href: api/Benday.Common.TypeRegistrationItem-2.html#Benday_Common_TypeRegistrationItem_2_Lifetime_
  commentId: Overload:Benday.Common.TypeRegistrationItem`2.Lifetime
  isSpec: "True"
  fullName: Benday.Common.TypeRegistrationItem<TService, TImplementation>.Lifetime
  fullName.vb: Benday.Common.TypeRegistrationItem(Of TService, TImplementation).Lifetime
  nameWithType: TypeRegistrationItem<TService, TImplementation>.Lifetime
  nameWithType.vb: TypeRegistrationItem(Of TService, TImplementation).Lifetime
- uid: Benday.Common.TypeRegistrationItem`2.ServiceType
  name: ServiceType
  href: api/Benday.Common.TypeRegistrationItem-2.html#Benday_Common_TypeRegistrationItem_2_ServiceType
  commentId: P:Benday.Common.TypeRegistrationItem`2.ServiceType
  fullName: Benday.Common.TypeRegistrationItem<TService, TImplementation>.ServiceType
  fullName.vb: Benday.Common.TypeRegistrationItem(Of TService, TImplementation).ServiceType
  nameWithType: TypeRegistrationItem<TService, TImplementation>.ServiceType
  nameWithType.vb: TypeRegistrationItem(Of TService, TImplementation).ServiceType
- uid: Benday.Common.TypeRegistrationItem`2.ServiceType*
  name: ServiceType
  href: api/Benday.Common.TypeRegistrationItem-2.html#Benday_Common_TypeRegistrationItem_2_ServiceType_
  commentId: Overload:Benday.Common.TypeRegistrationItem`2.ServiceType
  isSpec: "True"
  fullName: Benday.Common.TypeRegistrationItem<TService, TImplementation>.ServiceType
  fullName.vb: Benday.Common.TypeRegistrationItem(Of TService, TImplementation).ServiceType
  nameWithType: TypeRegistrationItem<TService, TImplementation>.ServiceType
  nameWithType.vb: TypeRegistrationItem(Of TService, TImplementation).ServiceType
